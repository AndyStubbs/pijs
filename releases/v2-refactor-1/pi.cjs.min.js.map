{
  "version": 3,
  "sources": ["../src/index.js", "../src/core/pi-data.js", "../src/modules/utils.js", "../src/core/command-system.js", "../src/modules/core-commands.js", "../src/modules/screen-helper.js", "../src/modules/screen.js", "../src/modules/screen-commands.js", "../src/modules/graphics-pixel.js", "../src/modules/paint.js", "../src/modules/bezier.js", "../src/modules/images.js", "../src/modules/font.js", "../src/modules/print.js", "../src/modules/table.js", "../src/modules/keyboard.js", "../src/modules/mouse.js", "../src/modules/touch.js", "../src/modules/gamepad.js", "../src/modules/sound.js", "../src/modules/play.js", "../src/modules/draw.js", "../src/assets/font-data.js"],
  "sourcesContent": ["/**\r\n * Pi.js - Main Entry Point\r\n * \r\n * Graphics and sound library for retro-style games and demos.\r\n * Modernized architecture with legacy API compatibility.\r\n * \r\n * @module pi.js\r\n * @author Andy Stubbs\r\n * @license Apache-2.0\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { piData, defaultPaletteHex } from \"./core/pi-data.js\";\r\nimport * as cmd from \"./core/command-system.js\";\r\nimport * as utils from \"./modules/utils.js\";\r\nimport * as core from \"./modules/core-commands.js\";\r\nimport * as helper from \"./modules/screen-helper.js\";\r\nimport * as screen from \"./modules/screen.js\";\r\nimport * as screenCmd from \"./modules/screen-commands.js\";\r\nimport * as graphics from \"./modules/graphics-pixel.js\";\r\nimport * as paint from \"./modules/paint.js\";\r\nimport * as bezier from \"./modules/bezier.js\";\r\nimport * as images from \"./modules/images.js\";\r\nimport * as font from \"./modules/font.js\";\r\nimport * as print from \"./modules/print.js\";\r\nimport * as table from \"./modules/table.js\";\r\nimport * as keyboard from \"./modules/keyboard.js\";\r\nimport * as mouse from \"./modules/mouse.js\";\r\nimport * as touch from \"./modules/touch.js\";\r\nimport * as gamepad from \"./modules/gamepad.js\";\r\nimport * as sound from \"./modules/sound.js\";\r\nimport * as play from \"./modules/play.js\";\r\nimport * as draw from \"./modules/draw.js\";\r\nimport { loadBuiltInFonts } from \"./assets/font-data.js\";\r\n\r\n// Version injected during build from package.json\r\nconst VERSION = \"2.0.0-alpha.1\";\r\n\r\n// Ready system variables\r\nlet waitCount = 0;\r\nlet waiting = false;\r\nconst readyList = [];\r\nlet startReadyListTimeout = 0;\r\n\r\n// Ready/Wait/Resume system functions\r\n\r\nfunction wait() {\r\n\twaitCount++;\r\n\twaiting = true;\r\n}\r\n\r\nfunction resume() {\r\n\twaitCount--;\r\n\tif( waitCount === 0 ) {\r\n\t\tstartReadyList();\r\n\t}\r\n}\r\n\r\nfunction startReadyList() {\r\n\tif( document.readyState !== \"loading\" && waitCount === 0 ) {\r\n\t\twaiting = false;\r\n\t\tconst temp = readyList.slice();\r\n\t\treadyList.length = 0;\r\n\r\n\t\tfor( const fn of temp ) {\r\n\t\t\tfn();\r\n\t\t}\r\n\t} else {\r\n\t\tclearTimeout( startReadyListTimeout );\r\n\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t}\r\n}\r\n\r\n// Create the pi object with _ (internal API for plugins) and util namespaces\r\nconst pi = {\r\n\t\"version\": VERSION,\r\n\t\"_\": {\r\n\t\t\"data\": piData,\r\n\t\t\"addCommand\": cmd.addCommand,\r\n\t\t\"addCommands\": cmd.addCommands,\r\n\t\t\"addSetting\": cmd.addSetting,\r\n\t\t\"addPen\": cmd.addPen,\r\n\t\t\"addBlendCommand\": cmd.addBlendCommand,\r\n\t\t\"parseOptions\": cmd.parseOptions,\r\n\t\t\"wait\": wait,\r\n\t\t\"resume\": resume\r\n\t},\r\n\t\"util\": utils\r\n};\r\n\r\n// Register the ready command\r\ncmd.addCommand( \"ready\", ready, false, false, [ \"fn\" ] );\r\n\r\nfunction ready( args ) {\r\n\tconst fn = args[ 0 ];\r\n\r\n\tif( utils.isFunction( fn ) ) {\r\n\t\tif( waiting ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t} else if( document.readyState === \"loading\" ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t\tclearTimeout( startReadyListTimeout );\r\n\t\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t\t} else {\r\n\t\t\tfn();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Initialize modules\r\nhelper.init( pi );\r\nscreen.init( pi );\r\nscreenCmd.init( pi );\r\ngraphics.init( pi );\r\npaint.init( pi );\r\nbezier.init( pi );\r\nimages.init( pi );\r\nfont.init( pi );\r\nprint.init( pi );\r\ntable.init( pi );\r\nkeyboard.init( pi );\r\nmouse.init( pi );\r\ntouch.init( pi );\r\ngamepad.init( pi );\r\nsound.init( pi );\r\nplay.init( pi );\r\ndraw.init( pi );\r\ncore.init( pi );\r\n\r\n// Initialize default palette (must be after core.init which registers setDefaultPal)\r\npiData.commands.setDefaultPal( [ defaultPaletteHex ] );\r\npiData.commands.setDefaultColor( [ 7 ] );\r\n\r\n// Process all commands and create API methods\r\ncmd.processCommands( pi );\r\n\r\n// Set window.pi for browser environments\r\nif( typeof window !== \"undefined\" ) {\r\n\twindow.pi = pi;\r\n\r\n\t// Set $ alias only if not already defined (avoid jQuery conflicts)\r\n\tif( window.$ === undefined ) {\r\n\t\twindow.$ = pi;\r\n\t}\r\n}\r\n\r\n// Load built-in fonts after API is ready\r\nif( typeof window !== \"undefined\" ) {\r\n\tloadBuiltInFonts( pi );\r\n}\r\n\r\n// Export for different module systems\r\nexport default pi;\r\nexport { pi };\r\n", "/**\r\n * Pi.js - Core Data Module\r\n * \r\n * Central data storage for Pi.js, equivalent to legacy m_piData.\r\n * \r\n * @module core/pi-data\r\n */\r\n\r\n\"use strict\";\r\n\r\n// Default 256-color palette (CGA + extended colors) - raw hex strings\r\n// Will be converted to Pi.js color objects during initialization\r\nexport const defaultPaletteHex = [\r\n\t\"#000000\", \"#0000AA\", \"#00AA00\", \"#00AAAA\", \"#AA0000\",\r\n\t\"#AA00AA\", \"#AA5500\", \"#AAAAAA\", \"#555555\", \"#5555FF\", \"#55FF55\", \"#55FFFF\",\r\n\t\"#FF5555\", \"#FF55FF\", \"#FFFF55\", \"#FFFFFF\", \"#000000\", \"#141414\", \"#202020\",\r\n\t\"#2D2D2D\", \"#393939\", \"#454545\", \"#515151\", \"#616161\", \"#717171\", \"#828282\",\r\n\t\"#929292\", \"#A2A2A2\", \"#B6B6B6\", \"#CACACA\", \"#E3E3E3\", \"#FFFFFF\", \"#0000FF\",\r\n\t\"#4100FF\", \"#7D00FF\", \"#BE00FF\", \"#FF00FF\", \"#FF00BE\", \"#FF007D\", \"#FF0041\",\r\n\t\"#FF0000\", \"#FF4100\", \"#FF7D00\", \"#FFBE00\", \"#FFFF00\", \"#BEFF00\", \"#7DFF00\",\r\n\t\"#41FF00\", \"#00FF00\", \"#00FF41\", \"#00FF7D\", \"#00FFBE\", \"#00FFFF\", \"#00BEFF\",\r\n\t\"#007DFF\", \"#0041FF\", \"#7D7DFF\", \"#9E7DFF\", \"#BE7DFF\", \"#DF7DFF\", \"#FF7DFF\",\r\n\t\"#FF7DDF\", \"#FF7DBE\", \"#FF7D9E\", \"#FF7D7D\", \"#FF9E7D\", \"#FFBE7D\", \"#FFDF7D\",\r\n\t\"#FFFF7D\", \"#DFFF7D\", \"#BEFF7D\", \"#9EFF7D\", \"#7DFF7D\", \"#7DFF9E\", \"#7DFFBE\",\r\n\t\"#7DFFDF\", \"#7DFFFF\", \"#7DDFFF\", \"#7DBEFF\", \"#7D9EFF\", \"#B6B6FF\", \"#C6B6FF\",\r\n\t\"#DBB6FF\", \"#EBB6FF\", \"#FFB6FF\", \"#FFB6EB\", \"#FFB6DB\", \"#FFB6C6\", \"#FFB6B6\",\r\n\t\"#FFC6B6\", \"#FFDBB6\", \"#FFEBB6\", \"#FFFFB6\", \"#EBFFB6\", \"#DBFFB6\", \"#C6FFB6\",\r\n\t\"#B6FFB6\", \"#B6FFC6\", \"#B6FFDB\", \"#B6FFEB\", \"#B6FFFF\", \"#B6EBFF\", \"#B6DBFF\",\r\n\t\"#B6C6FF\", \"#000071\", \"#1C0071\", \"#390071\", \"#550071\", \"#710071\", \"#710055\",\r\n\t\"#710039\", \"#71001C\", \"#710000\", \"#711C00\", \"#713900\", \"#715500\", \"#717100\",\r\n\t\"#557100\", \"#397100\", \"#1C7100\", \"#007100\", \"#00711C\", \"#007139\", \"#007155\",\r\n\t\"#007171\", \"#005571\", \"#003971\", \"#001C71\", \"#393971\", \"#453971\", \"#553971\",\r\n\t\"#613971\", \"#713971\", \"#713961\", \"#713955\", \"#713945\", \"#713939\", \"#714539\",\r\n\t\"#715539\", \"#716139\", \"#717139\", \"#617139\", \"#557139\", \"#457139\", \"#397139\",\r\n\t\"#397145\", \"#397155\", \"#397161\", \"#397171\", \"#396171\", \"#395571\", \"#394571\",\r\n\t\"#515171\", \"#595171\", \"#615171\", \"#695171\", \"#715171\", \"#715169\", \"#715161\",\r\n\t\"#715159\", \"#715151\", \"#715951\", \"#716151\", \"#716951\", \"#717151\", \"#697151\",\r\n\t\"#617151\", \"#597151\", \"#517151\", \"#517159\", \"#517161\", \"#517169\", \"#517171\",\r\n\t\"#516971\", \"#516171\", \"#515971\", \"#000041\", \"#100041\", \"#200041\", \"#310041\",\r\n\t\"#410041\", \"#410031\", \"#410020\", \"#410010\", \"#410000\", \"#411000\", \"#412000\",\r\n\t\"#413100\", \"#414100\", \"#314100\", \"#204100\", \"#104100\", \"#004100\", \"#004110\",\r\n\t\"#004120\", \"#004131\", \"#004141\", \"#003141\", \"#002041\", \"#001041\", \"#202041\",\r\n\t\"#282041\", \"#312041\", \"#392041\", \"#412041\", \"#412039\", \"#412031\", \"#412028\",\r\n\t\"#412020\", \"#412820\", \"#413120\", \"#413920\", \"#414120\", \"#394120\", \"#314120\",\r\n\t\"#284120\", \"#204120\", \"#204128\", \"#204131\", \"#204139\", \"#204141\", \"#203941\",\r\n\t\"#203141\", \"#202841\", \"#2D2D41\", \"#312D41\", \"#352D41\", \"#3D2D41\", \"#412D41\",\r\n\t\"#412D3D\", \"#412D35\", \"#412D31\", \"#412D2D\", \"#41312D\", \"#41352D\", \"#413D2D\",\r\n\t\"#41412D\", \"#3D412D\", \"#35412D\", \"#31412D\", \"#2D412D\", \"#2D4131\", \"#2D4135\",\r\n\t\"#2D413D\", \"#2D4141\", \"#2D3D41\", \"#2D3541\", \"#2D3141\", \"#000000\", \"#000000\",\r\n\t\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"\r\n];\r\n\r\n// Central Pi.js data storage\r\nexport const piData = {\r\n\t\"nextScreenId\": 0,\r\n\t\"screens\": {},\r\n\t\"activeScreen\": null,\r\n\t\"images\": {},\r\n\t\"imageCount\": 0,\r\n\t\"defaultPrompt\": String.fromCharCode( 219 ),\r\n\t\"defaultFont\": {},\r\n\t\"nextFontId\": 0,\r\n\t\"fonts\": {},\r\n\t\"defaultPalette\": [],\r\n\t\"defaultColor\": 7,\r\n\t\"commands\": {},\r\n\t\"screenCommands\": {},\r\n\t\"defaultPenDraw\": null,\r\n\t\"pens\": {},\r\n\t\"penList\": [],\r\n\t\"blendCommands\": {},\r\n\t\"blendCommandsList\": [],\r\n\t\"defaultBlendCmd\": null,\r\n\t\"settings\": {},\r\n\t\"settingsList\": [],\r\n\t\"volume\": 0.75,\r\n\t\"isTouchScreen\": false,\r\n\t\"defaultInputFocus\": typeof window !== \"undefined\" ? window : null\r\n};\r\n\r\n// Command list for processCommands\r\nexport const commandList = [];\r\n\r\n// Ready system\r\nexport let waitCount = 0;\r\nexport let waiting = false;\r\nexport const readyList = [];\r\nexport let startReadyListTimeout = 0;\r\n\r\nexport function setWaitCount( count ) {\r\n\twaitCount = count;\r\n}\r\n\r\nexport function setWaiting( state ) {\r\n\twaiting = state;\r\n}\r\n\r\nexport function setStartReadyListTimeout( timeout ) {\r\n\tstartReadyListTimeout = timeout;\r\n}\r\n\r\n", "/**\r\n * Pi.js - Utilities Module\r\n * \r\n * Common utility functions for math, colors, types, and data manipulation.\r\n * \r\n * @module modules/utils\r\n */\r\n\r\n\"use strict\";\r\n\r\n// Type checking utilities\r\nexport const isFunction = ( fn ) => typeof fn === \"function\";\r\nexport const isDomElement = ( el ) => el instanceof Element;\r\nexport const isArray = Array.isArray;\r\nexport const isInteger = Number.isInteger;\r\nexport const canAddEventListeners = ( el ) => {\r\n\treturn typeof el.addEventListener === \"function\" && \r\n\t\ttypeof el.removeEventListener === \"function\";\r\n};\r\n\r\n// Color conversion utilities\r\n\r\n/**\r\n * Convert hex color to color object\r\n * \r\n * @param {string} hex - Hex color string (#RGB, #RRGGBB, or #RRGGBBAA)\r\n * @returns {Object} Color object with r, g, b, a, s, s2 properties\r\n */\r\nexport function hexToColor( hex ) {\r\n\tlet r, g, b, a, s2;\r\n\ts2 = hex;\r\n\r\n\tif( hex.length === 4 ) {\r\n\t\tr = parseInt( hex.slice( 1, 2 ), 16 ) * 16 - 1;\r\n\t\tg = parseInt( hex.slice( 2, 3 ), 16 ) * 16 - 1;\r\n\t\tb = parseInt( hex.slice( 3, 4 ), 16 ) * 16 - 1;\r\n\t} else {\r\n\t\tr = parseInt( hex.slice( 1, 3 ), 16 );\r\n\t\tg = parseInt( hex.slice( 3, 5 ), 16 );\r\n\t\tb = parseInt( hex.slice( 5, 7 ), 16 );\r\n\t}\r\n\r\n\tif( hex.length === 9 ) {\r\n\t\ts2 = hex.slice( 0, 7 );\r\n\t\ta = parseInt( hex.slice( 7, 9 ), 16 );\r\n\t} else {\r\n\t\ta = 255;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"r\": r,\r\n\t\t\"g\": g,\r\n\t\t\"b\": b,\r\n\t\t\"a\": a,\r\n\t\t\"s\": `rgba(${r},${g},${b},${Math.round( a / 255 * 1000 ) / 1000})`,\r\n\t\t\"s2\": s2\r\n\t};\r\n}\r\n\r\n/**\r\n * Convert color component to hex\r\n * \r\n * @param {number} c - Color component (0-255)\r\n * @returns {string} Hex string\r\n */\r\nexport function cToHex( c ) {\r\n\tif( !isInteger( c ) ) {\r\n\t\tc = Math.round( c );\r\n\t}\r\n\tc = clamp( c, 0, 255 );\r\n\tconst hex = Number( c ).toString( 16 );\r\n\treturn hex.length < 2 ? \"0\" + hex : hex.toUpperCase();\r\n}\r\n\r\n/**\r\n * Convert RGB to hex color\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255), defaults to 255\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex( r, g, b, a ) {\r\n\tif( isNaN( a ) ) {\r\n\t\ta = 255;\r\n\t}\r\n\treturn \"#\" + cToHex( r ) + cToHex( g ) + cToHex( b ) + cToHex( a );\r\n}\r\n\r\n/**\r\n * Convert RGB to color object\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255)\r\n * @returns {Object} Color object\r\n */\r\nexport function rgbToColor( r, g, b, a ) {\r\n\treturn hexToColor( rgbToHex( r, g, b, a ) );\r\n}\r\n\r\n/**\r\n * Convert color string to color object using canvas\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {Object} Color object\r\n */\r\nexport function colorStringToColor( colorStr ) {\r\n\tconst canvas = document.createElement( \"canvas\" );\r\n\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\r\n\tcontext.fillStyle = colorStr;\r\n\tcontext.fillRect( 0, 0, 1, 1 );\r\n\tconst data = context.getImageData( 0, 0, 1, 1 ).data;\r\n\treturn rgbToColor( data[ 0 ], data[ 1 ], data[ 2 ], data[ 3 ] );\r\n}\r\n\r\n/**\r\n * Convert color string to hex\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {string} Hex color string\r\n */\r\nexport function colorStringToHex( colorStr ) {\r\n\treturn colorStringToColor( colorStr ).s2;\r\n}\r\n\r\n/**\r\n * Split RGB/RGBA string into components\r\n * \r\n * @param {string} s - RGB or RGBA string\r\n * @returns {Array<number>} Array of color components\r\n */\r\nfunction splitRgb( s ) {\r\n\ts = s.slice( s.indexOf( \"(\" ) + 1, s.indexOf( \")\" ) );\r\n\tconst parts = s.split( \",\" );\r\n\tconst colors = [];\r\n\tfor( let i = 0; i < parts.length; i++ ) {\r\n\t\tlet val;\r\n\t\tif( i === 3 ) {\r\n\t\t\tval = parseFloat( parts[ i ].trim() ) * 255;\r\n\t\t} else {\r\n\t\t\tval = parseInt( parts[ i ].trim() );\r\n\t\t}\r\n\t\tcolors.push( val );\r\n\t}\r\n\treturn colors;\r\n}\r\n\r\n/**\r\n * Convert various color formats to color object\r\n * \r\n * @param {*} color - Color in various formats\r\n * @returns {Object|null} Color object or null if invalid\r\n */\r\nexport function convertToColor( color ) {\r\n\tif( color === undefined ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Array format [r, g, b, a]\r\n\tif( isArray( color ) && color.length > 2 ) {\r\n\t\treturn rgbToColor( color[ 0 ], color[ 1 ], color[ 2 ], color[ 3 ] );\r\n\t}\r\n\r\n\t// Object format {r, g, b, a}\r\n\tif(\r\n\t\tisInteger( color?.r ) &&\r\n\t\tisInteger( color?.g ) &&\r\n\t\tisInteger( color?.b )\r\n\t) {\r\n\t\treturn rgbToColor( color.r, color.g, color.b, color.a );\r\n\t}\r\n\r\n\tif( typeof color !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Hex format\r\n\tconst checkHexColor = /(^#[0-9A-F]{8}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\r\n\tif( checkHexColor.test( color ) ) {\r\n\t\treturn hexToColor( color );\r\n\t}\r\n\r\n\t// RGB/RGBA format\r\n\tif( color.indexOf( \"rgb\" ) === 0 ) {\r\n\t\tconst rgbParts = splitRgb( color );\r\n\t\tif( rgbParts.length < 3 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn rgbToColor( rgbParts[ 0 ], rgbParts[ 1 ], rgbParts[ 2 ], rgbParts[ 3 ] );\r\n\t}\r\n\r\n\t// Named color or other CSS color\r\n\treturn colorStringToColor( color );\r\n}\r\n\r\n/**\r\n * Check if a color string is valid\r\n * \r\n * @param {string} strColor - Color string to check\r\n * @returns {boolean} True if valid\r\n */\r\nexport function checkColor( strColor ) {\r\n\tconst s = new Option().style;\r\n\ts.color = strColor;\r\n\treturn s.color !== \"\";\r\n}\r\n\r\n/**\r\n * Compare two color objects\r\n * \r\n * @param {Object} color1 - First color\r\n * @param {Object} color2 - Second color\r\n * @returns {boolean} True if colors are equal\r\n */\r\nexport function compareColors( color1, color2 ) {\r\n\treturn color1.r === color2.r &&\r\n\t\tcolor1.g === color2.g &&\r\n\t\tcolor1.b === color2.b &&\r\n\t\tcolor1.a === color2.a;\r\n}\r\n\r\n// Data conversion utilities\r\n\r\n/**\r\n * Convert hex string to 2D data array\r\n * \r\n * @param {string} hex - Hex string\r\n * @param {number} width - Width of data\r\n * @param {number} height - Height of data\r\n * @returns {Array<Array<number>>} 2D array of binary data\r\n */\r\nexport function hexToData( hex, width, height ) {\r\n\thex = hex.toUpperCase();\r\n\tconst data = [];\r\n\tlet i = 0;\r\n\tlet digits = \"\";\r\n\tlet digitIndex = 0;\r\n\r\n\tfor( let y = 0; y < height; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = 0; x < width; x++ ) {\r\n\t\t\tif( digitIndex >= digits.length ) {\r\n\t\t\t\tlet hexPart = parseInt( hex[ i ], 16 );\r\n\t\t\t\tif( isNaN( hexPart ) ) {\r\n\t\t\t\t\thexPart = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdigits = padL( hexPart.toString( 2 ), 4, \"0\" );\r\n\t\t\t\ti += 1;\r\n\t\t\t\tdigitIndex = 0;\r\n\t\t\t}\r\n\t\t\tdata[ y ].push( parseInt( digits[ digitIndex ] ) );\r\n\t\t\tdigitIndex += 1;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n * Convert 2D data array to hex string\r\n * \r\n * @param {Array<Array<number>>} data - 2D array of binary data\r\n * @returns {string} Hex string\r\n */\r\nexport function dataToHex( data ) {\r\n\tlet hex = \"\";\r\n\tlet digits = \"\";\r\n\r\n\tfor( let y = 0; y < data.length; y++ ) {\r\n\t\tfor( let x = 0; x < data[ y ].length; x++ ) {\r\n\t\t\tdigits += data[ y ][ x ];\r\n\t\t\tif( digits.length === 4 ) {\r\n\t\t\t\thex += parseInt( digits, 2 ).toString( 16 );\r\n\t\t\t\tdigits = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn hex;\r\n}\r\n\r\n// Math utilities\r\n\r\n/**\r\n * Clamp a number between min and max\r\n * \r\n * @param {number} num - Number to clamp\r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Clamped value\r\n */\r\nexport function clamp( num, min, max ) {\r\n\treturn Math.min( Math.max( num, min ), max );\r\n}\r\n\r\n/**\r\n * Check if a point is in a rectangle\r\n * \r\n * @param {Object} point - Point with x, y properties\r\n * @param {Object} hitBox - Rectangle with x, y, width, height properties\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange( point, hitBox ) {\r\n\treturn point.x >= hitBox.x && point.x < hitBox.x + hitBox.width &&\r\n\t\tpoint.y >= hitBox.y && point.y < hitBox.y + hitBox.height;\r\n}\r\n\r\n/**\r\n * Check if coordinates are in a rectangle\r\n * \r\n * @param {number} x1 - Point x\r\n * @param {number} y1 - Point y\r\n * @param {number} x2 - Rectangle x\r\n * @param {number} y2 - Rectangle y\r\n * @param {number} width - Rectangle width\r\n * @param {number} height - Rectangle height\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange2( x1, y1, x2, y2, width, height ) {\r\n\treturn x1 >= x2 && x1 < x2 + width &&\r\n\t\ty1 >= y2 && y1 < y2 + height;\r\n}\r\n\r\n/**\r\n * Generate random number in range\r\n * \r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Random number between min and max\r\n */\r\nexport function rndRange( min, max ) {\r\n\treturn Math.random() * ( max - min ) + min;\r\n}\r\n\r\n/**\r\n * Convert degrees to radians\r\n * \r\n * @param {number} deg - Degrees\r\n * @returns {number} Radians\r\n */\r\nexport function degreesToRadian( deg ) {\r\n\treturn deg * ( Math.PI / 180 );\r\n}\r\n\r\n/**\r\n * Convert radians to degrees\r\n * \r\n * @param {number} rad - Radians\r\n * @returns {number} Degrees\r\n */\r\nexport function radiansToDegrees( rad ) {\r\n\treturn rad * ( 180 / Math.PI );\r\n}\r\n\r\n// String utilities\r\n\r\n/**\r\n * Pad string on left\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padL( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tlet pad = \"\";\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tpad += c;\r\n\t}\r\n\treturn pad + str;\r\n}\r\n\r\n/**\r\n * Pad string on right\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padR( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tstr += c;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * Pad string on both sides\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function pad( str, len, c ) {\r\n\tif( typeof c !== \"string\" || c.length === 0 ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\twhile( str.length < len ) {\r\n\t\tstr = c + str + c;\r\n\t}\r\n\tif( str.length > len ) {\r\n\t\tstr = str.substr( 0, len );\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// Object utilities\r\n\r\n/**\r\n * Copy properties from source to destination\r\n * \r\n * @param {Object} dest - Destination object\r\n * @param {Object} src - Source object\r\n */\r\nexport function copyProperties( dest, src ) {\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tdest[ prop ] = src[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Convert object to array\r\n * \r\n * @param {Object} src - Source object\r\n * @returns {Array} Array of values\r\n */\r\nexport function convertToArray( src ) {\r\n\tconst arr = [];\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tarr.push( src[ prop ] );\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n/**\r\n * Delete all properties from object\r\n * \r\n * @param {Object} obj - Object to clear\r\n */\r\nexport function deleteProperties( obj ) {\r\n\tfor( const prop in obj ) {\r\n\t\tif( obj.hasOwnProperty( prop ) ) {\r\n\t\t\tdelete obj[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Window utilities\r\n\r\n/**\r\n * Get window size\r\n * \r\n * @returns {Object} Object with width and height\r\n */\r\nexport function getWindowSize() {\r\n\tconst width = window.innerWidth || document.documentElement.clientWidth ||\r\n\t\tdocument.body.clientWidth;\r\n\r\n\tconst height = window.innerHeight || document.documentElement.clientHeight ||\r\n\t\tdocument.body.clientHeight;\r\n\r\n\treturn { \"width\": width, \"height\": height };\r\n}\r\n\r\n// Search utilities\r\n\r\n/**\r\n * Binary search in sorted array\r\n * \r\n * @param {Array} data - Sorted array\r\n * @param {*} search - Value to search for\r\n * @param {Function} compareFn - Comparison function\r\n * @returns {number} Index of found element or negative insertion point\r\n */\r\nexport function binarySearch( data, search, compareFn ) {\r\n\tlet m = 0;\r\n\tlet n = data.length - 1;\r\n\r\n\twhile( m <= n ) {\r\n\t\tconst k = ( n + m ) >> 1;\r\n\t\tconst result = compareFn( search, data[ k ], k );\r\n\t\tif( result > 0 ) {\r\n\t\t\tm = k + 1;\r\n\t\t} else if( result < 0 ) {\r\n\t\t\tn = k - 1;\r\n\t\t} else {\r\n\t\t\treturn k;\r\n\t\t}\r\n\t}\r\n\treturn -m - 1;\r\n}\r\n\r\n/**\r\n * Parse integer with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed integer or default\r\n */\r\nexport function getInt( val, def ) {\r\n\tval = parseInt( val );\r\n\tif( isNaN( val ) ) {\r\n\t\tval = def;\r\n\t}\r\n\treturn val;\r\n}\r\n\r\n// Common math constants\r\nexport const math = Object.freeze( {\r\n\t\"deg30\": Math.PI / 6,\r\n\t\"deg45\": Math.PI / 4,\r\n\t\"deg60\": Math.PI / 3,\r\n\t\"deg90\": Math.PI / 2,\r\n\t\"deg120\": ( 2 * Math.PI ) / 3,\r\n\t\"deg135\": ( 3 * Math.PI ) / 4,\r\n\t\"deg150\": ( 5 * Math.PI ) / 6,\r\n\t\"deg180\": Math.PI,\r\n\t\"deg210\": ( 7 * Math.PI ) / 6,\r\n\t\"deg225\": ( 5 * Math.PI ) / 4,\r\n\t\"deg240\": ( 4 * Math.PI ) / 3,\r\n\t\"deg270\": ( 3 * Math.PI ) / 2,\r\n\t\"deg300\": ( 5 * Math.PI ) / 3,\r\n\t\"deg315\": ( 7 * Math.PI ) / 4,\r\n\t\"deg330\": ( 11 * Math.PI ) / 6,\r\n\t\"deg360\": Math.PI * 2\r\n} );\r\n\r\n// Queue microtask (built-in in modern browsers)\r\n// Wrap to preserve window context\r\nexport const queueMicrotask = ( callback ) => {\r\n\tif( window.queueMicrotask ) {\r\n\t\twindow.queueMicrotask( callback );\r\n\t} else {\r\n\t\tsetTimeout( callback, 0 );\r\n\t}\r\n};\r\n\r\n", "/**\r\n * Pi.js - Command System Module\r\n * \r\n * Command registration and processing, matching legacy API pattern.\r\n * \r\n * @module core/command-system\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { piData, commandList } from \"./pi-data.js\";\r\nimport * as utils from \"../modules/utils.js\";\r\n\r\n/**\r\n * Add a command to the system\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fn - Command function\r\n * @param {boolean} isInternal - If true, not exposed in API\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n * @param {boolean} isSet - If true, this is a setting\r\n */\r\nexport function addCommand( name, fn, isInternal, isScreen, parameters, isSet ) {\r\n\tpiData.commands[ name ] = fn;\r\n\r\n\tif( !isInternal ) {\r\n\t\tcommandList.push( {\r\n\t\t\t\"name\": name,\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"isScreen\": isScreen,\r\n\t\t\t\"parameters\": parameters || [],\r\n\t\t\t\"isSet\": isSet,\r\n\t\t\t\"noParse\": isSet\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a command with dual pixel/anti-aliased implementations\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fnPx - Pixel mode implementation\r\n * @param {Function} fnAa - Anti-aliased mode implementation\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addCommands( name, fnPx, fnAa, parameters ) {\r\n\taddCommand( name, function( screenData, args ) {\r\n\t\tif( screenData.pixelMode ) {\r\n\t\t\tfnPx( screenData, args );\r\n\t\t} else {\r\n\t\t\tfnAa( screenData, args );\r\n\t\t}\r\n\t}, false, true, parameters );\r\n}\r\n\r\n/**\r\n * Add a setting\r\n * \r\n * @param {string} name - Setting name\r\n * @param {Function} fn - Setting function\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addSetting( name, fn, isScreen, parameters ) {\r\n\tpiData.settings[ name ] = {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"isScreen\": isScreen,\r\n\t\t\"parameters\": parameters || []\r\n\t};\r\n\tpiData.settingsList.push( name );\r\n}\r\n\r\n/**\r\n * Parse options - converts object notation to array or passes through array\r\n * \r\n * @param {Object} cmd - Command definition\r\n * @param {Array} args - Arguments passed to command\r\n * @returns {Array} Parsed arguments\r\n */\r\nexport function parseOptions( cmd, args ) {\r\n\tif( cmd.noParse ) {\r\n\t\treturn args;\r\n\t}\r\n\r\n\t// If first argument is an object, convert to array based on parameter names\r\n\tif(\r\n\t\targs.length > 0 &&\r\n\t\ttypeof args[ 0 ] === \"object\" &&\r\n\t\targs[ 0 ] !== null &&\r\n\t\t!args[ 0 ].hasOwnProperty( \"screen\" ) &&\r\n\t\t!utils.isArray( args[ 0 ] ) &&\r\n\t\t!utils.isDomElement( args[ 0 ] )\r\n\t) {\r\n\t\tconst options = args[ 0 ];\r\n\t\tconst args2 = [];\r\n\t\tlet foundParameter = false;\r\n\r\n\t\tfor( let i = 0; i < cmd.parameters.length; i++ ) {\r\n\t\t\tif( options.hasOwnProperty( cmd.parameters[ i ] ) ) {\r\n\t\t\t\targs2.push( options[ cmd.parameters[ i ] ] );\r\n\t\t\t\tfoundParameter = true;\r\n\t\t\t} else {\r\n\t\t\t\targs2.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( foundParameter ) {\r\n\t\t\treturn args2;\r\n\t\t}\r\n\t}\r\n\r\n\treturn args;\r\n}\r\n\r\n/**\r\n * Add a pen drawing mode\r\n * \r\n * @param {string} name - Pen name\r\n * @param {Function} fn - Pen function\r\n * @param {string} cap - Line cap style\r\n */\r\nexport function addPen( name, fn, cap ) {\r\n\tpiData.penList.push( name );\r\n\tpiData.pens[ name ] = {\r\n\t\t\"cmd\": fn,\r\n\t\t\"cap\": cap\r\n\t};\r\n}\r\n\r\n/**\r\n * Add a blend command\r\n * \r\n * @param {string} name - Blend mode name\r\n * @param {Function} fn - Blend function\r\n */\r\nexport function addBlendCommand( name, fn ) {\r\n\tpiData.blendCommandsList.push( name );\r\n\tpiData.blendCommands[ name ] = fn;\r\n}\r\n\r\n/**\r\n * Process commands and create API methods\r\n * \r\n * @param {Object} api - API object to add methods to\r\n */\r\nexport function processCommands( api ) {\r\n\t// Alphabetize commands\r\n\tcommandList.sort( ( a, b ) => {\r\n\t\tconst nameA = a.name.toUpperCase();\r\n\t\tconst nameB = b.name.toUpperCase();\r\n\t\tif( nameA < nameB ) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif( nameA > nameB ) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t} );\r\n\r\n\tfor( const cmd of commandList ) {\r\n\t\tprocessCommand( api, cmd );\r\n\t}\r\n}\r\n\r\n/**\r\n * Process a single command and add to API\r\n * \r\n * @param {Object} api - API object\r\n * @param {Object} cmd - Command definition\r\n */\r\nfunction processCommand( api, cmd ) {\r\n\tif( cmd.isSet ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( null, parsedArgs );\r\n\t\t};\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( cmd.isScreen ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\tconst screenData = getScreenData( undefined, cmd.name );\r\n\t\t\tif( screenData !== false ) {\r\n\t\t\t\treturn piData.commands[ cmd.name ]( screenData, parsedArgs );\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( parsedArgs );\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Get screen data for command execution\r\n * \r\n * @param {number|undefined} screenId - Screen ID or undefined for active screen\r\n * @param {string} commandName - Command name for error messages\r\n * @returns {Object|boolean} Screen data or false\r\n */\r\nexport function getScreenData( screenId, commandName ) {\r\n\tif( piData.activeScreen === null ) {\r\n\t\tif( commandName === \"set\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use native Error for missing screen\r\n\t\tconst error = new Error( `${commandName}: No screens available for command.` );\r\n\t\terror.code = \"NO_SCREEN\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( screenId === undefined || screenId === null ) {\r\n\t\tscreenId = piData.activeScreen.id;\r\n\t}\r\n\r\n\tif( utils.isInteger( screenId ) && !piData.screens[ screenId ] ) {\r\n\t\t// Use native Error for invalid screen ID\r\n\t\tconst error = new Error( `${commandName}: Invalid screen id.` );\r\n\t\terror.code = \"INVALID_SCREEN_ID\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn piData.screens[ screenId ];\r\n}\r\n\r\n", "/**\n * Pi.js - Core Commands Module\n * \n * Core system commands including screen management and global settings.\n * \n * @module modules/core-commands\n */\n\n\"use strict\";\n\nimport { getScreenData } from \"../core/command-system.js\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Set the active screen\n\tpi._.addCommand( \"setScreen\", setScreen, false, false, [ \"screen\" ] );\n\tpi._.addSetting( \"screen\", setScreen, false, [ \"screen\" ] );\n\n\tfunction setScreen( args ) {\n\t\tconst screenObj = args[ 0 ];\n\t\tlet screenId;\n\n\t\tif( pi.util.isInteger( screenObj ) ) {\n\t\t\tscreenId = screenObj;\n\t\t} else if( screenObj && pi.util.isInteger( screenObj.id ) ) {\n\t\t\tscreenId = screenObj.id;\n\t\t}\n\n\t\tif( !piData.screens[ screenId ] ) {\n\t\t\tconst error = new Error( \"screen: Invalid screen.\" );\n\t\t\terror.code = \"INVALID_SCREEN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.activeScreen = piData.screens[ screenId ];\n\t}\n\n\t// Remove all screens from the page and memory\n\tpi._.addCommand( \"removeAllScreens\", removeAllScreens, false, false, [] );\n\n\tfunction removeAllScreens() {\n\t\tfor( const i in piData.screens ) {\n\t\t\tconst screenData = piData.screens[ i ];\n\t\t\tscreenData.screenObj.removeScreen();\n\t\t}\n\t\tpiData.nextScreenId = 0;\n\t}\n\n\t// Get screen by ID\n\tpi._.addCommand( \"getScreen\", getScreen, false, false, [ \"screenId\" ] );\n\n\tfunction getScreen( args ) {\n\t\tconst screenId = args[ 0 ];\n\t\tconst screen = getScreenData( screenId, \"getScreen\" );\n\t\treturn screen.screenObj;\n\t}\n\n\t// Set the default color\n\tpi._.addCommand( \"setDefaultColor\", setDefaultColor, false, false, [ \"color\" ] );\n\tpi._.addSetting( \"defaultColor\", setDefaultColor, false, [ \"color\" ] );\n\n\tfunction setDefaultColor( args ) {\n\t\tlet c = args[ 0 ];\n\n\t\tif( !isNaN( Number( c ) ) && piData.defaultPalette.length > c ) {\n\t\t\tpiData.defaultColor = c;\n\t\t} else {\n\t\t\tc = pi.util.convertToColor( c );\n\t\t\tif( c === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"setDefaultColor: invalid color value for parameter color.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tpiData.defaultColor = c;\n\t\t}\n\t}\n\n\t// Set the default palette\n\tpi._.addCommand( \"setDefaultPal\", setDefaultPal, false, false, [ \"pal\" ] );\n\tpi._.addSetting( \"defaultPal\", setDefaultPal, false, [ \"pal\" ] );\n\n\tfunction setDefaultPal( args ) {\n\t\tconst pal = args[ 0 ];\n\n\t\tif( !pi.util.isArray( pal ) ) {\n\t\t\tconst error = new TypeError( \"setDefaultPal: parameter pal is not an array.\" );\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( pal.length < 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setDefaultPal: parameter pal must have at least one color value.\"\n\t\t\t);\n\t\t\terror.code = \"EMPTY_PALETTE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.defaultPalette = [];\n\n\t\tif( pal.length > 1 ) {\n\t\t\tpiData.defaultColor = 1;\n\t\t} else {\n\t\t\tpiData.defaultColor = 0;\n\t\t}\n\n\t\tfor( let i = 0; i < pal.length; i++ ) {\n\t\t\tconst c = pi.util.convertToColor( pal[ i ] );\n\t\t\tif( c === null ) {\n\t\t\t\tconsole.warn( \"setDefaultPal: invalid color value inside array pal.\" );\n\t\t\t\tpiData.defaultPalette.push( pi.util.convertToColor( \"#000000\" ) );\n\t\t\t} else {\n\t\t\t\tpiData.defaultPalette.push( c );\n\t\t\t}\n\t\t}\n\n\t\t// Set color 0 to transparent\n\t\tconst firstColor = piData.defaultPalette[ 0 ];\n\t\tpiData.defaultPalette[ 0 ] = pi.util.convertToColor( [\n\t\t\tfirstColor.r,\n\t\t\tfirstColor.g,\n\t\t\tfirstColor.b,\n\t\t\t0\n\t\t] );\n\t}\n\n\t// Get default palette\n\tpi._.addCommand( \"getDefaultPal\", getDefaultPal, false, false, [] );\n\n\tfunction getDefaultPal() {\n\t\tconst colors = [];\n\t\tfor( const color of piData.defaultPalette ) {\n\t\t\tcolors.push( color );\n\t\t}\n\t\treturn colors;\n\t}\n\n\t// Set the default input focus element\n\tpi._.addCommand( \"setDefaultInputFocus\", setDefaultInputFocus, false, false, [ \"element\" ] );\n\tpi._.addSetting( \"defaultInputFocus\", setDefaultInputFocus, false, [ \"element\" ] );\n\n\tfunction setDefaultInputFocus( args ) {\n\t\tlet element = args[ 0 ];\n\n\t\tif( typeof element === \"string\" ) {\n\t\t\telement = document.getElementById( element );\n\t\t}\n\n\t\tif( !element || !pi.util.canAddEventListeners( element ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setDefaultInputFocus: Invalid argument element. \" +\n\t\t\t\t\"Element must be a DOM element or string id of a DOM element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ELEMENT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !( element.tabIndex >= 0 ) ) {\n\t\t\telement.tabIndex = 0;\n\t\t}\n\n\t\tpiData.defaultInputFocus = element;\n\n\t\t// Reinitialize keyboard if command exists\n\t\tif( piData.commands[ \"reinitKeyboard\" ] ) {\n\t\t\tpiData.commands[ \"reinitKeyboard\" ]();\n\t\t}\n\t}\n\n\t// Global settings command\n\tpi._.addCommand( \"set\", set, false, true, piData.settingsList, true );\n\n\tfunction set( screenData, args ) {\n\t\tconst options = args[ 0 ];\n\n\t\t// Loop through all the options\n\t\tfor( const optionName in options ) {\n\t\t\t\n\t\t\t// If the option is a valid setting\n\t\t\tif( piData.settings[ optionName ] ) {\n\n\t\t\t\t// Get the setting data\n\t\t\t\tconst setting = piData.settings[ optionName ];\n\n\t\t\t\t// Parse the options from the setting\n\t\t\t\tlet optionValues = options[ optionName ];\n\n\t\t\t\tif(\n\t\t\t\t\t!pi.util.isArray( optionValues ) &&\n\t\t\t\t\ttypeof optionValues === \"object\"\n\t\t\t\t) {\n\t\t\t\t\toptionValues = pi._.parseOptions( setting, [ optionValues ] );\n\t\t\t\t} else {\n\t\t\t\t\toptionValues = [ optionValues ];\n\t\t\t\t}\n\n\t\t\t\t// Call the setting function\n\t\t\t\tif( setting.isScreen ) {\n\t\t\t\t\tif( !screenData ) {\n\t\t\t\t\t\tscreenData = getScreenData( undefined, `set ${setting.name}` );\n\t\t\t\t\t}\n\t\t\t\t\tsetting.fn( screenData, optionValues );\n\t\t\t\t} else {\n\t\t\t\t\tsetting.fn( optionValues );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - Screen Helper Functions Module\n * \n * Helper functions for screen operations, color resolution, pixel operations,\n * blend modes, and pen drawing.\n * \n * @module modules/screen-helper\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Blend Commands\n\n\tpi._.addBlendCommand( \"normal\", normalBlend );\n\n\tfunction normalBlend( screenData, x, y, c ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\tdata[ i ] = c.r;\n\t\tdata[ i + 1 ] = c.g;\n\t\tdata[ i + 2 ] = c.b;\n\t\tdata[ i + 3 ] = c.a;\n\t}\n\n\tpi._.addBlendCommand( \"blend\", blendPixel );\n\n\tfunction blendPixel( screenData, x, y, c ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\t// displayColor = sourceColor \u00D7 alpha / 255 + backgroundColor \u00D7 (255 \u2013 alpha) / 255\n\t\t// blend = ( source * source_alpha) + destination * ( 1 - source_alpha)\n\t\tconst pct = c.a / 255;\n\t\tconst pct2 = ( 255 - c.a ) / 255;\n\n\t\tdata[ i ] = ( c.r * pct ) + data[ i ] * pct2;\n\t\tdata[ i + 1 ] = ( c.g * pct ) + data[ i + 1 ] * pct2;\n\t\tdata[ i + 2 ] = ( c.b * pct ) + data[ i + 2 ] * pct2;\n\n\t\t// Alpha blending formula: result_alpha = source_alpha + dest_alpha * (1 - source_alpha)\n\t\tdata[ i + 3 ] = c.a + data[ i + 3 ] * pct2;\n\t}\n\n\t// ImageData Helpers\n\n\tpi._.addCommand( \"getImageData\", getImageData, true, false );\n\n\tfunction getImageData( screenData ) {\n\t\tif( screenData.dirty === false || screenData.imageData === null ) {\n\t\t\tscreenData.imageData = screenData.context.getImageData(\n\t\t\t\t0, 0, screenData.width, screenData.height\n\t\t\t);\n\t\t}\n\t}\n\n\tpi._.addCommand( \"resetImageData\", resetImageData, true, false );\n\n\tfunction resetImageData( screenData ) {\n\t\tscreenData.imageData = null;\n\t}\n\n\tpi._.addCommand( \"setImageDirty\", setImageDirty, true, false );\n\n\tfunction setImageDirty( screenData ) {\n\t\tif( screenData.dirty === false ) {\n\t\t\tscreenData.dirty = true;\n\n\t\t\tif(\n\t\t\t\tscreenData.isAutoRender &&\n\t\t\t\t!screenData.autoRenderMicrotaskScheduled\n\t\t\t) {\n\t\t\t\tscreenData.autoRenderMicrotaskScheduled = true;\n\n\t\t\t\tpi.util.queueMicrotask( function() {\n\t\t\t\t\tif( screenData.screenObj && screenData.isAutoRender ) {\n\t\t\t\t\t\tscreenData.screenObj.render();\n\t\t\t\t\t}\n\t\t\t\t\tscreenData.autoRenderMicrotaskScheduled = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Pixel Operations\n\n\tpi._.addCommand( \"setPixel\", setPixel, true, false );\n\n\tfunction setPixel( screenData, x, y, c ) {\n\t\tscreenData.blendPixelCmd( screenData, x, y, c );\n\t}\n\n\tpi._.addCommand( \"setPixelSafe\", setPixelSafe, true, false );\n\tpi._.addPen( \"pixel\", setPixelSafe, \"square\" );\n\n\tfunction setPixelSafe( screenData, x, y, c ) {\n\t\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\n\t\t\treturn;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tc = getPixelColor( screenData, c );\n\t\tscreenData.blendPixelCmd( screenData, x, y, c );\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"getPixelColor\", getPixelColor, true, false );\n\n\tfunction getPixelColor( screenData, c ) {\n\t\tconst noise = screenData.pen.noise;\n\n\t\tif( !noise ) {\n\t\t\treturn c;\n\t\t}\n\n\t\tconst c2 = { \"r\": c.r, \"g\": c.g, \"b\": c.b, \"a\": c.a };\n\t\tconst half = noise / 2;\n\n\t\tif( pi.util.isArray( noise ) ) {\n\t\t\tc2.r = pi.util.clamp(\n\t\t\t\tMath.round( c2.r + pi.util.rndRange( -noise[ 0 ], noise[ 0 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.g = pi.util.clamp(\n\t\t\t\tMath.round( c2.g + pi.util.rndRange( -noise[ 1 ], noise[ 1 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.b = pi.util.clamp(\n\t\t\t\tMath.round( c2.b + pi.util.rndRange( -noise[ 2 ], noise[ 2 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.a = pi.util.clamp(\n\t\t\t\tc2.a + pi.util.rndRange( -noise[ 3 ], noise[ 3 ] ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t} else {\n\t\t\tconst change = Math.round( Math.random() * noise - half );\n\t\t\tc2.r = pi.util.clamp( c2.r + change, 0, 255 );\n\t\t\tc2.g = pi.util.clamp( c2.g + change, 0, 255 );\n\t\t\tc2.b = pi.util.clamp( c2.b + change, 0, 255 );\n\t\t}\n\n\t\treturn c2;\n\t}\n\n\t// Pen Drawing Functions\n\n\tpi._.addCommand( \"drawSquarePen\", drawSquarePen, true, false );\n\tpi._.addPen( \"square\", drawSquarePen, \"square\" );\n\n\tfunction drawSquarePen( screenData, x, y, c ) {\n\t\t// Size must always be an odd number\n\t\tconst size = screenData.pen.size * 2 - 1;\n\n\t\t// Compute the center offset of the square\n\t\tconst offset = Math.round( size / 2 ) - 1;\n\n\t\t// Draw the square\n\t\tfor( let y2 = 0; y2 < size; y2++ ) {\n\t\t\tfor( let x2 = 0; x2 < size; x2++ ) {\n\t\t\t\tpiData.commands.setPixelSafe(\n\t\t\t\t\tscreenData,\n\t\t\t\t\tx2 + x - offset,\n\t\t\t\t\ty2 + y - offset,\n\t\t\t\t\tc\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"drawCirclePen\", drawCirclePen, true, false );\n\tpi._.addPen( \"circle\", drawCirclePen, \"round\" );\n\n\tfunction drawCirclePen( screenData, x, y, c ) {\n\t\t\n\t\t// Special case for pen size 2\n\t\tif( screenData.pen.size === 2 ) {\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x + 1, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x - 1, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y + 1, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y - 1, c );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Double size to get the size of the outer box\n\t\tconst size = screenData.pen.size * 2;\n\n\t\t// Half is size of radius\n\t\tconst half = screenData.pen.size;\n\n\t\t// Calculate the center of circle\n\t\tconst offset = half - 1;\n\n\t\t// Loop through the square boundary outside of the circle\n\t\tfor( let y2 = 0; y2 < size; y2++ ) {\n\t\t\tfor( let x2 = 0; x2 < size; x2++ ) {\n\n\t\t\t\t// Compute the coordinates\n\t\t\t\tconst x3 = x2 - offset;\n\t\t\t\tconst y3 = y2 - offset;\n\n\t\t\t\t// Compute the radius of point - round to make pixel perfect\n\t\t\t\tconst r = Math.round( Math.sqrt( x3 * x3 + y3 * y3 ) );\n\n\t\t\t\t// Only draw the pixel if it is inside the circle\n\t\t\t\tif( r < half ) {\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, x3 + x, y3 + y, c );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"getPixelInternal\", getPixelInternal, true, false );\n\n\tfunction getPixelInternal( screenData, x, y ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index of the color\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\treturn {\n\t\t\t\"r\": data[ i ],\n\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\"a\": data[ i + 3 ]\n\t\t};\n\t}\n\n\tpi._.addCommand( \"getPixelSafe\", getPixelSafe, true, false );\n\n\tfunction getPixelSafe( screenData, x, y ) {\n\t\tpiData.commands.getImageData( screenData );\n\t\treturn getPixelInternal( screenData, x, y );\n\t}\n\n\t// Color Resolution\n\n\tpi._.addCommand( \"findColorValue\", findColorValue, true, false );\n\n\tfunction findColorValue( screenData, colorInput, commandName ) {\n\t\tlet colorValue;\n\n\t\tif( pi.util.isInteger( colorInput ) ) {\n\t\t\tif( colorInput > screenData.pal.length ) {\n\t\t\t\tconst error = new RangeError(\n\t\t\t\t\t`${commandName}: parameter color is not a color in the palette.`\n\t\t\t\t);\n\t\t\t\terror.code = \"COLOR_OUT_OF_RANGE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tcolorValue = screenData.pal[ colorInput ];\n\t\t} else {\n\t\t\tcolorValue = pi.util.convertToColor( colorInput );\n\t\t\tif( colorValue === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t`${commandName}: parameter color is not a valid color format.`\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn colorValue;\n\t}\n\n\t// PUT - Put pixel data to screen\n\tpi._.addCommand( \"put\", put, false, true, [ \"data\", \"x\", \"y\", \"includeZero\" ] );\n\n\tfunction put( screenData, args ) {\n\t\tconst data = args[ 0 ];\n\t\tlet x = Math.round( args[ 1 ] );\n\t\tlet y = Math.round( args[ 2 ] );\n\t\tconst includeZero = !!args[ 3 ];\n\n\t\t// Exit if no data\n\t\tif( !data || data.length < 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"put: parameters x and y must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Clip x if offscreen\n\t\tlet startX;\n\t\tif( x < 0 ) {\n\t\t\tstartX = x * -1;\n\t\t} else {\n\t\t\tstartX = 0;\n\t\t}\n\n\t\t// Clip y if offscreen\n\t\tlet startY;\n\t\tif( y < 0 ) {\n\t\t\tstartY = y * -1;\n\t\t} else {\n\t\t\tstartY = 0;\n\t\t}\n\n\t\t// Calc width & height\n\t\tlet width = data[ 0 ].length - startX;\n\t\tlet height = data.length - startY;\n\n\t\t// Clamp width & height\n\t\tif( x + startX + width >= screenData.width ) {\n\t\t\twidth = screenData.width - x - startX;\n\t\t}\n\t\tif( y + startY + height >= screenData.height ) {\n\t\t\theight = screenData.height - y - startY;\n\t\t}\n\n\t\t// Exit if there is no data that fits the screen\n\t\tif( width <= 0 || height <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Loop through the data\n\t\tfor( let dataY = startY; dataY < startY + height; dataY++ ) {\n\t\t\tfor( let dataX = startX; dataX < startX + width; dataX++ ) {\n\n\t\t\t\t// Get the color\n\t\t\t\tconst c = screenData.pal[ data[ dataY ][ dataX ] ];\n\n\t\t\t\t// Calculate the index of the image data\n\t\t\t\tconst i = ( ( screenData.width * ( y + dataY ) ) + ( x + dataX ) ) * 4;\n\n\t\t\t\t// Put the color in the image data\n\t\t\t\tif( c && ( c.a > 0 || includeZero ) ) {\n\t\t\t\t\tscreenData.imageData.data[ i ] = c.r;\n\t\t\t\t\tscreenData.imageData.data[ i + 1 ] = c.g;\n\t\t\t\t\tscreenData.imageData.data[ i + 2 ] = c.b;\n\t\t\t\t\tscreenData.imageData.data[ i + 3 ] = c.a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// Set defaults\n\tpiData.defaultPenDraw = setPixelSafe;\n\tpiData.defaultBlendCmd = normalBlend;\n}\n\n", "/**\n * Pi.js - Screen Module\n * \n * Screen creation and management for Pi.js.\n * Creates canvas elements, manages multiple screens, handles aspect ratios.\n * \n * @module modules/screen\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Main screen creation command\n\tpi._.addCommand( \"screen\", screen, false, false,\n\t\t[ \"aspect\", \"container\", \"isOffscreen\", \"willReadFrequently\", \"noStyles\",\n\t\t \"isMultiple\", \"resizeCallback\" ]\n\t);\n\n\tfunction screen( args ) {\n\t\tconst aspect = args[ 0 ];\n\t\tconst container = args[ 1 ];\n\t\tconst isOffscreen = args[ 2 ];\n\t\tconst willReadFrequently = !!( args[ 3 ] );\n\t\tconst noStyles = args[ 4 ];\n\t\tconst isMultiple = args[ 5 ];\n\t\tconst resizeCallback = args[ 6 ];\n\n\t\tlet aspectData;\n\n\t\t// Validate resize callback\n\t\tif( resizeCallback != null && !pi.util.isFunction( resizeCallback ) ) {\n\t\t\tconst error = new TypeError( \"screen: resizeCallback must be a function.\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Parse aspect ratio\n\t\tif( typeof aspect === \"string\" && aspect !== \"\" ) {\n\t\t\taspectData = parseAspect( aspect.toLowerCase() );\n\t\t\tif( !aspectData ) {\n\t\t\t\tconst error = new Error( \"screen: invalid value for aspect.\" );\n\t\t\t\terror.code = \"INVALID_ASPECT\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\taspectData.isMultiple = !!( isMultiple );\n\t\t}\n\n\t\t// Create appropriate screen type\n\t\tlet screenData;\n\n\t\tif( isOffscreen ) {\n\t\t\tif( !aspectData ) {\n\t\t\t\tconst error = new Error(\n\t\t\t\t\t\"screen: You must supply an aspect ratio with exact dimensions \" +\n\t\t\t\t\t\"for offscreen screens.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"NO_ASPECT_OFFSCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( aspectData.splitter !== \"x\" ) {\n\t\t\t\tconst error = new Error(\n\t\t\t\t\t\"screen: You must use aspect ratio with e(x)act pixel dimensions \" +\n\t\t\t\t\t\"such as 320x200 for offscreen screens.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_OFFSCREEN_ASPECT\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData = createOffscreenScreen( aspectData, willReadFrequently );\n\t\t} else {\n\t\t\tlet containerEl = container;\n\t\t\tif( typeof container === \"string\" ) {\n\t\t\t\tcontainerEl = document.getElementById( container );\n\t\t\t}\n\t\t\tif( containerEl && !pi.util.isDomElement( containerEl ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"screen: Invalid argument container. Container must be a DOM element \" +\n\t\t\t\t\t\"or a string id of a DOM element.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_CONTAINER\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( noStyles ) {\n\t\t\t\tscreenData = createNoStyleScreen( aspectData, containerEl, willReadFrequently );\n\t\t\t} else {\n\t\t\t\tscreenData = createScreen(\n\t\t\t\t\taspectData, containerEl, resizeCallback, willReadFrequently\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Setup screen cache\n\t\tscreenData.cache = { \"findColor\": {} };\n\n\t\t// Create screen object\n\t\tconst screenObj = {};\n\t\tscreenData.commands = {};\n\n\t\t// Loop through all the screen commands\n\t\tfor( const cmdName in piData.screenCommands ) {\n\t\t\tconst commandData = piData.screenCommands[ cmdName ];\n\t\t\tscreenData.commands[ cmdName ] = commandData.fn;\n\n\t\t\t// Setup the API command on screenObj\n\t\t\tsetupApiCommand( screenObj, cmdName, screenData, commandData );\n\t\t}\n\n\t\t// Assign screen object reference\n\t\tscreenData.screenObj = screenObj;\n\t\tscreenObj.id = screenData.id;\n\t\tscreenObj.screen = true;\n\n\t\treturn screenObj;\n\t}\n\n\t// Setup API command method on screen object\n\tfunction setupApiCommand( screenObj, name, screenData, cmd ) {\n\t\tscreenObj[ name ] = function( ...args ) {\n\t\t\tconst parsedArgs = pi._.parseOptions( cmd, args );\n\t\t\treturn screenData.commands[ name ]( screenData, parsedArgs );\n\t\t};\n\t}\n\n\t// Parse aspect ratio string\n\tfunction parseAspect( aspect ) {\n\t\tlet width, height, parts, splitter;\n\n\t\t// 2 types of ratios: percentage or exact pixels\n\t\tif( aspect.indexOf( \":\" ) > -1 ) {\n\t\t\tsplitter = \":\";\n\t\t} else if( aspect.indexOf( \"x\" ) > -1 ) {\n\t\t\tsplitter = \"x\";\n\t\t} else if( aspect.indexOf( \"e\" ) > -1 ) {\n\t\t\tsplitter = \"e\";\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tparts = aspect.split( splitter );\n\n\t\t// Get the width and validate it\n\t\twidth = Number( parts[ 0 ] );\n\t\tif( isNaN( width ) || width === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Get the height and validate it\n\t\theight = Number( parts[ 1 ] );\n\t\tif( isNaN( height ) || height === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\t\"width\": width,\n\t\t\t\"height\": height,\n\t\t\t\"splitter\": splitter\n\t\t};\n\t}\n\n\t// Create offscreen canvas\n\tfunction createOffscreenScreen( aspectData, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tcanvas.width = aspectData.width;\n\t\tcanvas.height = aspectData.height;\n\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\t\tbufferCanvas.width = aspectData.width;\n\t\tbufferCanvas.height = aspectData.height;\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, null, aspectData, true,\n\t\t\tfalse, null, willReadFrequently\n\t\t);\n\t}\n\n\t// Create screen with default styling\n\tfunction createScreen( aspectData, container, resizeCallback, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\n\t\t// Style the canvas\n\t\tcanvas.style.backgroundColor = \"black\";\n\t\tcanvas.style.position = \"absolute\";\n\t\tcanvas.style.imageRendering = \"pixelated\";\n\t\tcanvas.style.imageRendering = \"crisp-edges\";\n\n\t\t// If no container, use document body\n\t\tlet isContainer = true;\n\t\tif( !pi.util.isDomElement( container ) ) {\n\t\t\tisContainer = false;\n\t\t\tdocument.documentElement.style.height = \"100%\";\n\t\t\tdocument.documentElement.style.margin = \"0\";\n\t\t\tdocument.body.style.height = \"100%\";\n\t\t\tdocument.body.style.margin = \"0\";\n\t\t\tdocument.body.style.overflow = \"hidden\";\n\t\t\tcanvas.style.left = \"0\";\n\t\t\tcanvas.style.top = \"0\";\n\t\t\tcontainer = document.body;\n\t\t}\n\n\t\t// Make sure container is not blank\n\t\tif( container.offsetHeight === 0 ) {\n\t\t\tcontainer.style.height = \"200px\";\n\t\t}\n\n\t\t// Append canvas to container\n\t\tcontainer.appendChild( canvas );\n\n\t\tif( aspectData ) {\n\t\t\t// Calculate container size\n\t\t\tconst size = getSize( container );\n\n\t\t\t// Set the canvas size\n\t\t\tsetCanvasSize( aspectData, canvas, size.width, size.height );\n\n\t\t\t// Set the buffer size\n\t\t\tbufferCanvas.width = canvas.width;\n\t\t\tbufferCanvas.height = canvas.height;\n\t\t} else {\n\t\t\t// If canvas is inside an element, use static position\n\t\t\tif( isContainer ) {\n\t\t\t\tcanvas.style.position = \"static\";\n\t\t\t}\n\n\t\t\t// Set canvas to fullscreen\n\t\t\tcanvas.style.width = \"100%\";\n\t\t\tcanvas.style.height = \"100%\";\n\t\t\tconst size = getSize( canvas );\n\t\t\tcanvas.width = size.width;\n\t\t\tcanvas.height = size.height;\n\t\t\tbufferCanvas.width = size.width;\n\t\t\tbufferCanvas.height = size.height;\n\t\t}\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, container, aspectData, false,\n\t\t\tfalse, resizeCallback, willReadFrequently\n\t\t);\n\t}\n\n\t// Create screen without styles\n\tfunction createNoStyleScreen( aspectData, container, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\n\t\t// If no container, use document body\n\t\tif( !pi.util.isDomElement( container ) ) {\n\t\t\tcontainer = document.body;\n\t\t}\n\n\t\t// Append canvas to container\n\t\tcontainer.appendChild( canvas );\n\n\t\tif( aspectData && aspectData.splitter === \"x\" ) {\n\t\t\t// Set the buffer size\n\t\t\tcanvas.width = aspectData.width;\n\t\t\tcanvas.height = aspectData.height;\n\t\t\tbufferCanvas.width = canvas.width;\n\t\t\tbufferCanvas.height = canvas.height;\n\t\t} else {\n\t\t\tconst size = getSize( canvas );\n\t\t\tbufferCanvas.width = size.width;\n\t\t\tbufferCanvas.height = size.height;\n\t\t}\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, container, aspectData, false,\n\t\t\ttrue, null, willReadFrequently\n\t\t);\n\t}\n\n\t// Create the screen data object\n\tfunction createScreenData(\n\t\tcanvas, bufferCanvas, container, aspectData, isOffscreen, isNoStyles,\n\t\tresizeCallback, willReadFrequently\n\t) {\n\t\tconst screenData = {};\n\n\t\t// Set the screen id\n\t\tscreenData.id = piData.nextScreenId;\n\t\tpiData.nextScreenId += 1;\n\t\tpiData.activeScreen = screenData;\n\n\t\t// Set the screenId on the canvas\n\t\tcanvas.dataset.screenId = screenData.id;\n\n\t\t// Context attributes\n\t\tif( willReadFrequently ) {\n\t\t\tscreenData.contextAttributes = { \"willReadFrequently\": true };\n\t\t} else {\n\t\t\tscreenData.contextAttributes = {};\n\t\t}\n\n\t\t// Set the screen default data\n\t\tscreenData.canvas = canvas;\n\t\tscreenData.width = canvas.width;\n\t\tscreenData.height = canvas.height;\n\t\tscreenData.container = container;\n\t\tscreenData.aspectData = aspectData;\n\t\tscreenData.isOffscreen = isOffscreen;\n\t\tscreenData.isNoStyles = isNoStyles;\n\t\tscreenData.context = canvas.getContext( \"2d\", screenData.contextAttributes );\n\t\tscreenData.bufferCanvas = bufferCanvas;\n\t\tscreenData.bufferContext = bufferCanvas.getContext(\n\t\t\t\"2d\", screenData.contextAttributes\n\t\t);\n\t\tscreenData.dirty = false;\n\t\tscreenData.isAutoRender = true;\n\t\tscreenData.autoRenderMicrotaskScheduled = false;\n\t\tscreenData.imageData = null;\n\t\tscreenData.x = 0;\n\t\tscreenData.y = 0;\n\t\tscreenData.angle = 0;\n\t\tscreenData.pal = piData.defaultPalette.slice();\n\t\tscreenData.fColor = screenData.pal[ piData.defaultColor ] || \n\t\t\tpi.util.convertToColor( \"#FFFFFF\" );\n\t\tscreenData.bColor = screenData.pal[ 0 ] || pi.util.convertToColor( \"#000000\" );\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.strokeStyle = screenData.fColor.s;\n\t\tscreenData.mouseStarted = false;\n\t\tscreenData.touchStarted = false;\n\t\tscreenData.printCursor = {\n\t\t\t\"x\": 0,\n\t\t\t\"y\": 0,\n\t\t\t\"font\": piData.defaultFont,\n\t\t\t\"rows\": Math.floor( canvas.height / ( piData.defaultFont.height || 14 ) ),\n\t\t\t\"cols\": Math.floor( canvas.width / ( piData.defaultFont.width || 8 ) ),\n\t\t\t\"prompt\": piData.defaultPrompt,\n\t\t\t\"breakWord\": true\n\t\t};\n\t\tscreenData.clientRect = canvas.getBoundingClientRect();\n\t\tscreenData.mouse = {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"offsetX\": 0,\n\t\t\t\"offsetY\": 0,\n\t\t\t\"button\": 0,\n\t\t\t\"buttons\": 0,\n\t\t\t\"lastX\": -1,\n\t\t\t\"lastY\": -1,\n\t\t\t\"eventType\": \"\"\n\t\t};\n\t\tscreenData.touch = {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"count\": 0,\n\t\t\t\"touches\": [],\n\t\t\t\"eventType\": \"\"\n\t\t};\n\t\tscreenData.touches = {};\n\t\tscreenData.lastTouches = {};\n\t\tscreenData.pixelMode = true;\n\t\tscreenData.pen = {\n\t\t\t\"draw\": piData.defaultPenDraw,\n\t\t\t\"size\": 1,\n\t\t\t\"noise\": null\n\t\t};\n\t\tscreenData.blendPixelCmd = piData.defaultBlendCmd;\n\n\t\t// Disable anti-aliasing\n\t\tscreenData.context.imageSmoothingEnabled = false;\n\n\t\t// Event listeners\n\t\tscreenData.onMouseEventListeners = {};\n\t\tscreenData.onTouchEventListeners = {};\n\t\tscreenData.onPressEventListeners = {};\n\t\tscreenData.onClickEventListeners = {};\n\t\tscreenData.mouseEventListenersActive = 0;\n\t\tscreenData.touchEventListenersActive = 0;\n\t\tscreenData.pressEventListenersActive = 0;\n\t\tscreenData.clickEventListenersActive = 0;\n\t\tscreenData.lastEvent = null;\n\n\t\t// Right click is enabled\n\t\tscreenData.isContextMenuEnabled = true;\n\n\t\t// Resize callback\n\t\tscreenData.resizeCallback = resizeCallback;\n\n\t\t// Register this screen\n\t\tpiData.screens[ screenData.id ] = screenData;\n\n\t\treturn screenData;\n\t}\n\n\t// Set canvas size based on aspect ratio\n\tfunction setCanvasSize( aspectData, canvas, maxWidth, maxHeight ) {\n\t\tlet width = aspectData.width;\n\t\tlet height = aspectData.height;\n\t\tconst splitter = aspectData.splitter;\n\t\tlet newWidth, newHeight;\n\n\t\t// If set size to exact multiple\n\t\tif( aspectData.isMultiple && splitter !== \":\" ) {\n\t\t\tconst factorX = Math.floor( maxWidth / width );\n\t\t\tconst factorY = Math.floor( maxHeight / height );\n\t\t\tlet factor = factorX > factorY ? factorY : factorX;\n\t\t\tif( factor < 1 ) {\n\t\t\t\tfactor = 1;\n\t\t\t}\n\t\t\tnewWidth = width * factor;\n\t\t\tnewHeight = height * factor;\n\n\t\t\t// Extending the canvas to match container size\n\t\t\tif( splitter === \"e\" ) {\n\t\t\t\twidth = Math.floor( maxWidth / factor );\n\t\t\t\theight = Math.floor( maxHeight / factor );\n\t\t\t\tnewWidth = width * factor;\n\t\t\t\tnewHeight = height * factor;\n\t\t\t}\n\t\t} else {\n\t\t\t// Calculate the screen ratios\n\t\t\tconst ratio1 = height / width;\n\t\t\tconst ratio2 = width / height;\n\t\t\tnewWidth = maxHeight * ratio2;\n\t\t\tnewHeight = maxWidth * ratio1;\n\n\t\t\t// Calculate the best fit\n\t\t\tif( newWidth > maxWidth ) {\n\t\t\t\tnewWidth = maxWidth;\n\t\t\t\tnewHeight = newWidth * ratio1;\n\t\t\t} else {\n\t\t\t\tnewHeight = maxHeight;\n\t\t\t}\n\n\t\t\t// Extending canvas\n\t\t\tif( splitter === \"e\" ) {\n\t\t\t\twidth += Math.round( ( maxWidth - newWidth ) * ( width / newWidth ) );\n\t\t\t\theight += Math.round( ( maxHeight - newHeight ) * ( height / newHeight ) );\n\t\t\t\tnewWidth = maxWidth;\n\t\t\t\tnewHeight = maxHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Set the size\n\t\tcanvas.style.width = Math.floor( newWidth ) + \"px\";\n\t\tcanvas.style.height = Math.floor( newHeight ) + \"px\";\n\n\t\t// Set the margins\n\t\tcanvas.style.marginLeft = Math.floor( ( maxWidth - newWidth ) / 2 ) + \"px\";\n\t\tcanvas.style.marginTop = Math.floor( ( maxHeight - newHeight ) / 2 ) + \"px\";\n\n\t\t// Set the actual canvas dimensions\n\t\tif( splitter === \"x\" || splitter === \"e\" ) {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t} else {\n\t\t\t// For ratio mode, set to container size\n\t\t\tcanvas.width = Math.floor( newWidth );\n\t\t\tcanvas.height = Math.floor( newHeight );\n\t\t}\n\t}\n\n\t// Get size of container\n\tfunction getSize( element ) {\n\t\treturn {\n\t\t\t\"width\": element.offsetWidth || element.clientWidth || element.width,\n\t\t\t\"height\": element.offsetHeight || element.clientHeight || element.height\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Screen Commands Module\n * \n * Basic screen commands like remove, render, width/height getters, etc.\n * \n * @module modules/screen-commands\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// ONEVENT - Helper for adding event listeners (internal)\n\tpi._.addCommand( \"onevent\", onevent, true, true, [] );\n\n\tfunction onevent( mode, fn, once, hitBox, modes, name, listenerArr, extraId,\n\t\textraData, customData\n\t) {\n\t\t// Make sure mode is valid\n\t\tlet modeFound = false;\n\n\t\tfor( let i = 0; i < modes.length; i++ ) {\n\t\t\tif( mode === modes[ i ] ) {\n\t\t\t\tmodeFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif( !modeFound ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`${name}: mode needs to be one of the following ${modes.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Make sure once is a boolean\n\t\tonce = !!once;\n\n\t\t// Make sure function is valid\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( `${name}: fn is not a valid function` );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate hitbox\n\t\tif( hitBox ) {\n\t\t\tif(\n\t\t\t\t!pi.util.isInteger( hitBox.x ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.y ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.width ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.height )\n\t\t\t) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t`${name}: hitbox must have properties x, y, width, and height whose values are integers`\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_HITBOX\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Prevent event from being triggered in case event is called in an event\n\t\tsetTimeout( function() {\n\t\t\tconst originalFn = fn;\n\t\t\tlet newMode;\n\n\t\t\t// Add extraId to mode\n\t\t\tif( typeof extraId === \"string\" ) {\n\t\t\t\tnewMode = mode + extraId;\n\t\t\t} else {\n\t\t\t\tnewMode = mode;\n\t\t\t}\n\n\t\t\t// If it's a one time function\n\t\t\tif( once ) {\n\t\t\t\tfn = function( data, customData ) {\n\t\t\t\t\toffevent( mode, originalFn, modes, name, listenerArr, extraId );\n\t\t\t\t\toriginalFn( data, customData );\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif( !listenerArr[ newMode ] ) {\n\t\t\t\tlistenerArr[ newMode ] = [];\n\t\t\t}\n\n\t\t\tlistenerArr[ newMode ].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"hitBox\": hitBox,\n\t\t\t\t\"extraData\": extraData,\n\t\t\t\t\"clickDown\": false,\n\t\t\t\t\"originalFn\": originalFn,\n\t\t\t\t\"customData\": customData\n\t\t\t} );\n\t\t}, 1 );\n\n\t\treturn true;\n\t}\n\n\t// OFFEVENT - Helper for removing event listeners (internal)\n\tpi._.addCommand( \"offevent\", offevent, true, true, [] );\n\n\tfunction offevent( mode, fn, modes, name, listenerArr, extraId ) {\n\t\t// Make sure mode is valid\n\t\tlet modeFound = false;\n\n\t\tfor( let i = 0; i < modes.length; i++ ) {\n\t\t\tif( mode === modes[ i ] ) {\n\t\t\t\tmodeFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif( !modeFound ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`${name}: mode needs to be one of the following ${modes.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Add extraId to mode\n\t\tif( typeof extraId === \"string\" ) {\n\t\t\tmode += extraId;\n\t\t}\n\n\t\t// Validate fn\n\t\tconst isClear = fn == null;\n\t\tif( !isClear && !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( `${name}: fn is not a valid function` );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( listenerArr[ mode ] ) {\n\t\t\tif( isClear ) {\n\t\t\t\tdelete listenerArr[ mode ];\n\t\t\t} else {\n\t\t\t\tfor( let i = listenerArr[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\t\tif( listenerArr[ mode ][ i ].originalFn === fn ) {\n\t\t\t\t\t\tlistenerArr[ mode ].splice( i, 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( listenerArr[ mode ].length === 0 ) {\n\t\t\t\t\t\tdelete listenerArr[ mode ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// CLEAREVENTS - Clear all event listeners\n\tpi._.addCommand( \"clearEvents\", clearEvents, false, true, [] );\n\n\tfunction clearEvents( screenData ) {\n\t\t// Reset all event listeners\n\t\tscreenData.onMouseEventListeners = {};\n\t\tscreenData.onTouchEventListeners = {};\n\t\tscreenData.onPressEventListeners = {};\n\t\tscreenData.onClickEventListeners = {};\n\t\tscreenData.mouseEventListenersActive = 0;\n\t\tscreenData.touchEventListenersActive = 0;\n\t\tscreenData.pressEventListenersActive = 0;\n\t\tscreenData.clickEventListenersActive = 0;\n\t\tscreenData.lastEvent = null;\n\t}\n\n\t// SETAUTORENDER - Enable/disable automatic rendering\n\tpi._.addCommand( \"setAutoRender\", setAutoRender, false, true, [ \"isAutoRender\" ] );\n\tpi._.addSetting( \"autoRender\", setAutoRender, true, [ \"isAutoRender\" ] );\n\n\tfunction setAutoRender( screenData, args ) {\n\t\tscreenData.isAutoRender = !!args[ 0 ];\n\n\t\tif( screenData.isAutoRender ) {\n\t\t\tscreenData.screenObj.render();\n\t\t}\n\t}\n\n\t// Remove the screen from the page and memory\n\tpi._.addCommand( \"removeScreen\", removeScreen, false, true, [] );\n\n\tfunction removeScreen( screenData ) {\n\t\tconst screenId = screenData.id;\n\n\t\t// If removing active screen, find another\n\t\tif( screenData === piData.activeScreen ) {\n\t\t\tfor( const i in piData.screens ) {\n\t\t\t\tif( piData.screens[ i ] !== screenData ) {\n\t\t\t\t\tpiData.activeScreen = piData.screens[ i ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Cancel input if method exists\n\t\tif( screenData.screenObj.cancelInput ) {\n\t\t\tscreenData.screenObj.cancelInput();\n\t\t}\n\n\t\t// Remove all commands from screen object\n\t\tfor( const i in screenData.screenObj ) {\n\t\t\tdelete screenData.screenObj[ i ];\n\t\t}\n\n\t\t// Remove the canvas from the page\n\t\tif( screenData.canvas.parentElement ) {\n\t\t\tscreenData.canvas.parentElement.removeChild( screenData.canvas );\n\t\t}\n\n\t\t// Set values to null\n\t\tscreenData.canvas = null;\n\t\tscreenData.bufferCanvas = null;\n\t\tscreenData.pal = null;\n\t\tscreenData.commands = null;\n\t\tscreenData.context = null;\n\t\tscreenData.imageData = null;\n\t\tscreenData.screenObj = null;\n\n\t\t// Delete the screen from screens container\n\t\tdelete piData.screens[ screenId ];\n\t}\n\n\t// Render screen (puts buffer to main canvas)\n\tpi._.addCommand( \"render\", render, false, true, [] );\n\n\tfunction render( screenData ) {\n\t\tif( screenData.dirty === true ) {\n\t\t\tscreenData.context.putImageData(\n\t\t\t\tscreenData.imageData, 0, 0\n\t\t\t);\n\t\t\tscreenData.dirty = false;\n\t\t}\n\t}\n\n\t// Get screen width\n\tpi._.addCommand( \"width\", getWidth, false, true, [] );\n\n\tfunction getWidth( screenData ) {\n\t\treturn screenData.width;\n\t}\n\n\t// Get screen height\n\tpi._.addCommand( \"height\", getHeight, false, true, [] );\n\n\tfunction getHeight( screenData ) {\n\t\treturn screenData.height;\n\t}\n\n\t// Get canvas element\n\tpi._.addCommand( \"canvas\", getCanvas, false, true, [] );\n\n\tfunction getCanvas( screenData ) {\n\t\treturn screenData.canvas;\n\t}\n\n\t// Set background color\n\tpi._.addCommand( \"setBgColor\", setBgColor, false, true, [ \"color\" ] );\n\tpi._.addSetting( \"bgColor\", setBgColor, true, [ \"color\" ] );\n\n\tfunction setBgColor( screenData, args ) {\n\t\tlet color = args[ 0 ];\n\t\tlet bc;\n\n\t\tif( pi.util.isInteger( color ) ) {\n\t\t\tbc = screenData.pal[ color ];\n\t\t} else {\n\t\t\tbc = pi.util.convertToColor( color );\n\t\t}\n\n\t\tif( bc && typeof bc.s === \"string\" ) {\n\t\t\tscreenData.canvas.style.backgroundColor = bc.s;\n\t\t} else {\n\t\t\tconst error = new TypeError( \"bgColor: invalid color value for parameter c.\" );\n\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Set container background color\n\tpi._.addCommand( \"setContainerBgColor\", setContainerBgColor, false, true, [ \"color\" ] );\n\tpi._.addSetting( \"containerBgColor\", setContainerBgColor, true, [ \"color\" ] );\n\n\tfunction setContainerBgColor( screenData, args ) {\n\t\tconst color = args[ 0 ];\n\t\tlet bc;\n\n\t\tif( screenData.container ) {\n\t\t\tif( pi.util.isInteger( color ) ) {\n\t\t\t\tbc = screenData.pal[ color ];\n\t\t\t} else {\n\t\t\t\tbc = pi.util.convertToColor( color );\n\t\t\t}\n\n\t\t\tif( bc && typeof bc.s === \"string\" ) {\n\t\t\t\tscreenData.container.style.backgroundColor = bc.s;\n\t\t\t} else {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"containerBgColor: invalid color value for parameter c.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\t// FINDCOLOR - Find or add color to palette\n\tpi._.addCommand( \"findColor\", findColor, false, true,\n\t\t[ \"color\", \"tolerance\", \"isAddToPalette\" ]\n\t);\n\n\tfunction findColor( screenData, args ) {\n\t\tlet color = args[ 0 ];\n\t\tlet tolerance = args[ 1 ];\n\t\tconst isAddToPalette = !!args[ 2 ];\n\n\t\t// Max color difference constant\n\t\tconst m_maxDifference = ( 255 * 255 ) * 3.25;\n\n\t\tif( tolerance == null ) {\n\t\t\ttolerance = 1;\n\t\t} else if( isNaN( tolerance ) || tolerance < 0 || tolerance > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"findColor: parameter tolerance must be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\ttolerance = tolerance * ( 2 - tolerance ) * m_maxDifference;\n\t\tconst pal = screenData.pal;\n\n\t\t// Check cache first\n\t\tif( color && color.s && screenData.cache.findColor[ color.s ] !== undefined ) {\n\t\t\treturn screenData.cache.findColor[ color.s ];\n\t\t}\n\n\t\t// Convert color to color object\n\t\tcolor = piData.commands.findColorValue( screenData, color, \"findColor\" );\n\n\t\t// Find exact match or closest color in palette\n\t\tfor( let i = 0; i < pal.length; i++ ) {\n\t\t\tif( pal[ i ].s === color.s ) {\n\t\t\t\tscreenData.cache.findColor[ color.s ] = i;\n\t\t\t\treturn i;\n\t\t\t} else {\n\t\t\t\tconst dr = pal[ i ].r - color.r;\n\t\t\t\tconst dg = pal[ i ].g - color.g;\n\t\t\t\tconst db = pal[ i ].b - color.b;\n\t\t\t\tconst da = pal[ i ].a - color.a;\n\n\t\t\t\tconst difference = ( dr * dr + dg * dg + db * db + da * da * 0.25 );\n\t\t\t\tconst similarity = m_maxDifference - difference;\n\n\t\t\t\tif( similarity >= tolerance ) {\n\t\t\t\t\tscreenData.cache.findColor[ color.s ] = i;\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to palette if allowed\n\t\tif( isAddToPalette ) {\n\t\t\tpal.push( color );\n\t\t\tscreenData.cache.findColor[ color.s ] = pal.length - 1;\n\t\t\treturn pal.length - 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// SET COLOR - Set drawing color for current screen\n\tpi._.addCommand( \"setColor\", setColor, false, true, [ \"color\", \"isAddToPalette\" ] );\n\tpi._.addSetting( \"color\", setColor, true, [ \"color\", \"isAddToPalette\" ] );\n\n\tfunction setColor( screenData, args ) {\n\t\tconst colorInput = args[ 0 ];\n\t\tconst isAddToPalette = !!args[ 1 ];\n\n\t\tconst colorValue = piData.commands.findColorValue(\n\t\t\tscreenData, colorInput, \"setColor\"\n\t\t);\n\n\t\tif( colorValue === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( isAddToPalette ) {\n\t\t\t// Find or add color to palette\n\t\t\tconst colorIndex = piData.commands.findColor( screenData,\n\t\t\t\t[ colorValue, 1, isAddToPalette ]\n\t\t\t);\n\t\t\tscreenData.fColor = screenData.pal[ colorIndex ];\n\t\t} else {\n\t\t\tscreenData.fColor = colorValue;\n\t\t}\n\n\t\t// Update canvas context styles for AA mode\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.strokeStyle = screenData.fColor.s;\n\t}\n\n\t// SET PEN SIZE - Set pen size for drawing\n\tpi._.addCommand( \"setPenSize\", setPenSize, false, true, [ \"size\" ] );\n\tpi._.addSetting( \"penSize\", setPenSize, true, [ \"size\" ] );\n\n\tfunction setPenSize( screenData, args ) {\n\t\tlet size = args[ 0 ];\n\n\t\tif( size === undefined ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\tif( !pi.util.isInteger( size ) || size < 1 ) {\n\t\t\tconst error = new TypeError( \"setPenSize: size must be an integer >= 1.\" );\n\t\t\terror.code = \"INVALID_PEN_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.pen.size = size;\n\n\t\t// Update canvas line width for AA mode\n\t\tscreenData.context.lineWidth = size;\n\t}\n\n\t// GETPAL - Get screen's palette\n\tpi._.addCommand( \"getPal\", getPal, false, true, [] );\n\n\tfunction getPal( screenData ) {\n\t\tconst colors = [];\n\t\tfor( let i = 0; i < screenData.pal.length; i++ ) {\n\t\t\tconst color = {\n\t\t\t\t\"r\": screenData.pal[ i ].r,\n\t\t\t\t\"g\": screenData.pal[ i ].g,\n\t\t\t\t\"b\": screenData.pal[ i ].b,\n\t\t\t\t\"a\": screenData.pal[ i ].a,\n\t\t\t\t\"s\": screenData.pal[ i ].s\n\t\t\t};\n\t\t\tcolors.push( color );\n\t\t}\n\t\treturn colors;\n\t}\n\n\t// SETPALCOLOR - Set a specific color in the palette\n\tpi._.addCommand( \"setPalColor\", setPalColor, false, true, [ \"index\", \"color\" ] );\n\tpi._.addSetting( \"palColor\", setPalColor, true, [ \"index\", \"color\" ] );\n\n\tfunction setPalColor( screenData, args ) {\n\t\tconst index = args[ 0 ];\n\t\tconst color = args[ 1 ];\n\n\t\tif( !pi.util.isInteger( index ) || index < 0 || index > screenData.pal.length ) {\n\t\t\tconst error = new RangeError( \"setPalColor: index is not a valid integer value\" );\n\t\t\terror.code = \"INVALID_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst colorValue = pi.util.convertToColor( color );\n\t\tif( colorValue === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setPalColor: parameter color is not a valid color format\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Check if we are changing the current selected fore color\n\t\tif( screenData.fColor.s === screenData.pal[ index ].s ) {\n\t\t\tscreenData.fColor = colorValue;\n\t\t}\n\n\t\t// Update the color cache\n\t\tif( screenData.cache.findColor[ color.s ] ) {\n\t\t\tscreenData.cache.findColor[ color.s ] = index;\n\t\t}\n\n\t\tscreenData.pal[ index ] = colorValue;\n\t}\n\n\t// SWAPCOLOR - Swap one color for another in the palette and screen\n\tpi._.addCommand( \"swapColor\", swapColor, false, true, [ \"oldColor\", \"newColor\" ] );\n\n\tfunction swapColor( screenData, args ) {\n\t\tlet oldColor = args[ 0 ];\n\t\tlet newColor = args[ 1 ];\n\n\t\t// Validate oldColor\n\t\tif( !pi.util.isInteger( oldColor ) ) {\n\t\t\tconst error = new TypeError( \"swapColor: parameter oldColor must be an integer\" );\n\t\t\terror.code = \"INVALID_OLD_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( oldColor < 0 || oldColor >= screenData.pal.length ) {\n\t\t\tconst error = new RangeError( \"swapColor: parameter oldColor is an invalid integer\" );\n\t\t\terror.code = \"INVALID_OLD_COLOR_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( screenData.pal[ oldColor ] === undefined ) {\n\t\t\tconst error = new Error(\n\t\t\t\t\"swapColor: parameter oldColor is not in the screen color palette\"\n\t\t\t);\n\t\t\terror.code = \"COLOR_NOT_IN_PALETTE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst index = oldColor;\n\t\toldColor = screenData.pal[ index ];\n\n\t\t// Validate newColor\n\t\tnewColor = pi.util.convertToColor( newColor );\n\t\tif( newColor === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"swapColor: parameter newColor is not a valid color format\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_NEW_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Swap all colors on screen\n\t\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tif(\n\t\t\t\t\tdata[ i ] === oldColor.r &&\n\t\t\t\t\tdata[ i + 1 ] === oldColor.g &&\n\t\t\t\t\tdata[ i + 2 ] === oldColor.b &&\n\t\t\t\t\tdata[ i + 3 ] === oldColor.a\n\t\t\t\t) {\n\t\t\t\t\tdata[ i ] = newColor.r;\n\t\t\t\t\tdata[ i + 1 ] = newColor.g;\n\t\t\t\t\tdata[ i + 2 ] = newColor.b;\n\t\t\t\t\tdata[ i + 3 ] = newColor.a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\n\t\t// Update the pal data\n\t\tscreenData.pal[ index ] = newColor;\n\t}\n\n\t// SETPIXELMODE - Toggle pixel mode on/off\n\tpi._.addCommand( \"setPixelMode\", setPixelMode, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"pixelMode\", setPixelMode, true, [ \"isEnabled\" ] );\n\n\tfunction setPixelMode( screenData, args ) {\n\t\tconst isEnabled = args[ 0 ];\n\n\t\tif( isEnabled ) {\n\t\t\tscreenData.context.imageSmoothingEnabled = false;\n\t\t\tscreenData.pixelMode = true;\n\t\t} else {\n\t\t\tscreenData.context.imageSmoothingEnabled = true;\n\t\t\tscreenData.pixelMode = false;\n\t\t}\n\t}\n\n\t// SETPEN - Set pen style, size, and noise\n\tpi._.addCommand( \"setPen\", setPen, false, true, [ \"pen\", \"size\", \"noise\" ] );\n\tpi._.addSetting( \"pen\", setPen, true, [ \"pen\", \"size\", \"noise\" ] );\n\n\tfunction setPen( screenData, args ) {\n\t\tlet pen = args[ 0 ];\n\t\tlet size = Math.round( args[ 1 ] );\n\t\tlet noise = args[ 2 ];\n\n\t\tif( !piData.pens[ pen ] ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setPen: parameter pen is not a valid pen. Valid pens: ${piData.penList.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_PEN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !pi.util.isInteger( size ) ) {\n\t\t\tconst error = new TypeError( \"setPen: parameter size must be an integer\" );\n\t\t\terror.code = \"INVALID_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( noise && ( !pi.util.isArray( noise ) && isNaN( noise ) ) ) {\n\t\t\tconst error = new TypeError( \"setPen: parameter noise is not an array or number\" );\n\t\t\terror.code = \"INVALID_NOISE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( pi.util.isArray( noise ) ) {\n\t\t\tnoise = noise.slice();\n\t\t\tfor( let i = 0; i < noise.length; i++ ) {\n\t\t\t\tif( isNaN( noise[ i ] ) ) {\n\t\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\t\"setPen: parameter noise array contains an invalid value\"\n\t\t\t\t\t);\n\t\t\t\t\terror.code = \"INVALID_NOISE_VALUE\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( pen === \"pixel\" ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\t// Set the minimum pen size to 1\n\t\tif( size < 1 ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\t// Handle special case of size of one\n\t\tif( size === 1 ) {\n\n\t\t\t// Size is one so only draw one pixel\n\t\t\tscreenData.pen.draw = piData.pens.pixel.cmd;\n\n\t\t\t// Set the line width for context draw\n\t\t\tscreenData.context.lineWidth = 1;\n\t\t} else {\n\n\t\t\t// Set the draw mode for pixel draw\n\t\t\tscreenData.pen.draw = piData.pens[ pen ].cmd;\n\n\t\t\t// Set the line width for context draw\n\t\t\tscreenData.context.lineWidth = size * 2 - 1;\n\t\t}\n\n\t\tscreenData.pen.noise = noise;\n\t\tscreenData.pen.size = size;\n\t\tscreenData.context.lineCap = piData.pens[ pen ].cap;\n\t}\n\n\t// SETBLENDMODE - Set blend mode for pixel operations\n\tpi._.addCommand( \"setBlendMode\", setBlendMode, false, true, [ \"mode\" ] );\n\tpi._.addSetting( \"blendMode\", setBlendMode, true, [ \"mode\" ] );\n\n\tfunction setBlendMode( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\n\t\tif( !piData.blendCommands[ mode ] ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setBlendMode: Argument blend is not a valid blend mode. Valid modes: ${piData.blendCommandsList.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_BLEND_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.blendPixelCmd = piData.blendCommands[ mode ];\n\t}\n\n\t// GETPIXEL - Get color of a single pixel\n\tpi._.addCommand( \"getPixel\", getPixel, false, true, [ \"x\", \"y\" ] );\n\n\tfunction getPixel( screenData, args ) {\n\t\tconst x = Math.round( args[ 0 ] );\n\t\tconst y = Math.round( args[ 1 ] );\n\n\t\t// Make sure x and y are integers\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"getPixel: x and y must be integers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\treturn pi.util.convertToColor( {\n\t\t\t\"r\": data[ i ],\n\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\"a\": data[ i + 3 ]\n\t\t} );\n\t}\n\n\t// FILTERIMG - Apply a filter function to all pixels\n\tpi._.addCommand( \"filterImg\", filterImg, false, true, [ \"filter\" ] );\n\n\tfunction filterImg( screenData, args ) {\n\t\tconst filter = args[ 0 ];\n\n\t\tif( !pi.util.isFunction( filter ) ) {\n\t\t\tconst error = new TypeError( \"filterImg: filter must be a callback function\" );\n\t\t\terror.code = \"INVALID_FILTER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Apply filter to all pixels\n\t\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tconst color = filter( {\n\t\t\t\t\t\"r\": data[ i ],\n\t\t\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\t\t\"a\": data[ i + 3 ]\n\t\t\t\t}, x, y );\n\n\t\t\t\tif( color &&\n\t\t\t\t\tpi.util.isInteger( color.r ) &&\n\t\t\t\t\tpi.util.isInteger( color.g ) &&\n\t\t\t\t\tpi.util.isInteger( color.b ) &&\n\t\t\t\t\tpi.util.isInteger( color.a )\n\t\t\t\t) {\n\t\t\t\t\tdata[ i ] = pi.util.clamp( color.r, 0, 255 );\n\t\t\t\t\tdata[ i + 1 ] = pi.util.clamp( color.g, 0, 255 );\n\t\t\t\t\tdata[ i + 2 ] = pi.util.clamp( color.b, 0, 255 );\n\t\t\t\t\tdata[ i + 3 ] = pi.util.clamp( color.a, 0, 255 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// GET - Capture screen region as 2D array of palette indices\n\tpi._.addCommand( \"get\", get, false, true,\n\t\t[ \"x1\", \"y1\", \"x2\", \"y2\", \"tolerance\", \"isAddToPalette\" ]\n\t);\n\n\tfunction get( screenData, args ) {\n\t\tlet x1 = Math.round( args[ 0 ] );\n\t\tlet y1 = Math.round( args[ 1 ] );\n\t\tlet x2 = Math.round( args[ 2 ] );\n\t\tlet y2 = Math.round( args[ 3 ] );\n\t\tconst tolerance = args[ 4 ] != null ? args[ 4 ] : 1;\n\t\tconst isAddToPalette = !!args[ 5 ];\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError( \"get: parameters x1, x2, y1, y2 must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( tolerance ) ) {\n\t\t\tconst error = new TypeError( \"get: parameter tolerance must be a number.\" );\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Clamp coordinates\n\t\tx1 = pi.util.clamp( x1, 0, screenData.width - 1 );\n\t\tx2 = pi.util.clamp( x2, 0, screenData.width - 1 );\n\t\ty1 = pi.util.clamp( y1, 0, screenData.height - 1 );\n\t\ty2 = pi.util.clamp( y2, 0, screenData.height - 1 );\n\n\t\t// Swap if needed\n\t\tif( x1 > x2 ) {\n\t\t\tconst t = x1;\n\t\t\tx1 = x2;\n\t\t\tx2 = t;\n\t\t}\n\t\tif( y1 > y2 ) {\n\t\t\tconst t = y1;\n\t\t\ty1 = y2;\n\t\t\ty2 = t;\n\t\t}\n\n\t\t// Get image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst imageData = screenData.imageData;\n\t\tconst data = [];\n\n\t\tlet row = 0;\n\t\tfor( let y = y1; y <= y2; y++ ) {\n\t\t\tdata.push( [] );\n\t\t\tfor( let x = x1; x <= x2; x++ ) {\n\n\t\t\t\t// Calculate the index of the image data\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tconst r = imageData.data[ i ];\n\t\t\t\tconst g = imageData.data[ i + 1 ];\n\t\t\t\tconst b = imageData.data[ i + 2 ];\n\t\t\t\tconst a = imageData.data[ i + 3 ];\n\n\t\t\t\tconst color = pi.util.rgbToColor( r, g, b, a );\n\t\t\t\tconst colorIndex = piData.commands.findColor( screenData,\n\t\t\t\t\t[ color, tolerance, isAddToPalette ]\n\t\t\t\t);\n\n\t\t\t\tdata[ row ].push( colorIndex );\n\t\t\t}\n\t\t\trow += 1;\n\t\t}\n\n\t\treturn data;\n\t}\n}\n\n", "/**\n * Pi.js - Pixel-Mode Graphics Module\n * \n * Pixel-perfect drawing implementations using manual pixel manipulation.\n * Implements Bresenham line, midpoint circle, and other algorithms.\n * \n * @module modules/graphics-pixel\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// CLS - Clear screen\n\tpi._.addCommand( \"cls\", cls, false, true, [ \"x\", \"y\", \"width\", \"height\" ] );\n\n\tfunction cls( screenData, args ) {\n\t\tconst x = pi.util.getInt( Math.round( args[ 0 ] ), 0 );\n\t\tconst y = pi.util.getInt( Math.round( args[ 1 ] ), 0 );\n\t\tconst width = pi.util.getInt( Math.round( args[ 2 ] ), screenData.width );\n\t\tconst height = pi.util.getInt( Math.round( args[ 3 ] ), screenData.height );\n\n\t\tif( x !== 0 || y !== 0 || width !== screenData.width || height !== screenData.height ) {\n\t\t\tscreenData.screenObj.render();\n\t\t\tscreenData.context.clearRect( x, y, width, height );\n\t\t} else {\n\t\t\tscreenData.context.clearRect( x, y, width, height );\n\t\t\tscreenData.imageData = null;\n\t\t\tscreenData.printCursor.x = 0;\n\t\t\tscreenData.printCursor.y = 0;\n\t\t\tscreenData.x = 0;\n\t\t\tscreenData.y = 0;\n\t\t\tscreenData.dirty = false;\n\t\t}\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// PSET - Set pixel (pixel mode and anti-aliased mode)\n\tpi._.addCommands( \"pset\", pset, aaPset, [ \"x\", \"y\" ] );\n\n\tfunction pset( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\n\t\t// Make sure x and y are integers\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"pset: Arguments x and y must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set the cursor\n\t\tscreenData.x = x;\n\t\tscreenData.y = y;\n\n\t\t// Make sure x and y are on the screen\n\t\tif( !pi.util.inRange2( x, y, 0, 0, screenData.width, screenData.height ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the fore color\n\t\tconst color = screenData.fColor;\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaPset( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"pset: Arguments x and y must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.context.fillRect( x, y, 1, 1 );\n\t}\n\n\t// LINE - Draw line (Bresenham algorithm for pixel mode)\n\tpi._.addCommands( \"line\", pxLine, aaLine, [ \"x1\", \"y1\", \"x2\", \"y2\" ] );\n\n\tfunction pxLine( screenData, args ) {\n\t\tlet x1 = Math.round( args[ 0 ] );\n\t\tlet y1 = Math.round( args[ 1 ] );\n\t\tlet x2 = Math.round( args[ 2 ] );\n\t\tlet y2 = Math.round( args[ 3 ] );\n\n\t\t// Make sure coordinates are integers\n\t\tif(\n\t\t\t!pi.util.isInteger( x1 ) || !pi.util.isInteger( y1 ) ||\n\t\t\t!pi.util.isInteger( x2 ) || !pi.util.isInteger( y2 )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"line: Arguments x1, y1, x2, and y2 must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Initialize the color for the line\n\t\tconst color = screenData.fColor;\n\n\t\tconst dx = Math.abs( x2 - x1 );\n\t\tconst dy = Math.abs( y2 - y1 );\n\n\t\t// Set the x slope\n\t\tconst sx = x1 < x2 ? 1 : -1;\n\n\t\t// Set the y slope\n\t\tconst sy = y1 < y2 ? 1 : -1;\n\n\t\t// Set the error\n\t\tlet err = dx - dy;\n\n\t\t// Get the image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Set the first pixel\n\t\tscreenData.pen.draw( screenData, x1, y1, color );\n\n\t\t// Bresenham's line algorithm\n\t\twhile( !( ( x1 === x2 ) && ( y1 === y2 ) ) ) {\n\t\t\tconst e2 = err << 1;\n\n\t\t\tif( e2 > -dy ) {\n\t\t\t\terr -= dy;\n\t\t\t\tx1 += sx;\n\t\t\t}\n\n\t\t\tif( e2 < dx ) {\n\t\t\t\terr += dx;\n\t\t\t\ty1 += sy;\n\t\t\t}\n\n\t\t\t// Set the next pixel\n\t\t\tscreenData.pen.draw( screenData, x1, y1, color );\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaLine( screenData, args ) {\n\t\tconst x1 = args[ 0 ];\n\t\tconst y1 = args[ 1 ];\n\t\tconst x2 = args[ 2 ];\n\t\tconst y2 = args[ 3 ];\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"line: parameters x1, y1, x2, y2 must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tctx.beginPath();\n\t\tctx.moveTo( x1, y1 );\n\t\tctx.lineTo( x2, y2 );\n\t\tctx.stroke();\n\t}\n\n\t// CIRCLE - Draw circle (Midpoint circle algorithm for pixel mode)\n\tpi._.addCommands( \"circle\", pxCircle, aaCircle, [ \"x\", \"y\", \"radius\", \"fillColor\" ] );\n\n\tfunction pxCircle( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radius = Math.round( args[ 2 ] );\n\t\tlet fillColor = args[ 3 ];\n\t\tlet isFill = false;\n\n\t\tif(\n\t\t\t!pi.util.isInteger( x ) ||\n\t\t\t!pi.util.isInteger( y ) ||\n\t\t\t!pi.util.isInteger( radius )\n\t\t) {\n\t\t\tconst error = new TypeError( \"circle: x, y, radius must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Check for fill color\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"circle\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Initialize the color for the circle outline\n\t\tconst color = screenData.fColor;\n\n\t\t// Fill the circle first if needed (draw horizontal lines)\n\t\tif( isFill ) {\n\t\t\tconst r = radius - 1; // Use same radius as outline\n\t\t\tconst rSquared = r * r;\n\n\t\t\t// Draw horizontal lines for each row of the circle\n\t\t\tfor( let dy = -r; dy <= r; dy++ ) {\n\t\t\t\tconst py = y + dy;\n\n\t\t\t\t// Skip if row is out of bounds\n\t\t\t\tif( py < 0 || py >= screenData.height ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Calculate half-width of circle at this y coordinate\n\t\t\t\tconst dx = Math.floor( Math.sqrt( rSquared - dy * dy ) );\n\n\t\t\t\t// Draw horizontal line from -dx to +dx\n\t\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\n\t\t\t\t\t// Skip if pixel is out of bounds\n\t\t\t\t\tif( px < 0 || px >= screenData.width ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set individual pixel for scanline fill\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, px, py, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Draw the outline after fill (outline will overwrite fill pixels on border)\n\t\tconst outlineRadius = radius - 1;\n\t\tlet x2 = outlineRadius;\n\t\tlet y2 = 0;\n\n\t\t// Midpoint circle algorithm - Only print initial points if r > 0\n\t\tif( outlineRadius > 1 ) {\n\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x, x2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x, -x2 + y, color );\n\t\t} else if( outlineRadius === 1 ) {\n\t\t\tscreenData.pen.draw( screenData, x + 1, y, color );\n\t\t\tscreenData.pen.draw( screenData, x - 1, y, color );\n\t\t\tscreenData.pen.draw( screenData, x, y + 1, color );\n\t\t\tscreenData.pen.draw( screenData, x, y - 1, color );\n\t\t\ty2 = x2 + 1;\n\t\t} else if( outlineRadius === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\t\ty2 = x2 + 1;\n\t\t}\n\n\t\t// Initialize decision parameter\n\t\tlet midPoint = 1 - outlineRadius;\n\n\t\twhile( x2 > y2 ) {\n\t\t\ty2 += 1;\n\n\t\t\tif( midPoint <= 0 ) {\n\t\t\t\t// Mid-point is inside or on the perimeter\n\t\t\t\tmidPoint = midPoint + 2 * y2 + 1;\n\t\t\t} else {\n\t\t\t\t// Mid point is outside the perimeter\n\t\t\t\tx2 -= 1;\n\t\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\n\t\t\t}\n\n\t\t\t// Set pixels around point and reflection in other octants\n\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x2 + x, -y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, -y2 + y, color );\n\n\t\t\t// Set pixels on the perimeter points if not on x = y\n\t\t\tif( x2 !== y2 ) {\n\t\t\t\tscreenData.pen.draw( screenData, y2 + x, x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, y2 + x, -x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, -x2 + y, color );\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaCircle( screenData, args ) {\n\t\tlet x = args[ 0 ] + 0.5;\n\t\tlet y = args[ 1 ] + 0.5;\n\t\tlet r = args[ 2 ] - 0.9;\n\t\tlet fillColor = args[ 3 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( r ) ) {\n\t\t\tconst error = new TypeError( \"circle: parameters x, y, r must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Ensure radius is not negative\n\t\tif( r < 0 ) {\n\t\t\tr = 0;\n\t\t}\n\n\t\t// Check for fill\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"circle\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tconst strokeColor = screenData.fColor.s;\n\n\t\t// Create single path for both fill and stroke\n\t\tctx.beginPath();\n\t\tctx.arc( x, y, r, 0, Math.PI * 2 );\n\n\t\t// Draw fill first if needed\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fill();\n\t\t}\n\n\t\t// Always draw the outline stroke\n\t\tctx.strokeStyle = strokeColor;\n\t\tctx.stroke();\n\t}\n\n\t// RECT - Draw rectangle\n\tpi._.addCommands( \"rect\", pxRect, aaRect, [ \"x\", \"y\", \"width\", \"height\", \"fillColor\" ] );\n\n\tfunction pxRect( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet width = Math.round( args[ 2 ] );\n\t\tlet height = Math.round( args[ 3 ] );\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif(\n\t\t\t!pi.util.isInteger( x ) || !pi.util.isInteger( y ) ||\n\t\t\t!pi.util.isInteger( width ) || !pi.util.isInteger( height )\n\t\t) {\n\t\t\tconst error = new TypeError( \"rect: x, y, width, height must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst color = screenData.fColor;\n\t\tconst isFill = fillColor != null;\n\n\t\tif( isFill ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"rect\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Draw outline\n\t\tfor( let i = 0; i < width; i++ ) {\n\t\t\tscreenData.pen.draw( screenData, x + i, y, color );\n\t\t\tscreenData.pen.draw( screenData, x + i, y + height - 1, color );\n\t\t}\n\n\t\tfor( let i = 1; i < height - 1; i++ ) {\n\t\t\tscreenData.pen.draw( screenData, x, y + i, color );\n\t\t\tscreenData.pen.draw( screenData, x + width - 1, y + i, color );\n\t\t}\n\n\t\t// Fill if needed\n\t\tif( isFill ) {\n\t\t\tfor( let j = 1; j < height - 1; j++ ) {\n\t\t\t\tfor( let i = 1; i < width - 1; i++ ) {\n\t\t\t\t\tpiData.commands.setPixel( screenData, x + i, y + j, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaRect( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\t\tconst width = args[ 2 ];\n\t\tconst height = args[ 3 ];\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( width ) || isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"rect: parameters must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst isFill = fillColor != null;\n\n\t\tif( isFill ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"rect\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fillRect( x, y, width, height );\n\t\t} else {\n\t\t\tctx.strokeRect( x, y, width, height );\n\t\t}\n\t}\n\n\t// ELLIPSE - Draw ellipse (Midpoint ellipse algorithm for pixel mode)\n\tpi._.addCommands( \"ellipse\", pxEllipse, aaEllipse,\n\t\t[ \"x\", \"y\", \"radiusX\", \"radiusY\", \"fillColor\" ]\n\t);\n\n\tfunction pxEllipse( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radiusX = Math.round( args[ 2 ] );\n\t\tlet radiusY = Math.round( args[ 3 ] );\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radiusX ) || isNaN( radiusY ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: parameters x, y, radiusX, radiusY must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"ellipse\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Initialize the color for the outline\n\t\tconst color = screenData.fColor;\n\n\t\t// Handle degenerate case\n\t\tif( radiusX === 0 && radiusY === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x ), Math.floor( y ), color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Fill the ellipse first if needed (draw horizontal lines)\n\t\tif( isFill ) {\n\t\t\tconst rxSquared = radiusX * radiusX;\n\t\t\tconst rySquared = radiusY * radiusY;\n\n\t\t\t// Draw horizontal lines for each row of the ellipse\n\t\t\tfor( let dy = -radiusY; dy <= radiusY; dy++ ) {\n\t\t\t\tconst py = y + dy;\n\n\t\t\t\t// Skip if row is out of bounds\n\t\t\t\tif( py < 0 || py >= screenData.height ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Calculate half-width of ellipse at this y coordinate\n\t\t\t\t// Using ellipse equation: (x/rx)^2 + (y/ry)^2 = 1\n\t\t\t\t// Solving for x: x = rx * sqrt(1 - (y/ry)^2)\n\t\t\t\tconst dx = Math.floor( radiusX * Math.sqrt( 1 - ( dy * dy ) / rySquared ) );\n\n\t\t\t\t// Draw horizontal line from -dx to +dx\n\t\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\n\t\t\t\t\t// Skip if pixel is out of bounds\n\t\t\t\t\tif( px < 0 || px >= screenData.width ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set individual pixel for scanline fill (like pxCircle)\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, px, py, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now draw the outline using Midpoint ellipse algorithm\n\t\t// Starting points\n\t\tlet x2 = 0;\n\t\tlet y2 = radiusY;\n\n\t\t// Decision parameter of region 1\n\t\tlet d1 = ( radiusY * radiusY ) - ( radiusX * radiusX * radiusY ) +\n\t\t\t( 0.25 * radiusX * radiusX );\n\n\t\tlet dx = 2 * radiusY * radiusY * x2;\n\t\tlet dy = 2 * radiusX * radiusX * y2;\n\n\t\t// For region 1\n\t\twhile( dx < dy ) {\n\t\t\t// 4-way symmetry\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t\t// Update decision parameter\n\t\t\tif( d1 < 0 ) {\n\t\t\t\tx2++;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\td1 = d1 + dx + ( radiusY * radiusY );\n\t\t\t} else {\n\t\t\t\tx2++;\n\t\t\t\ty2--;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td1 = d1 + dx - dy + ( radiusY * radiusY );\n\t\t\t}\n\t\t}\n\n\t\t// Decision parameter of region 2\n\t\tlet d2 = ( ( radiusY * radiusY ) * ( ( x2 + 0.5 ) * ( x2 + 0.5 ) ) ) +\n\t\t\t( ( radiusX * radiusX ) * ( ( y2 - 1 ) * ( y2 - 1 ) ) ) -\n\t\t\t( radiusX * radiusX * radiusY * radiusY );\n\n\t\t// Plotting points of region 2\n\t\twhile( y2 >= 0 ) {\n\t\t\t// 4-way symmetry\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t\t// Update parameter\n\t\t\tif( d2 > 0 ) {\n\t\t\t\ty2--;\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td2 = d2 + ( radiusX * radiusX ) - dy;\n\t\t\t} else {\n\t\t\t\ty2--;\n\t\t\t\tx2++;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td2 = d2 + dx - dy + ( radiusX * radiusX );\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaEllipse( screenData, args ) {\n\t\tconst cx = args[ 0 ];\n\t\tconst cy = args[ 1 ];\n\t\tconst rx = args[ 2 ];\n\t\tconst ry = args[ 3 ];\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( cx ) || isNaN( cy ) || isNaN( rx ) || isNaN( ry ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: parameters x, y, radiusX, radiusY must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"ellipse\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.moveTo( cx + rx, cy );\n\t\tctx.ellipse( cx, cy, rx, ry, 0, pi.util.math.deg360, false );\n\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fill();\n\t\t}\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// ARC - Draw arc (partial circle)\n\tpi._.addCommands( \"arc\", pxArc, aaArc, [ \"x\", \"y\", \"radius\", \"angle1\", \"angle2\" ] );\n\n\tfunction pxArc( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radius = Math.round( args[ 2 ] );\n\t\tlet angle1 = args[ 3 ];\n\t\tlet angle2 = args[ 4 ];\n\n\t\t// Normalize angles to 0-360\n\t\tangle1 = ( angle1 + 360 ) % 360;\n\t\tangle2 = ( angle2 + 360 ) % 360;\n\n\t\tconst winding = angle1 > angle2;\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radius ) ) {\n\t\t\tconst error = new TypeError( \"arc: x, y, radius must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst color = screenData.fColor;\n\n\t\t// Helper function to check if angle is within arc range\n\t\tfunction shouldDrawPixel( px, py ) {\n\t\t\tlet a = pi.util.radiansToDegrees( Math.atan2( py - y, px - x ) );\n\t\t\ta = ( a + 360 ) % 360;\n\n\t\t\tif( winding ) {\n\t\t\t\treturn a >= angle1 || a <= angle2;\n\t\t\t}\n\t\t\treturn a >= angle1 && a <= angle2;\n\t\t}\n\n\t\tradius -= 1;\n\t\tif( radius < 0 ) {\n\t\t\tradius = 0;\n\t\t}\n\n\t\tlet x2 = radius;\n\t\tlet y2 = 0;\n\n\t\t// Handle special cases\n\t\tif( radius > 1 ) {\n\t\t\tif( shouldDrawPixel( x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x, x2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x, x2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x, -x2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x, -x2 + y, color );\n\t\t\t}\n\t\t} else if( radius === 1 ) {\n\t\t\tif( shouldDrawPixel( x + 1, y ) ) screenData.pen.draw( screenData, x + 1, y, color );\n\t\t\tif( shouldDrawPixel( x - 1, y ) ) screenData.pen.draw( screenData, x - 1, y, color );\n\t\t\tif( shouldDrawPixel( x, y + 1 ) ) screenData.pen.draw( screenData, x, y + 1, color );\n\t\t\tif( shouldDrawPixel( x, y - 1 ) ) screenData.pen.draw( screenData, x, y - 1, color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t} else if( radius === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Midpoint circle algorithm with angle checking\n\t\tlet midPoint = 1 - radius;\n\n\t\twhile( x2 > y2 ) {\n\t\t\ty2 += 1;\n\n\t\t\tif( midPoint <= 0 ) {\n\t\t\t\tmidPoint = midPoint + 2 * y2 + 1;\n\t\t\t} else {\n\t\t\t\tx2 -= 1;\n\t\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\n\t\t\t}\n\n\t\t\t// Draw pixels in arc range (8-way symmetry)\n\t\t\tif( shouldDrawPixel( x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x2 + x, -y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, -y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, -y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, -y2 + y, color );\n\t\t\t}\n\n\t\t\tif( x2 !== y2 ) {\n\t\t\t\tif( shouldDrawPixel( y2 + x, x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, y2 + x, x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( -y2 + x, x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( y2 + x, -x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, y2 + x, -x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( -y2 + x, -x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, -x2 + y, color );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaArc( screenData, args ) {\n\t\tlet x = args[ 0 ];\n\t\tlet y = args[ 1 ];\n\t\tlet radius = args[ 2 ];\n\t\tlet angle1 = args[ 3 ];\n\t\tlet angle2 = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radius ) || isNaN( angle1 ) || isNaN( angle2 ) ) {\n\t\t\tconst error = new TypeError( \"arc: parameters must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tx = x + 0.5;\n\t\ty = y + 0.5;\n\t\tradius = radius - 0.9;\n\t\tif( radius < 0 ) {\n\t\t\tradius = 0;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tangle1 = pi.util.degreesToRadian( angle1 );\n\t\tangle2 = pi.util.degreesToRadian( angle2 );\n\n\t\tconst ctx = screenData.context;\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.moveTo( x + Math.cos( angle1 ) * radius, y + Math.sin( angle1 ) * radius );\n\t\tctx.arc( x, y, radius, angle1, angle2 );\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Paint/Flood Fill Module\n * \n * Implements flood fill algorithm for filling enclosed areas.\n * \n * @module modules/paint\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_maxDifference = ( 255 * 255 ) * 3.25;\n\tlet m_setPixel;\n\tlet m_pixels;\n\n\t// PAINT - Flood fill algorithm\n\tpi._.addCommand( \"paint\", paint, false, true, [ \"x\", \"y\", \"fillColor\", \"tolerance\" ] );\n\n\tfunction paint( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet fillColor = args[ 2 ];\n\t\tlet tolerance = args[ 3 ];\n\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"paint: parameters x and y must be integers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set the default tolerance to 1 (exact match)\n\t\tif( tolerance == null || tolerance === false ) {\n\t\t\ttolerance = 1;\n\t\t}\n\n\t\tif( isNaN( tolerance ) || tolerance < 0 || tolerance > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"paint: parameter tolerance must be a number between 0 and 1.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Soften the tolerance so closer to one it changes less,\n\t\t// closer to 0 changes more\n\t\ttolerance = tolerance * ( 2 - tolerance ) * m_maxDifference;\n\n\t\t// Brave browser quirk workaround\n\t\tif( navigator.brave && tolerance === m_maxDifference ) {\n\t\t\ttolerance -= 1;\n\t\t}\n\n\t\t// Initialize fill queue with starting point\n\t\tconst fills = [ {\n\t\t\t\"x\": x,\n\t\t\t\"y\": y\n\t\t} ];\n\n\t\t// Change the setPixel command if adding noise\n\t\tif( screenData.pen.noise ) {\n\t\t\tm_setPixel = setPixelNoise;\n\t\t} else {\n\t\t\tm_setPixel = piData.commands.setPixel;\n\t\t}\n\n\t\t// Resolve fill color\n\t\tif( pi.util.isInteger( fillColor ) ) {\n\t\t\tif( fillColor > screenData.pal.length ) {\n\t\t\t\tconst error = new RangeError(\n\t\t\t\t\t\"paint: Argument fillColor is not a color in the palette.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"COLOR_OUT_OF_RANGE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tfillColor = screenData.pal[ fillColor ];\n\t\t} else {\n\t\t\tfillColor = pi.util.convertToColor( fillColor );\n\t\t\tif( fillColor === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"paint: Argument fillColor is not a valid color format.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Initialize pixel tracking\n\t\tm_pixels = {};\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Get the background color at starting point\n\t\tconst backgroundColor = piData.commands.getPixelInternal( screenData, x, y );\n\n\t\t// Flood fill algorithm - loop until no fills left\n\t\twhile( fills.length > 0 ) {\n\t\t\tconst pixel = fills.pop();\n\n\t\t\t// Set the current pixel\n\t\t\tm_setPixel( screenData, pixel.x, pixel.y, fillColor );\n\n\t\t\t// Add fills to 4-way neighbors\n\t\t\taddFill( screenData, pixel.x + 1, pixel.y, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x - 1, pixel.y, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x, pixel.y + 1, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x, pixel.y - 1, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t}\n\n\t\t// Clean up pixel tracking for garbage collection\n\t\tm_pixels = null;\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// Helper: Set pixel with noise effect\n\tfunction setPixelNoise( screenData, x, y, fillColor ) {\n\t\tfillColor = piData.commands.getPixelColor( screenData, fillColor );\n\t\tpiData.commands.setPixel( screenData, x, y, fillColor );\n\t}\n\n\t// Helper: Check if pixel has been processed\n\tfunction checkPixel( x, y ) {\n\t\tconst key = x + \" \" + y;\n\t\tif( m_pixels[ key ] ) {\n\t\t\treturn true;\n\t\t}\n\t\tm_pixels[ key ] = true;\n\t\treturn false;\n\t}\n\n\t// Helper: Add fill to queue if it should be filled\n\tfunction addFill( screenData, x, y, fills, fillColor, backgroundColor, tolerance ) {\n\t\tif( floodCheck( screenData, x, y, fillColor, backgroundColor, tolerance ) ) {\n\t\t\tm_setPixel( screenData, x, y, fillColor );\n\t\t\tconst fill = { \"x\": x, \"y\": y };\n\t\t\tfills.push( fill );\n\t\t}\n\t}\n\n\t// Helper: Check if pixel should be filled\n\tfunction floodCheck( screenData, x, y, fillColor, backgroundColor, tolerance ) {\n\t\t// Check bounds\n\t\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pixelColor = piData.commands.getPixelInternal( screenData, x, y );\n\n\t\t// Make sure we haven't already filled this pixel\n\t\tif( !checkPixel( x, y ) ) {\n\n\t\t\t// Calculate the difference between the two colors\n\t\t\tconst dr = ( pixelColor.r - backgroundColor.r );\n\t\t\tconst dg = ( pixelColor.g - backgroundColor.g );\n\t\t\tconst db = ( pixelColor.b - backgroundColor.b );\n\t\t\tconst da = ( pixelColor.a - backgroundColor.a );\n\t\t\tconst difference = ( dr * dr + dg * dg + db * db + da * da * 0.25 );\n\t\t\tconst simularity = m_maxDifference - difference;\n\n\t\t\treturn simularity >= tolerance;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n", "/**\n * Pi.js - Bezier Curves Module\n * \n * Implements cubic Bezier curves for smooth curved paths.\n * \n * @module modules/bezier\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// BEZIER - Draw cubic Bezier curve\n\tpi._.addCommands( \"bezier\", pxBezier, aaBezier,\n\t\t[ \"xStart\", \"yStart\", \"x1\", \"y1\", \"x2\", \"y2\", \"xEnd\", \"yEnd\" ]\n\t);\n\n\tfunction pxBezier( screenData, args ) {\n\t\tlet xStart = Math.round( args[ 0 ] );\n\t\tlet yStart = Math.round( args[ 1 ] );\n\t\tlet x1 = Math.round( args[ 2 ] );\n\t\tlet y1 = Math.round( args[ 3 ] );\n\t\tlet x2 = Math.round( args[ 4 ] );\n\t\tlet y2 = Math.round( args[ 5 ] );\n\t\tlet xEnd = Math.round( args[ 6 ] );\n\t\tlet yEnd = Math.round( args[ 7 ] );\n\n\t\t// Validate parameters\n\t\tif(\n\t\t\tisNaN( xStart ) || isNaN( yStart ) ||\n\t\t\tisNaN( x1 ) || isNaN( y1 ) ||\n\t\t\tisNaN( x2 ) || isNaN( y2 ) ||\n\t\t\tisNaN( xEnd ) || isNaN( yEnd )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"bezier: parameters xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd \" +\n\t\t\t\t\"must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Initialize the color for the line\n\t\tconst color = screenData.fColor;\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst minDistance = screenData.pen.size;\n\t\tconst points = [\n\t\t\t{ \"x\": xStart, \"y\": yStart },\n\t\t\t{ \"x\": x1, \"y\": y1 },\n\t\t\t{ \"x\": x2, \"y\": y2 },\n\t\t\t{ \"x\": xEnd, \"y\": yEnd }\n\t\t];\n\n\t\tlet lastPoint = calcStep( 0, points );\n\n\t\t// Set the first pixel\n\t\tscreenData.pen.draw( screenData, lastPoint.x, lastPoint.y, color );\n\n\t\tlet t = 0.1;\n\t\tlet dt = 0.1;\n\n\t\twhile( t < 1 ) {\n\t\t\tconst point = calcStep( t, points );\n\t\t\tconst distance = calcDistance( point, lastPoint );\n\n\t\t\t// Adjust the step size if it's too big\n\t\t\tif( distance > minDistance && dt > 0.00001 ) {\n\t\t\t\tt -= dt;\n\t\t\t\tdt = dt * 0.75;\n\t\t\t} else {\n\t\t\t\tscreenData.pen.draw( screenData, point.x, point.y, color );\n\t\t\t\tlastPoint = point;\n\t\t\t}\n\t\t\tt += dt;\n\t\t}\n\n\t\t// Draw the last step\n\t\tconst point = calcStep( 1, points );\n\t\tscreenData.pen.draw( screenData, point.x, point.y, color );\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaBezier( screenData, args ) {\n\t\tlet xStart = args[ 0 ] + 0.5;\n\t\tlet yStart = args[ 1 ] + 0.5;\n\t\tlet x1 = args[ 2 ] + 0.5;\n\t\tlet y1 = args[ 3 ] + 0.5;\n\t\tlet x2 = args[ 4 ] + 0.5;\n\t\tlet y2 = args[ 5 ] + 0.5;\n\t\tlet xEnd = args[ 6 ] + 0.5;\n\t\tlet yEnd = args[ 7 ] + 0.5;\n\n\t\tif(\n\t\t\tisNaN( xStart ) || isNaN( yStart ) || isNaN( x1 ) || isNaN( y1 ) ||\n\t\t\tisNaN( x2 ) || isNaN( y2 ) || isNaN( xEnd ) || isNaN( yEnd )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"bezier: parameters xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd \" +\n\t\t\t\t\"must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.beginPath();\n\t\tctx.moveTo( xStart, yStart );\n\t\tctx.bezierCurveTo( x1, y1, x2, y2, xEnd, yEnd );\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// Helper: Calculate distance squared between two points\n\tfunction calcDistance( p1, p2 ) {\n\t\tconst dx = p1.x - p2.x;\n\t\tconst dy = p1.y - p2.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\n\t// Helper: Calculate point on cubic Bezier curve at parameter t (0-1)\n\tfunction calcStep( t, points ) {\n\t\tconst a = ( 1 - t );\n\t\tconst a2 = a * a;\n\t\tconst a3 = a * a * a;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t * t;\n\n\t\treturn {\n\t\t\t\"x\": Math.round(\n\t\t\t\ta3 * points[ 0 ].x +\n\t\t\t\t3 * a2 * t * points[ 1 ].x +\n\t\t\t\t3 * a * t2 * points[ 2 ].x +\n\t\t\t\tt3 * points[ 3 ].x\n\t\t\t),\n\t\t\t\"y\": Math.round(\n\t\t\t\ta3 * points[ 0 ].y +\n\t\t\t\t3 * a2 * t * points[ 1 ].y +\n\t\t\t\t3 * a * t2 * points[ 2 ].y +\n\t\t\t\tt3 * points[ 3 ].y\n\t\t\t)\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Image Operations Module\n * \n * Handles image loading, sprite sheets, and image drawing/manipulation.\n * \n * @module modules/images\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\tlet m_callback = null;\n\n\t// LOADIMAGE - Load image from URL or element\n\tpi._.addCommand( \"loadImage\", loadImage, false, false, [ \"src\", \"name\" ] );\n\n\tfunction loadImage( args ) {\n\t\tlet src = args[ 0 ];\n\t\tlet name = args[ 1 ];\n\t\tlet image;\n\t\tlet callback;\n\t\tlet tempOnload;\n\n\t\tif( typeof src === \"string\" ) {\n\t\t\t// Create a new image\n\t\t\timage = new Image();\n\n\t\t\t// Set the source\n\t\t\timage.src = src;\n\t\t} else {\n\t\t\tif( !src || ( src.tagName !== \"IMG\" && src.tagName !== \"CANVAS\" ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"loadImage: src must be a string, image element, or canvas.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_IMAGE_SOURCE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\timage = src;\n\t\t}\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t}\n\n\t\tpiData.images[ name ] = {\n\t\t\t\"image\": null,\n\t\t\t\"type\": \"image\"\n\t\t};\n\n\t\t// Store callback locally\n\t\tcallback = m_callback;\n\t\tm_callback = null;\n\n\t\tif( !image.complete ) {\n\t\t\tm_piWait();\n\t\t\tif( pi.util.isFunction( image.onload ) ) {\n\t\t\t\ttempOnload = image.onload;\n\t\t\t}\n\t\t\timage.onload = function() {\n\t\t\t\tif( tempOnload ) {\n\t\t\t\t\ttempOnload();\n\t\t\t\t}\n\t\t\t\tpiData.images[ name ].image = image;\n\t\t\t\tif( pi.util.isFunction( callback ) ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t} else {\n\t\t\tpiData.images[ name ].image = image;\n\t\t\tif( pi.util.isFunction( callback ) ) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\n\t\treturn name;\n\t}\n\n\t// LOADSPRITESHEET - Load spritesheet with grid or auto-detection\n\tpi._.addCommand( \"loadSpritesheet\", loadSpritesheet, false, false,\n\t\t[ \"src\", \"name\", \"width\", \"height\", \"margin\" ]\n\t);\n\n\tfunction loadSpritesheet( args ) {\n\t\tlet src = args[ 0 ];\n\t\tlet name = args[ 1 ];\n\t\tlet spriteWidth = args[ 2 ];\n\t\tlet spriteHeight = args[ 3 ];\n\t\tlet margin = args[ 4 ];\n\n\t\tif( margin == null ) {\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tlet isAuto = false;\n\t\tif( spriteWidth == null && spriteHeight == null ) {\n\t\t\tisAuto = true;\n\t\t\tspriteWidth = 0;\n\t\t\tspriteHeight = 0;\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tspriteWidth = Math.round( spriteWidth );\n\t\tspriteHeight = Math.round( spriteHeight );\n\t\tmargin = Math.round( margin );\n\n\t\t// Validate spriteWidth and spriteHeight\n\t\tif(\n\t\t\t!isAuto && (\n\t\t\t\t!pi.util.isInteger( spriteWidth ) ||\n\t\t\t\t!pi.util.isInteger( spriteHeight )\n\t\t\t)\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"loadSpriteSheet: width, and height must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SPRITE_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Size cannot be less than 1\n\t\tif( !isAuto && ( spriteWidth < 1 || spriteHeight < 1 ) ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"loadSpriteSheet: width, and height must be greater than 0.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SPRITE_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate margin\n\t\tif( !pi.util.isInteger( margin ) ) {\n\t\t\tconst error = new TypeError( \"loadSpriteSheet: margin must be an integer.\" );\n\t\t\terror.code = \"INVALID_MARGIN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate name\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t}\n\n\t\t// Load the frames when the image gets loaded\n\t\tm_callback = function() {\n\n\t\t\t// Update the image data\n\t\t\tconst imageData = piData.images[ name ];\n\t\t\timageData.type = \"spritesheet\";\n\t\t\timageData.spriteWidth = spriteWidth;\n\t\t\timageData.spriteHeight = spriteHeight;\n\t\t\timageData.margin = margin;\n\t\t\timageData.frames = [];\n\t\t\timageData.isAuto = isAuto;\n\n\t\t\t// Prepare for loops\n\t\t\tconst width = imageData.image.width;\n\t\t\tconst height = imageData.image.height;\n\n\t\t\tif( imageData.isAuto ) {\n\n\t\t\t\t// Find all clusters of pixels (auto-detect sprites)\n\t\t\t\tconst searched = {};\n\t\t\t\tconst canvas = document.createElement( \"canvas\" );\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\t\t\t\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\t\t\t\tcontext.drawImage( imageData.image, 0, 0 );\n\t\t\t\tconst dirs = [\n\t\t\t\t\t[ -1, -1 ], [ 0, -1 ], [ 1, -1 ],\n\t\t\t\t\t[ -1,  0 ],             [ 1,  0 ],\n\t\t\t\t\t[ -1,  1 ], [ 0,  1 ], [ 1,  1 ]\n\t\t\t\t];\n\t\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\t\t// Helper: Get cluster of connected pixels (for auto-detection)\n\t\t\t\tfunction getCluster( x, y, frameData ) {\n\t\t\t\t\tconst clusterName = x + \"_\" + y;\n\t\t\t\t\tif(\n\t\t\t\t\t\tsearched[ clusterName ] || x < 0 || x >= width || \n\t\t\t\t\t\ty < 0 || y >= height\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst clusters = [];\n\t\t\t\t\tclusters.push( [ x, y, clusterName ] );\n\n\t\t\t\t\twhile( clusters.length > 0 ) {\n\t\t\t\t\t\tconst cluster = clusters.pop();\n\t\t\t\t\t\tx = cluster[ 0 ];\n\t\t\t\t\t\ty = cluster[ 1 ];\n\t\t\t\t\t\tconst name = cluster[ 2 ];\n\t\t\t\t\t\tsearched[ name ] = true;\n\t\t\t\t\t\tconst index = ( x + y * width ) * 4;\n\n\t\t\t\t\t\tif( data[ index + 3 ] > 0 ) {\n\t\t\t\t\t\t\tframeData.x = Math.min( frameData.x, x );\n\t\t\t\t\t\t\tframeData.y = Math.min( frameData.y, y );\n\t\t\t\t\t\t\tframeData.right = Math.max( frameData.right, x );\n\t\t\t\t\t\t\tframeData.bottom = Math.max( frameData.bottom, y );\n\t\t\t\t\t\t\tframeData.width = frameData.right - frameData.x + 1;\n\t\t\t\t\t\t\tframeData.height = frameData.bottom - frameData.y + 1;\n\n\t\t\t\t\t\t\tfor( let i = 0; i < dirs.length; i++ ) {\n\t\t\t\t\t\t\t\tconst x2 = x + dirs[ i ][ 0 ];\n\t\t\t\t\t\t\t\tconst y2 = y + dirs[ i ][ 1 ];\n\t\t\t\t\t\t\t\tconst name2 = x2 + \"_\" + y2;\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t!( searched[ name2 ] || x2 < 0 || x2 >= width || \n\t\t\t\t\t\t\t\t\ty2 < 0 || y2 >= height )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tclusters.push( [ x2, y2, name2 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Read the alpha component of each pixel\n\t\t\t\tfor( let i = 3; i < data.length; i += 4 ) {\n\t\t\t\t\tif( data[ i ] > 0 ) {\n\t\t\t\t\t\tconst index = ( i - 3 ) / 4;\n\t\t\t\t\t\tconst x1 = index % width;\n\t\t\t\t\t\tconst y1 = Math.floor( index / width );\n\t\t\t\t\t\tconst frameData = {\n\t\t\t\t\t\t\t\"x\": width,\n\t\t\t\t\t\t\t\"y\": height,\n\t\t\t\t\t\t\t\"width\": 0,\n\t\t\t\t\t\t\t\"height\": 0,\n\t\t\t\t\t\t\t\"right\": 0,\n\t\t\t\t\t\t\t\"bottom\": 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tgetCluster( x1, y1, frameData );\n\t\t\t\t\t\tif( ( frameData.width + frameData.height ) > 4 ) {\n\t\t\t\t\t\t\timageData.frames.push( frameData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Grid-based sprite detection\n\t\t\t\tlet x1 = imageData.margin;\n\t\t\t\tlet y1 = imageData.margin;\n\t\t\t\tlet x2 = x1 + imageData.spriteWidth;\n\t\t\t\tlet y2 = y1 + imageData.spriteHeight;\n\n\t\t\t\t// Loop through all the frames\n\t\t\t\twhile( y2 <= height - imageData.margin ) {\n\t\t\t\t\twhile( x2 <= width - imageData.margin ) {\n\t\t\t\t\t\timageData.frames.push( {\n\t\t\t\t\t\t\t\"x\": x1,\n\t\t\t\t\t\t\t\"y\": y1,\n\t\t\t\t\t\t\t\"width\": imageData.spriteWidth,\n\t\t\t\t\t\t\t\"height\": imageData.spriteHeight,\n\t\t\t\t\t\t\t\"right\": x1 + imageData.spriteWidth - 1,\n\t\t\t\t\t\t\t\"bottom\": y1 + imageData.spriteHeight - 1\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tx1 += imageData.spriteWidth + imageData.margin;\n\t\t\t\t\t\tx2 = x1 + imageData.spriteWidth;\n\t\t\t\t\t}\n\t\t\t\t\tx1 = imageData.margin;\n\t\t\t\t\tx2 = x1 + imageData.spriteWidth;\n\t\t\t\t\ty1 += imageData.spriteHeight + imageData.margin;\n\t\t\t\t\ty2 = y1 + imageData.spriteHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tloadImage( [ src, name ] );\n\n\t\treturn name;\n\t}\n\n\t// GETSPRITESHEETDATA - Get spritesheet frame information\n\tpi._.addCommand( \"getSpritesheetData\", getSpritesheetData, false, true, [ \"name\" ] );\n\n\tfunction getSpritesheetData( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\n\t\t// Validate name\n\t\tif( !piData.images[ name ] ) {\n\t\t\tconst error = new Error( \"getSpritesheetData: invalid sprite name\" );\n\t\t\terror.code = \"INVALID_SPRITE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst sprite = piData.images[ name ];\n\n\t\tif( sprite.type !== \"spritesheet\" ) {\n\t\t\tconst error = new Error( \"getSpritesheetData: image is not a sprite\" );\n\t\t\terror.code = \"NOT_A_SPRITESHEET\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst spriteData = {\n\t\t\t\"frameCount\": sprite.frames.length,\n\t\t\t\"frames\": []\n\t\t};\n\n\t\tfor( let i = 0; i < sprite.frames.length; i++ ) {\n\t\t\tspriteData.frames.push( {\n\t\t\t\t\"index\": i,\n\t\t\t\t\"x\": sprite.frames[ i ].x,\n\t\t\t\t\"y\": sprite.frames[ i ].y,\n\t\t\t\t\"width\": sprite.frames[ i ].width,\n\t\t\t\t\"height\": sprite.frames[ i ].height,\n\t\t\t\t\"left\": sprite.frames[ i ].x,\n\t\t\t\t\"top\": sprite.frames[ i ].y,\n\t\t\t\t\"right\": sprite.frames[ i ].right,\n\t\t\t\t\"bottom\": sprite.frames[ i ].bottom\n\t\t\t} );\n\t\t}\n\n\t\treturn spriteData;\n\t}\n\n\t// GETIMAGE - Capture image from screen region\n\tpi._.addCommand( \"getImage\", getImage, false, true, [ \"name\", \"x1\", \"y1\", \"x2\", \"y2\" ] );\n\n\tfunction getImage( screenData, args ) {\n\t\tlet name = args[ 0 ];\n\t\tconst x1 = Math.round( args[ 1 ] );\n\t\tconst y1 = Math.round( args[ 2 ] );\n\t\tconst x2 = Math.round( args[ 3 ] );\n\t\tconst y2 = Math.round( args[ 4 ] );\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError( \"getImage: parameters x1, x2, y1, y2 must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t} else if( piData.images[ name ] ) {\n\t\t\tconst error = new Error(\n\t\t\t\t`getImage: name ${name} is already used; name must be unique.`\n\t\t\t);\n\t\t\terror.code = \"DUPLICATE_IMAGE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst context = canvas.getContext( \"2d\" );\n\t\tconst width = Math.abs( x1 - x2 );\n\t\tconst height = Math.abs( y1 - y2 );\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tscreenData.screenObj.render();\n\t\tcontext.drawImage( screenData.screenObj.canvas(), x1, y1, width, height, 0, 0, width, height );\n\n\t\tpiData.images[ name ] = {\n\t\t\t\"image\": canvas,\n\t\t\t\"type\": \"image\"\n\t\t};\n\n\t\treturn name;\n\t}\n\n\t// REMOVEIMAGE - Remove loaded image from cache\n\tpi._.addCommand( \"removeImage\", removeImage, false, false, [ \"name\" ] );\n\n\tfunction removeImage( args ) {\n\t\tconst name = args[ 0 ];\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"removeImage: name must be a string.\" );\n\t\t\terror.code = \"INVALID_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tdelete piData.images[ name ];\n\t}\n\n\t// DRAWIMAGE - Draw image to screen\n\tpi._.addCommand( \"drawImage\", drawImage, false, true,\n\t\t[ \"name\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\", \"alpha\", \"scaleX\", \"scaleY\" ]\n\t);\n\n\tfunction drawImage( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\t\tconst x = args[ 1 ];\n\t\tconst y = args[ 2 ];\n\t\tconst angle = args[ 3 ];\n\t\tconst anchorX = args[ 4 ];\n\t\tconst anchorY = args[ 5 ];\n\t\tconst alpha = args[ 6 ];\n\t\tconst scaleX = args[ 7 ];\n\t\tconst scaleY = args[ 8 ];\n\n\t\tlet img;\n\n\t\tif( typeof name === \"string\" ) {\n\t\t\tif( !piData.images[ name ] ) {\n\t\t\t\tconst error = new Error( \"drawImage: invalid image name\" );\n\t\t\t\terror.code = \"INVALID_IMAGE_NAME\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\timg = piData.images[ name ].image;\n\t\t} else {\n\t\t\tif( !name || ( !name.canvas && !name.getContext ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"drawImage: image source object type must be an image \" +\n\t\t\t\t\t\"already loaded by the loadImage command or a screen.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_IMAGE_SOURCE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( pi.util.isFunction( name.canvas ) ) {\n\t\t\t\timg = name.canvas();\n\t\t\t} else {\n\t\t\t\timg = name;\n\t\t\t}\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"drawImage: parameters x and y must be numbers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tdrawItem( screenData, img, x, y, angle, anchorX, anchorY, alpha, null, scaleX, scaleY );\n\t}\n\n\t// DRAWSPRITE - Draw sprite frame to screen\n\tpi._.addCommand( \"drawSprite\", drawSprite, false, true,\n\t\t[\n\t\t\t\"name\", \"frame\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\",\n\t\t\t\"alpha\", \"scaleX\", \"scaleY\"\n\t\t]\n\t);\n\n\tfunction drawSprite( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\t\tconst frame = args[ 1 ];\n\t\tconst x = args[ 2 ];\n\t\tconst y = args[ 3 ];\n\t\tconst angle = args[ 4 ];\n\t\tconst anchorX = args[ 5 ];\n\t\tconst anchorY = args[ 6 ];\n\t\tconst alpha = args[ 7 ];\n\t\tconst scaleX = args[ 8 ];\n\t\tconst scaleY = args[ 9 ];\n\n\t\t// Validate name\n\t\tif( !piData.images[ name ] ) {\n\t\t\tconst error = new Error( \"drawSprite: invalid sprite name\" );\n\t\t\terror.code = \"INVALID_SPRITE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate frame\n\t\tif(\n\t\t\t!pi.util.isInteger( frame ) ||\n\t\t\tframe >= piData.images[ name ].frames.length ||\n\t\t\tframe < 0\n\t\t) {\n\t\t\tconst error = new RangeError( \"drawSprite: frame number is not valid\" );\n\t\t\terror.code = \"INVALID_FRAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"drawSprite: parameters x and y must be numbers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst img = piData.images[ name ].image;\n\n\t\tdrawItem(\n\t\t\tscreenData, img, x, y, angle, anchorX, anchorY, alpha,\n\t\t\tpiData.images[ name ].frames[ frame ], scaleX, scaleY\n\t\t);\n\t}\n\n\t// Helper: Draw image or sprite with transformations\n\tfunction drawItem(\n\t\tscreenData, img, x, y, angle, anchorX, anchorY, alpha, spriteData, scaleX, scaleY\n\t) {\n\t\tif( scaleX == null || isNaN( Number( scaleX ) ) ) {\n\t\t\tscaleX = 1;\n\t\t}\n\n\t\tif( scaleY == null || isNaN( Number( scaleY ) ) ) {\n\t\t\tscaleY = 1;\n\t\t}\n\n\t\tif( angle == null ) {\n\t\t\tangle = 0;\n\t\t}\n\n\t\t// Convert the angle from degrees to radian\n\t\tangle = pi.util.degreesToRadian( angle );\n\n\t\tif( !anchorX ) {\n\t\t\tanchorX = 0;\n\t\t}\n\t\tif( !anchorY ) {\n\t\t\tanchorY = 0;\n\t\t}\n\n\t\tif( !alpha && alpha !== 0 ) {\n\t\t\talpha = 255;\n\t\t}\n\n\t\tif( spriteData ) {\n\t\t\tanchorX = Math.round( spriteData.width * anchorX );\n\t\t\tanchorY = Math.round( spriteData.height * anchorY );\n\t\t} else {\n\t\t\tanchorX = Math.round( img.width * anchorX );\n\t\t\tanchorY = Math.round( img.height * anchorY );\n\t\t}\n\n\t\tconst context = screenData.context;\n\t\tconst oldAlpha = context.globalAlpha;\n\t\tcontext.globalAlpha = ( alpha / 255 );\n\n\t\tscreenData.screenObj.render();\n\n\t\tcontext.translate( x, y );\n\t\tcontext.rotate( angle );\n\t\tcontext.scale( scaleX, scaleY );\n\n\t\tif( spriteData == null ) {\n\t\t\tcontext.drawImage( img, -anchorX, -anchorY );\n\t\t} else {\n\t\t\tcontext.drawImage(\n\t\t\t\timg,\n\t\t\t\tspriteData.x, spriteData.y, spriteData.width, spriteData.height,\n\t\t\t\t-anchorX, -anchorY, spriteData.width, spriteData.height\n\t\t\t);\n\t\t}\n\n\t\tcontext.scale( 1 / scaleX, 1 / scaleY );\n\t\tcontext.rotate( -angle );\n\t\tcontext.translate( -x, -y );\n\t\tcontext.globalAlpha = oldAlpha;\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Font Module\n * \n * Font loading and management, including base32-encoded pixel fonts.\n * \n * @module modules/font\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\n\t// LOADFONT - Load font from image or encoded data\n\tpi._.addCommand( \"loadFont\", loadFont, false, false,\n\t\t[ \"fontSrc\", \"width\", \"height\", \"charSet\", \"isEncoded\" ]\n\t);\n\n\tfunction loadFont( args ) {\n\t\tconst fontSrc = args[ 0 ];\n\t\tconst width = Math.round( args[ 1 ] );\n\t\tconst height = Math.round( args[ 2 ] );\n\t\tlet charSet = args[ 3 ];\n\t\tconst isEncoded = !!args[ 4 ];\n\n\t\tif( isNaN( width ) || isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"loadFont: width and height must be integers.\" );\n\t\t\terror.code = \"INVALID_FONT_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Default charset to 0 to 255\n\t\tif( !charSet ) {\n\t\t\tcharSet = [];\n\t\t\tfor( let i = 0; i < 256; i += 1 ) {\n\t\t\t\tcharSet.push( i );\n\t\t\t}\n\t\t}\n\n\t\tif( !( pi.util.isArray( charSet ) || typeof charSet === \"string\" ) ) {\n\t\t\tconst error = new TypeError( \"loadFont: charSet must be an array or a string.\" );\n\t\t\terror.code = \"INVALID_CHARSET\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Convert charSet to array of integers\n\t\tif( typeof charSet === \"string\" ) {\n\t\t\tconst temp = [];\n\t\t\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\t\t\ttemp.push( charSet.charCodeAt( i ) );\n\t\t\t}\n\t\t\tcharSet = temp;\n\t\t}\n\n\t\t// Load the chars\n\t\tconst chars = {};\n\t\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\t\tchars[ charSet[ i ] ] = i;\n\t\t}\n\n\t\t// Set the font data\n\t\tconst font = {\n\t\t\t\"id\": piData.nextFontId,\n\t\t\t\"width\": width,\n\t\t\t\"height\": height,\n\t\t\t\"data\": [],\n\t\t\t\"chars\": chars,\n\t\t\t\"charSet\": charSet,\n\t\t\t\"colorCount\": 2,\n\t\t\t\"mode\": \"pixel\",\n\t\t\t\"printFunction\": piData.commands.piPrint,\n\t\t\t\"calcWidth\": piData.commands.piCalcWidth,\n\t\t\t\"image\": null,\n\t\t\t\"sWidth\": width,\n\t\t\t\"sHeight\": height\n\t\t};\n\n\t\tif( !isEncoded ) {\n\t\t\tfont.mode = \"bitmap\";\n\t\t\tfont.printFunction = piData.commands.bitmapPrint;\n\t\t}\n\n\t\t// Add this to the font data\n\t\tpiData.fonts[ font.id ] = font;\n\n\t\t// Increment the next font id\n\t\tpiData.nextFontId += 1;\n\n\t\tif( isEncoded ) {\n\t\t\tloadFontFromBase32Encoded( fontSrc, width, height, font );\n\t\t} else {\n\t\t\tloadFontFromImg( fontSrc, font );\n\t\t}\n\n\t\treturn font.id;\n\t}\n\n\tfunction loadFontFromBase32Encoded( fontSrc, width, height, font ) {\n\t\tfont.data = decompressFont( fontSrc, width, height );\n\t}\n\n\tfunction decompressFont( numStr, width, height ) {\n\t\tconst size = 32;\n\t\tconst base = 32;\n\t\tlet bin = \"\";\n\t\tconst data = [];\n\n\t\tnumStr = \"\" + numStr;\n\t\tconst nums = numStr.split( \",\" );\n\n\t\t// Loop through all the nums\n\t\tfor( let i = 0; i < nums.length; i++ ) {\n\n\t\t\t// Convert the string to base number then to binary string\n\t\t\tlet num = parseInt( nums[ i ], base ).toString( 2 );\n\n\t\t\t// Pad the front with 0's so that num has length of size\n\t\t\tfor( let j = num.length; j < size; j++ ) {\n\t\t\t\tnum = \"0\" + num;\n\t\t\t}\n\n\t\t\t// Add to the bin\n\t\t\tbin += num;\n\t\t}\n\n\t\t// Loop through all the bits\n\t\tlet i = 0;\n\t\tif( bin.length % size > 0 ) {\n\t\t\tconsole.warn( \"loadFont: Invalid font data.\" );\n\t\t\treturn data;\n\t\t}\n\n\t\twhile( i < bin.length ) {\n\n\t\t\t// Push a new character onto data\n\t\t\tdata.push( [] );\n\n\t\t\t// Store the index of the font character\n\t\t\tconst index = data.length - 1;\n\n\t\t\t// Loop through all the rows\n\t\t\tfor( let y = 0; y < height; y += 1 ) {\n\n\t\t\t\t// Push a new row onto the character data\n\t\t\t\tdata[ index ].push( [] );\n\n\t\t\t\t// Loop through a row\n\t\t\t\tfor( let x = 0; x < width; x += 1 ) {\n\n\t\t\t\t\tlet num;\n\t\t\t\t\tif( i >= bin.length ) {\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnum = parseInt( bin[ i ] );\n\t\t\t\t\t\tif( isNaN( num ) ) {\n\t\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Push the bit onto the character\n\t\t\t\t\tdata[ index ][ y ].push( num );\n\n\t\t\t\t\t// Increment the bit\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction loadFontFromImg( fontSrc, font ) {\n\t\tlet img;\n\n\t\tif( typeof fontSrc === \"string\" ) {\n\t\t\t// Create a new image\n\t\t\timg = new Image();\n\n\t\t\t// Set the source\n\t\t\timg.src = fontSrc;\n\t\t} else if( fontSrc instanceof HTMLImageElement ) {\n\t\t\timg = fontSrc;\n\t\t} else {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"loadFont: fontSrc must be a string, image or canvas.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_FONT_SOURCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !img.complete ) {\n\t\t\t// Signal pijs to wait\n\t\t\tm_piWait();\n\n\t\t\t// Need to wait until the image is loaded\n\t\t\timg.onload = function() {\n\t\t\t\tfont.image = img;\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t\timg.onerror = function( err ) {\n\t\t\t\tconsole.warn( \"loadFont: unable to load image for font.\" );\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t} else {\n\t\t\tfont.image = img;\n\t\t}\n\t}\n\n\t// SETDEFAULTFONT - Set default font for new screens\n\tpi._.addCommand( \"setDefaultFont\", setDefaultFont, false, false, [ \"fontId\" ] );\n\tpi._.addSetting( \"defaultFont\", setDefaultFont, false, [ \"fontId\" ] );\n\n\tfunction setDefaultFont( args ) {\n\t\tconst fontId = parseInt( args[ 0 ] );\n\n\t\tif( isNaN( fontId ) || fontId < 0 || !piData.fonts[ fontId ] ) {\n\t\t\tconst error = new Error( \"setDefaultFont: invalid fontId\" );\n\t\t\terror.code = \"INVALID_FONT_ID\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.defaultFont = piData.fonts[ fontId ];\n\t}\n\n\t// SETFONT - Set font for current screen\n\tpi._.addCommand( \"setFont\", setFont, false, true, [ \"fontId\" ] );\n\tpi._.addSetting( \"font\", setFont, true, [ \"fontId\" ] );\n\n\tfunction setFont( screenData, args ) {\n\t\tconst fontId = args[ 0 ];\n\n\t\t// Check if this is a valid font\n\t\tif( piData.fonts[ fontId ] ) {\n\n\t\t\t// Set the font data for the current print cursor\n\t\t\tconst font = piData.fonts[ fontId ];\n\t\t\tscreenData.printCursor.font = font;\n\n\t\t\t// Set the rows and cols\n\t\t\tscreenData.printCursor.cols = Math.floor( screenData.width / font.width );\n\t\t\tscreenData.printCursor.rows = Math.floor( screenData.height / font.height );\n\t\t} else if( typeof fontId === \"string\" ) {\n\n\t\t\t// Set the context font\n\t\t\tscreenData.context.font = fontId;\n\t\t\tscreenData.context.textBaseline = \"top\";\n\n\t\t\t// Set the font dimensions\n\t\t\tconst size = calcFontSize( screenData.context );\n\n\t\t\t// Set the font data\n\t\t\tscreenData.printCursor.font = {\n\t\t\t\t\"name\": screenData.context.font,\n\t\t\t\t\"width\": size.width,\n\t\t\t\t\"height\": size.height,\n\t\t\t\t\"mode\": \"canvas\",\n\t\t\t\t\"printFunction\": piData.commands.canvasPrint,\n\t\t\t\t\"calcWidth\": piData.commands.canvasCalcWidth\n\t\t\t};\n\n\t\t\t// Set the rows and cols\n\t\t\tscreenData.printCursor.cols = Math.floor( screenData.width / size.width );\n\t\t\tscreenData.printCursor.rows = Math.floor( screenData.height / size.height );\n\t\t}\n\t}\n\n\tfunction calcFontSize( context ) {\n\t\tlet px = context.measureText( \"M\" ).width;\n\n\t\t// Add some padding to px just in case\n\t\tpx = Math.round( px * 1.5 );\n\n\t\t// Create a temporary canvas the size of the font px\n\t\tconst tCanvas = document.createElement( \"canvas\" );\n\t\ttCanvas.width = px;\n\t\ttCanvas.height = px;\n\n\t\t// Create a temporary canvas\n\t\tconst tContext = tCanvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\t\ttContext.font = context.font;\n\t\ttContext.textBaseline = \"top\";\n\t\ttContext.fillStyle = \"#FF0000\";\n\n\t\t// Set a blank size object\n\t\tconst size = {\n\t\t\t\"height\": 0,\n\t\t\t\"width\": 0\n\t\t};\n\n\t\t// Fill the M character to get the font size\n\t\ttContext.fillText( \"M\", 0, 0 );\n\n\t\t// Get the pixel data\n\t\tconst data = tContext.getImageData( 0, 0, px, px ).data;\n\n\t\t// Loop through all the pixels to find the width and height\n\t\tfor( let y = 0; y < px; y++ ) {\n\t\t\tfor( let x = 0; x < px; x++ ) {\n\t\t\t\tconst i = ( y * px + x ) * 4;\n\n\t\t\t\tif( data[ i + 3 ] > 0 ) {\n\t\t\t\t\tif( x > size.width ) {\n\t\t\t\t\t\tsize.width = x;\n\t\t\t\t\t}\n\t\t\t\t\tif( y > size.height ) {\n\t\t\t\t\t\tsize.height = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsize.width += 1;\n\t\tsize.height += 1;\n\n\t\treturn size;\n\t}\n\n\t// CANVASPRINT - Print using canvas font\n\tpi._.addCommand( \"canvasPrint\", canvasPrint, true, false );\n\n\tfunction canvasPrint( screenData, msg, x, y ) {\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.fillText( msg, x, y );\n\t}\n\n\t// BITMAPPRINT - Print using bitmap font\n\tpi._.addCommand( \"bitmapPrint\", bitmapPrint, true, false );\n\n\tfunction bitmapPrint( screenData, msg, x, y ) {\n\t\tscreenData.screenObj.render();\n\t\tconst font = screenData.printCursor.font;\n\t\tconst width = font.image.width;\n\t\tconst columns = Math.floor( width / font.sWidth );\n\n\t\tfor( let i = 0; i < msg.length; i++ ) {\n\t\t\tconst charIndex = font.chars[ msg.charCodeAt( i ) ];\n\t\t\t\n\t\t\t// Get the source x & y coordinates\n\t\t\tconst sx = ( charIndex % columns ) * font.sWidth;\n\t\t\tconst sy = Math.floor( charIndex / columns ) * font.sHeight;\n\n\t\t\t// Draw the character on the screen\n\t\t\tscreenData.context.drawImage(\n\t\t\t\tfont.image, sx, sy, font.sWidth, font.sHeight,\n\t\t\t\tx + font.width * i, y, font.width, font.height\n\t\t\t);\n\t\t}\n\t}\n\n\t// GETAVAILABLEFONTS - Get list of loaded fonts\n\tpi._.addCommand( \"getAvailableFonts\", getAvailableFonts, false, false, [] );\n\n\tfunction getAvailableFonts() {\n\t\tconst data = [];\n\t\tfor( const i in piData.fonts ) {\n\t\t\tdata.push( {\n\t\t\t\t\"id\": piData.fonts[ i ].id,\n\t\t\t\t\"width\": piData.fonts[ i ].width,\n\t\t\t\t\"height\": piData.fonts[ i ].height\n\t\t\t} );\n\t\t}\n\t\treturn data;\n\t}\n\n\t// SETFONTSIZE - Set canvas font size\n\tpi._.addCommand( \"setFontSize\", setFontSize, false, true, [ \"width\", \"height\" ] );\n\tpi._.addSetting( \"fontSize\", setFontSize, true, [ \"width\", \"height\" ] );\n\n\tfunction setFontSize( screenData, args ) {\n\t\tconst width = args[ 0 ];\n\t\tconst height = args[ 1 ];\n\n\t\tif( isNaN( width ) ) {\n\t\t\tconst error = new TypeError( \"setFontSize: width must be a number\" );\n\t\t\terror.code = \"INVALID_WIDTH\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"setFontSize: height must be a number\" );\n\t\t\terror.code = \"INVALID_HEIGHT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( screenData.printCursor.font.mode !== \"bitmap\" ) {\n\t\t\tconsole.warn( \"setFontSize: only bitmap fonts can change sizes\" );\n\t\t\treturn;\n\t\t}\n\n\t\tscreenData.printCursor.font.width = width;\n\t\tscreenData.printCursor.font.height = height;\n\n\t\t// Update rows and cols\n\t\tscreenData.printCursor.cols = Math.floor( screenData.width / width );\n\t\tscreenData.printCursor.rows = Math.floor( screenData.height / height );\n\t}\n\n\t// SETCHAR - Set custom character data for pixel font\n\tpi._.addCommand( \"setChar\", setChar, false, true, [ \"code\", \"data\" ] );\n\tpi._.addSetting( \"char\", setChar, true, [ \"code\", \"data\" ] );\n\n\tfunction setChar( screenData, args ) {\n\t\tlet code = args[ 0 ];\n\t\tlet data = args[ 1 ];\n\n\t\tif( screenData.printCursor.font.mode !== \"pixel\" ) {\n\t\t\tconsole.warn( \"setChar: only pixel fonts can change characters\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif( typeof code === \"string\" ) {\n\t\t\tcode = code.charCodeAt( 0 );\n\t\t} else {\n\t\t\tcode = Math.round( code );\n\t\t}\n\n\t\tif( isNaN( code ) ) {\n\t\t\tconst error = new TypeError( \"setChar: code must be an integer or a string\" );\n\t\t\terror.code = \"INVALID_CODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate data\n\t\tif( typeof data === \"string\" ) {\n\t\t\tdata = pi.util.hexToData(\n\t\t\t\tdata,\n\t\t\t\tscreenData.printCursor.font.width,\n\t\t\t\tscreenData.printCursor.font.height\n\t\t\t);\n\t\t} else if( pi.util.isArray( data ) ) {\n\t\t\tif( data.length !== screenData.printCursor.font.height ) {\n\t\t\t\tconst error = new RangeError( \"setChar: data array is the wrong length\" );\n\t\t\t\terror.code = \"INVALID_DATA_LENGTH\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tfor( let i = 0; i < data.length; i++ ) {\n\t\t\t\tif( data[ i ].length !== screenData.printCursor.font.width ) {\n\t\t\t\t\tconst error = new RangeError( \"setChar: data array row is the wrong length\" );\n\t\t\t\t\terror.code = \"INVALID_DATA_WIDTH\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tfor( let j = 0; j < data[ i ].length; j++ ) {\n\t\t\t\t\tif( !pi.util.isInteger( data[ i ][ j ] ) ) {\n\t\t\t\t\t\tconst error = new TypeError( \"setChar: data array contains invalid data\" );\n\t\t\t\t\t\terror.code = \"INVALID_DATA_VALUE\";\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst error = new TypeError( \"setChar: data must be a string or an array\" );\n\t\t\terror.code = \"INVALID_DATA_TYPE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set font data\n\t\tscreenData.printCursor.font.data[ code ] = data;\n\t}\n}\n\n", "/**\n * Pi.js - Print/Text Module\n * \n * Text rendering with cursor management, word wrapping, and centering.\n * \n * @module modules/print\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// PRINT - Print text to screen\n\tpi._.addCommand( \"print\", print, false, true, [ \"msg\", \"inLine\", \"isCentered\" ] );\n\n\tfunction print( screenData, args ) {\n\t\tlet msg = args[ 0 ];\n\t\tconst inLine = args[ 1 ];\n\t\tconst isCentered = args[ 2 ];\n\n\t\t// Bail if not possible to print an entire line on a screen\n\t\tif( screenData.printCursor.font.height > screenData.height ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( msg === undefined ) {\n\t\t\tmsg = \"\";\n\t\t} else if( typeof msg !== \"string\" ) {\n\t\t\tmsg = \"\" + msg;\n\t\t}\n\n\t\t// Add tabs\n\t\tmsg = msg.replace( /\\t/g, \"    \" );\n\n\t\t// Split messages by \\n\n\t\tconst parts = msg.split( /\\n/ );\n\t\tfor( let i = 0; i < parts.length; i++ ) {\n\t\t\tstartPrint( screenData, parts[ i ], inLine, isCentered );\n\t\t}\n\t}\n\n\tfunction startPrint( screenData, msg, inLine, isCentered ) {\n\t\tconst printCursor = screenData.printCursor;\n\n\t\t// Adjust if the text is too wide for the screen\n\t\tlet width = printCursor.font.calcWidth( screenData, msg );\n\n\t\tif( isCentered ) {\n\t\t\tprintCursor.x = Math.floor(\n\t\t\t\t( printCursor.cols - msg.length ) / 2\n\t\t\t) * screenData.printCursor.font.width;\n\t\t}\n\n\t\tif(\n\t\t\t!inLine &&\n\t\t\t!isCentered &&\n\t\t\twidth + printCursor.x > screenData.width &&\n\t\t\tmsg.length > 1\n\t\t) {\n\t\t\tconst overlap = ( width + printCursor.x ) - screenData.width;\n\t\t\tconst onScreen = width - overlap;\n\t\t\tconst onScreenPct = onScreen / width;\n\t\t\tlet msgSplit = Math.floor( msg.length * onScreenPct );\n\t\t\tlet msg1 = msg.substring( 0, msgSplit );\n\t\t\tlet msg2 = msg.substring( msgSplit, msg.length );\n\n\t\t\tif( printCursor.breakWord ) {\n\t\t\t\tconst index = msg1.lastIndexOf( \" \" );\n\t\t\t\tif( index > -1 ) {\n\t\t\t\t\tmsg2 = msg1.substring( index ).trim() + msg2;\n\t\t\t\t\tmsg1 = msg1.substring( 0, index );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstartPrint( screenData, msg1, inLine, isCentered );\n\t\t\tstartPrint( screenData, msg2, inLine, isCentered );\n\t\t\treturn;\n\t\t}\n\n\t\t// Adjust if the text is too tall for the screen\n\t\tif( printCursor.y + printCursor.font.height > screenData.height ) {\n\n\t\t\tif( printCursor.font.mode === \"canvas\" ) {\n\t\t\t\tscreenData.screenObj.render();\n\t\t\t}\n\n\t\t\t// Shift image up by the vertical size of the font\n\t\t\tshiftImageUp( screenData, printCursor.font.height );\n\n\t\t\t// Backup the print_cursor\n\t\t\tprintCursor.y -= printCursor.font.height;\n\t\t}\n\n\t\tprintCursor.font.printFunction( screenData, msg, printCursor.x, printCursor.y );\n\n\t\t// If it's not in_line print the advance to next line\n\t\tif( !inLine ) {\n\t\t\tprintCursor.y += printCursor.font.height;\n\t\t\tprintCursor.x = 0;\n\t\t} else {\n\t\t\tprintCursor.x += printCursor.font.width * msg.length;\n\t\t\tif( printCursor.x > screenData.width - printCursor.font.width ) {\n\t\t\t\tprintCursor.x = 0;\n\t\t\t\tprintCursor.y += printCursor.font.height;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction shiftImageUp( screenData, yOffset ) {\n\t\tif( yOffset <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tlet y = yOffset;\n\n\t\t// Loop through all the pixels after the yOffset\n\t\tfor( ; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\n\t\t\t\t// Get the index of the source pixel\n\t\t\t\tconst iDest = ( ( screenData.width * y ) + x ) * 4;\n\n\t\t\t\t// Get the index of the destination pixel\n\t\t\t\tconst iSrc = ( ( screenData.width * ( y - yOffset ) ) + x ) * 4;\n\n\t\t\t\t// Move the pixel up\n\t\t\t\tconst data = screenData.imageData.data;\n\t\t\t\tscreenData.imageData.data[ iSrc ] = data[ iDest ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 1 ] = data[ iDest + 1 ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 2 ] = data[ iDest + 2 ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 3 ] = data[ iDest + 3 ];\n\t\t\t}\n\t\t}\n\n\t\t// Clear the bottom pixels\n\t\tfor( y = screenData.height - yOffset; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst iSrc = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tscreenData.imageData.data[ iSrc ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 1 ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 2 ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 3 ] = 0;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// PICALCWIDTH - Calculate pixel font width\n\tpi._.addCommand( \"piCalcWidth\", piCalcWidth, true, false );\n\n\tfunction piCalcWidth( screenData, msg ) {\n\t\treturn screenData.printCursor.font.width * msg.length;\n\t}\n\n\t// CANVASCALCWIDTH - Calculate canvas font width\n\tpi._.addCommand( \"canvasCalcWidth\", canvasCalcWidth, true, false );\n\n\tfunction canvasCalcWidth( screenData, msg ) {\n\t\treturn screenData.context.measureText( msg ).width;\n\t}\n\n\t// SETWORDBREAK - Enable/disable word wrapping\n\tpi._.addCommand( \"setWordBreak\", setWordBreak, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"wordBreak\", setWordBreak, true, [ \"isEnabled\" ] );\n\n\tfunction setWordBreak( screenData, args ) {\n\t\tscreenData.printCursor.breakWord = !!args[ 0 ];\n\t}\n\n\t// PIPRINT - Print using pixel font\n\tpi._.addCommand( \"piPrint\", piPrint, true, false );\n\n\tfunction piPrint( screenData, msg, x, y ) {\n\t\tconst printCursor = screenData.printCursor;\n\n\t\t// Setup a temporary palette with the fore color and back color\n\t\tconst defaultPal = screenData.pal;\n\t\tscreenData.pal = [ screenData.pal[ 0 ], screenData.fColor ];\n\n\t\t// Loop through each character in the message and put it on the screen\n\t\tfor( let i = 0; i < msg.length; i++ ) {\n\n\t\t\t// Get the character index for the character data\n\t\t\tconst charIndex = printCursor.font.chars[ msg.charCodeAt( i ) ];\n\n\t\t\t// Draw the character on the screen\n\t\t\tif( charIndex !== undefined && printCursor.font.data[ charIndex ] ) {\n\t\t\t\tscreenData.screenObj.put(\n\t\t\t\t\tprintCursor.font.data[ charIndex ],\n\t\t\t\t\tx + ( i * printCursor.font.width ),\n\t\t\t\t\ty,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Reset the palette\n\t\tscreenData.pal = defaultPal;\n\t}\n\n\t// SETPOS - Set cursor position by column and row\n\tpi._.addCommand( \"setPos\", setPos, false, true, [ \"col\", \"row\" ] );\n\tpi._.addSetting( \"pos\", setPos, true, [ \"col\", \"row\" ] );\n\n\tfunction setPos( screenData, args ) {\n\t\tconst col = args[ 0 ];\n\t\tconst row = args[ 1 ];\n\n\t\t// Set the x value\n\t\tif( col != null ) {\n\t\t\tif( isNaN( col ) ) {\n\t\t\t\tconst error = new TypeError( \"setPos: parameter col must be a number\" );\n\t\t\t\terror.code = \"INVALID_COL\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tlet x = Math.floor( col * screenData.printCursor.font.width );\n\t\t\tif( x > screenData.width ) {\n\t\t\t\tx = screenData.width - screenData.printCursor.font.width;\n\t\t\t}\n\t\t\tscreenData.printCursor.x = x;\n\t\t}\n\n\t\t// Set the y value\n\t\tif( row != null ) {\n\t\t\tif( isNaN( row ) ) {\n\t\t\t\tconst error = new TypeError( \"setPos: parameter row must be a number\" );\n\t\t\t\terror.code = \"INVALID_ROW\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tlet y = Math.floor( row * screenData.printCursor.font.height );\n\t\t\tif( y > screenData.height ) {\n\t\t\t\ty = screenData.height - screenData.printCursor.font.height;\n\t\t\t}\n\t\t\tscreenData.printCursor.y = y;\n\t\t}\n\t}\n\n\t// SETPOSPX - Set cursor position by pixels\n\tpi._.addCommand( \"setPosPx\", setPosPx, false, true, [ \"x\", \"y\" ] );\n\tpi._.addSetting( \"posPx\", setPosPx, true, [ \"x\", \"y\" ] );\n\n\tfunction setPosPx( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\n\t\tif( x != null ) {\n\t\t\tif( isNaN( x ) ) {\n\t\t\t\tconst error = new TypeError( \"setPosPx: parameter x must be an integer\" );\n\t\t\t\terror.code = \"INVALID_X\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData.printCursor.x = Math.round( x );\n\t\t}\n\n\t\tif( y != null ) {\n\t\t\tif( isNaN( y ) ) {\n\t\t\t\tconst error = new TypeError( \"setPosPx: parameter y must be an integer\" );\n\t\t\t\terror.code = \"INVALID_Y\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData.printCursor.y = Math.round( y );\n\t\t}\n\t}\n\n\t// GETPOS - Get cursor position in columns and rows\n\tpi._.addCommand( \"getPos\", getPos, false, true, [] );\n\n\tfunction getPos( screenData ) {\n\t\treturn {\n\t\t\t\"col\": Math.floor(\n\t\t\t\tscreenData.printCursor.x / screenData.printCursor.font.width\n\t\t\t),\n\t\t\t\"row\": Math.floor(\n\t\t\t\tscreenData.printCursor.y / screenData.printCursor.font.height\n\t\t\t)\n\t\t};\n\t}\n\n\t// GETCOLS - Get screen width in columns\n\tpi._.addCommand( \"getCols\", getCols, false, true, [] );\n\n\tfunction getCols( screenData ) {\n\t\treturn screenData.printCursor.cols;\n\t}\n\n\t// GETROWS - Get screen height in rows\n\tpi._.addCommand( \"getRows\", getRows, false, true, [] );\n\n\tfunction getRows( screenData ) {\n\t\treturn screenData.printCursor.rows;\n\t}\n\n\t// GETPOSPX - Get cursor position in pixels\n\tpi._.addCommand( \"getPosPx\", getPosPx, false, true, [] );\n\n\tfunction getPosPx( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.printCursor.x,\n\t\t\t\"y\": screenData.printCursor.y\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Table Formatting Module\n * \n * Formats and renders tables with ASCII box-drawing characters.\n * \n * @module modules/table\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\tconst m_borderStyles = {\n\t\t\"single\": [\n\t\t\t[ 218, 196, 194, 191 ],\n\t\t\t[ 195, 196, 197, 180 ],\n\t\t\t[ 192, 196, 193, 217 ],\n\t\t\t[ 179, 32, 179 ]\n\t\t],\n\t\t\"double\": [\n\t\t\t[ 201, 205, 203, 187 ],\n\t\t\t[ 204, 205, 206, 185 ],\n\t\t\t[ 200, 205, 202, 188 ],\n\t\t\t[ 186, 32, 186 ]\n\t\t],\n\t\t\"singleDouble\": [\n\t\t\t[ 213, 205, 209, 184 ],\n\t\t\t[ 198, 205, 216, 181 ],\n\t\t\t[ 212, 205, 207, 190 ],\n\t\t\t[ 179, 32, 179 ]\n\t\t],\n\t\t\"doubleSingle\": [\n\t\t\t[ 214, 196, 210, 183 ],\n\t\t\t[ 199, 196, 215, 182 ],\n\t\t\t[ 211, 196, 208, 189 ],\n\t\t\t[ 186, 32, 186 ]\n\t\t],\n\t\t\"thick\": [\n\t\t\t[ 219, 223, 219, 219 ],\n\t\t\t[ 219, 223, 219, 219 ],\n\t\t\t[ 223, 223, 223, 223 ],\n\t\t\t[ 219, 32, 219 ]\n\t\t]\n\t};\n\n\t// PRINTTABLE - Render table with ASCII box drawing\n\tpi._.addCommand( \"printTable\", printTable, false, true,\n\t\t[ \"items\", \"tableFormat\", \"borderStyle\", \"isCentered\" ]\n\t);\n\n\tfunction printTable( screenData, args ) {\n\t\tconst items = args[ 0 ];\n\t\tlet tableFormat = args[ 1 ];\n\t\tlet borderStyle = args[ 2 ];\n\t\tconst isCentered = !!args[ 3 ];\n\n\t\tif( !pi.util.isArray( items ) ) {\n\t\t\tconst error = new TypeError( \"printTable: items must be an array\" );\n\t\t\terror.code = \"INVALID_ITEMS\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !borderStyle ) {\n\t\t\tborderStyle = m_borderStyles[ \"single\" ];\n\t\t}\n\n\t\tlet isFormatted;\n\t\tif( tableFormat == null ) {\n\t\t\tisFormatted = false;\n\t\t} else if( pi.util.isArray( tableFormat ) ) {\n\t\t\tfor( let i = 0; i < tableFormat.length; i++ ) {\n\t\t\t\tif( typeof tableFormat[ i ] !== \"string\" ) {\n\t\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\t\"printTable: tableFormat must be an array of strings\"\n\t\t\t\t\t);\n\t\t\t\t\terror.code = \"INVALID_FORMAT\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tisFormatted = true;\n\t\t} else {\n\t\t\tconst error = new TypeError( \"printTable: tableFormat must be an array\" );\n\t\t\terror.code = \"INVALID_FORMAT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( typeof borderStyle === \"string\" && m_borderStyles[ borderStyle ] ) {\n\t\t\tborderStyle = m_borderStyles[ borderStyle ];\n\t\t} else if( !pi.util.isArray( borderStyle ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"printTable: borderStyle must be an integer or array\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_BORDER_STYLE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isFormatted ) {\n\t\t\treturn buildFormatedTable(\n\t\t\t\tscreenData, items, borderStyle, tableFormat, isCentered\n\t\t\t);\n\t\t} else {\n\t\t\tconst width = piData.commands.getCols( screenData );\n\t\t\treturn buildStandardTable( screenData, items, width, borderStyle );\n\t\t}\n\t}\n\n\tfunction buildStandardTable( screenData, items, width, borders ) {\n\t\tlet msg = \"\";\n\t\tconst boxes = [];\n\t\tconst font = screenData.printCursor.font;\n\t\tconst startPos = piData.commands.getPos( screenData );\n\t\tconst cellHeight = 2;\n\n\t\tfor( let row = 0; row < items.length; row += 1 ) {\n\n\t\t\t// Calculate the cellWidth\n\t\t\tlet cellWidth = Math.floor( width / items[ row ].length );\n\t\t\tif( cellWidth < 3 ) {\n\t\t\t\tcellWidth = 3;\n\t\t\t}\n\n\t\t\tconst rowWidth = ( cellWidth - 2 ) * items[ row ].length +\n\t\t\t\titems[ row ].length + 1;\n\t\t\tconst rowPad = Math.round( ( width - rowWidth ) / 2 );\n\t\t\tlet msgTop = pi.util.padL( \"\", rowPad, \" \" );\n\t\t\tlet msgMid = msgTop;\n\t\t\tlet msgBot = msgTop;\n\n\t\t\t// Format all the cells\n\t\t\tfor( let col = 0; col < items[ row ].length; col += 1 ) {\n\n\t\t\t\tcreateBox(\n\t\t\t\t\t( col * ( cellWidth - 1 ) ) + rowPad,\n\t\t\t\t\t( row * 2 ) + startPos.row, boxes, font\n\t\t\t\t);\n\t\t\t\tconst box = boxes[ boxes.length - 1 ];\n\t\t\t\tbox.pos.width = cellWidth - 1;\n\t\t\t\tbox.pos.height = 2;\n\t\t\t\tbox.pixels.width = box.pos.width * font.width;\n\t\t\t\tbox.pixels.height = box.pos.height * font.height;\n\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tbox.pixels.width += 1;\n\t\t\t\t}\n\n\t\t\t\tif( row === items.length - 1 ) {\n\t\t\t\t\tbox.pixels.height += 1;\n\t\t\t\t}\n\n\t\t\t\t// Middle cell\n\t\t\t\tmsgMid += String.fromCharCode( borders[ 3 ][ 0 ] ) +\n\t\t\t\t\tpi.util.pad(\n\t\t\t\t\t\titems[ row ][ col ],\n\t\t\t\t\t\tcellWidth - 2,\n\t\t\t\t\t\tString.fromCharCode( borders[ 3 ][ 1 ] )\n\t\t\t\t\t);\n\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tmsgMid += String.fromCharCode( borders[ 3 ][ 2 ] );\n\t\t\t\t}\n\n\t\t\t\t// Top Row\n\t\t\t\tif( row === 0 ) {\n\n\t\t\t\t\t// Top left corner\n\t\t\t\t\tif( col === 0 ) {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 0 ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 2 ] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top center line\n\t\t\t\t\tmsgTop += pi.util.pad( \"\", cellWidth - 2,\n\t\t\t\t\t\tString.fromCharCode( borders[ 0 ][ 1 ] )\n\t\t\t\t\t);\n\n\t\t\t\t\t// Top Right corner\n\t\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 3 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Bottom Row\n\t\t\t\tlet bottomRow;\n\t\t\t\tif( row === items.length - 1 ) {\n\t\t\t\t\tbottomRow = 2;\n\t\t\t\t} else {\n\t\t\t\t\tbottomRow = 1;\n\t\t\t\t}\n\n\t\t\t\t// Bottom Left Corner\n\t\t\t\tif( col === 0 ) {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 0 ] );\n\t\t\t\t} else {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 2 ] );\n\t\t\t\t}\n\n\t\t\t\t// Bottom center line\n\t\t\t\tmsgBot += pi.util.pad( \"\", cellWidth - 2, String.fromCharCode(\n\t\t\t\t\tborders[ bottomRow ][ 1 ] )\n\t\t\t\t);\n\n\t\t\t\t// Bottom Right corner\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 3 ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move to the next row\n\t\t\tif( row === 0 ) {\n\t\t\t\tmsg += msgTop + \"\\n\";\n\t\t\t}\n\t\t\tmsg += msgMid + \"\\n\";\n\t\t\tmsg += msgBot + \"\\n\";\n\t\t}\n\n\t\tmsg = msg.substr( 0, msg.length - 1 );\n\t\tpiData.commands.print( screenData, [ msg ] );\n\n\t\treturn boxes;\n\t}\n\n\tfunction buildFormatedTable(\n\t\tscreenData, items, borders, tableFormat, isCentered\n\t) {\n\t\tlet msg = \"\";\n\t\tconst boxes = [];\n\t\tlet pos = piData.commands.getPos( screenData );\n\t\tconst font = screenData.printCursor.font;\n\n\t\t// Set padding for centered table\n\t\tif( isCentered ) {\n\t\t\tpos.col = Math.floor( ( piData.commands.getCols( screenData ) -\n\t\t\t\ttableFormat[ 0 ].length ) / 2\n\t\t\t);\n\t\t}\n\n\t\t// Create the padding\n\t\tconst padding = pi.util.pad( \"\", pos.col, \" \" );\n\t\tpiData.commands.setPos( screenData, [ 0, pos.row ] );\n\n\t\tfor( let row = 0; row < tableFormat.length; row += 1 ) {\n\t\t\tmsg += padding;\n\t\t\tfor( let col = 0; col < tableFormat[ row ].length; col += 1 ) {\n\t\t\t\tconst cell = tableFormat[ row ].charAt( col );\n\n\t\t\t\t// Table Intersection\n\t\t\t\tif( cell === \"*\" ) {\n\n\t\t\t\t\tconst cellDirs = \"\" +\n\t\t\t\t\t\tlookCell( col, row, \"left\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"right\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"up\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"down\", tableFormat );\n\n\t\t\t\t\tif( cellDirs === \" - |\" ) {\n\t\t\t\t\t\t// Top Left Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 0 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"-- |\" ) {\n\t\t\t\t\t\t// Top Middle Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 2 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"-  |\" ) {\n\t\t\t\t\t\t// Top Right Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 3 ] );\n\t\t\t\t\t} else if( cellDirs === \" -||\" ) {\n\t\t\t\t\t\t// Middle Left Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 0 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"--||\" ) {\n\t\t\t\t\t\t// Middle Middle\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 2 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"- ||\" ) {\n\t\t\t\t\t\t// Middle Right\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 3 ] );\n\t\t\t\t\t} else if( cellDirs === \" -| \" ) {\n\t\t\t\t\t\t// Bottom Left\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 0 ] );\n\t\t\t\t\t} else if( cellDirs === \"--| \" ) {\n\t\t\t\t\t\t// Bottom Middle\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 2 ] );\n\t\t\t\t\t} else if( cellDirs === \"- | \" ) {\n\t\t\t\t\t\t// Bottom Right\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 3 ] );\n\t\t\t\t\t}\n\t\t\t\t} else if( cell === \"-\" ) {\n\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 1 ] );\n\t\t\t\t} else if( cell === \"|\" ) {\n\t\t\t\t\tmsg += String.fromCharCode( borders[ 3 ][ 0 ] );\n\t\t\t\t} else {\n\t\t\t\t\tmsg += \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t\tmsg += \"\\n\";\n\t\t}\n\n\t\tconst posAfter = piData.commands.getPos( screenData );\n\t\tcompleteBoxes( boxes, tableFormat, font, pos );\n\n\t\tmsg = msg.substr( 0, msg.length - 1 );\n\t\tpiData.commands.print( screenData, [ msg ] );\n\n\t\tlet i = 0;\n\t\tfor( let row = 0; row < items.length; row += 1 ) {\n\t\t\tif( pi.util.isArray( items[ row ] ) ) {\n\t\t\t\tfor( let col = 0; col < items[ row ].length; col += 1 ) {\n\t\t\t\t\tif( i < boxes.length ) {\n\t\t\t\t\t\tprintItem(\n\t\t\t\t\t\t\tscreenData, boxes[ i ], items[ row ][ col ],\n\t\t\t\t\t\t\tpos.col\n\t\t\t\t\t\t);\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprintItem( screenData, boxes[ i ], items[ row ], pos.col );\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setPos( screenData,\n\t\t\t[ 0, posAfter.row + tableFormat.length ]\n\t\t);\n\n\t\treturn boxes;\n\t}\n\n\tfunction printItem( screenData, box, msg ) {\n\t\tif( !box ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmsg = \"\" + msg;\n\n\t\t// Calculate dimensions\n\t\tconst width = box.pos.width;\n\t\tconst height = box.pos.height;\n\n\t\tconst isVertical = box.format.toLowerCase() === \"v\";\n\n\t\tif( isVertical ) {\n\t\t\tif( msg.length > height ) {\n\t\t\t\tmsg = msg.substr( 0, height );\n\t\t\t}\n\t\t} else {\n\t\t\tif( msg.length > width ) {\n\t\t\t\tmsg = msg.substr( 0, width );\n\t\t\t}\n\t\t}\n\n\t\tconst pos = piData.commands.getPos( screenData );\n\n\t\tif( isVertical ) {\n\t\t\tlet index = 0;\n\t\t\tconst col = box.pos.col + Math.round( width / 2 );\n\t\t\tconst startRow = box.pos.row + 1 +\n\t\t\t\tMath.floor( ( height - msg.length ) / 2 );\n\t\t\tfor( let row = startRow; row <= height + startRow; row += 1 ) {\n\t\t\t\tpiData.commands.setPos( screenData, [ col, row ] );\n\t\t\t\tpiData.commands.print( screenData,\n\t\t\t\t\t[ msg.charAt( index ), true ]\n\t\t\t\t);\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tconst col = box.pos.col + 1 + Math.floor( ( width - msg.length ) / 2 );\n\t\t\tconst row = box.pos.row + Math.round( height / 2 );\n\t\t\tpiData.commands.setPos( screenData, [ col, row ] );\n\t\t\tpiData.commands.print( screenData, [ msg, true ] );\n\t\t}\n\n\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row ] );\n\t}\n\n\tfunction createBox( col, row, boxes, font ) {\n\t\tboxes.push( {\n\t\t\t\"pos\": {\n\t\t\t\t\"col\": col,\n\t\t\t\t\"row\": row,\n\t\t\t\t\"width\": null,\n\t\t\t\t\"height\": null\n\t\t\t},\n\t\t\t\"pixels\": {\n\t\t\t\t\"x\": ( col * font.width ) + Math.round( font.width / 2 ) - 1,\n\t\t\t\t\"y\": ( row * font.height ) + Math.round( font.height / 2 ),\n\t\t\t\t\"width\": null,\n\t\t\t\t\"height\": null\n\t\t\t},\n\t\t\t\"format\": \" \"\n\t\t} );\n\t}\n\n\tfunction completeBoxes( boxes, tableFormat, font, pos ) {\n\t\tfor( let i = 0; i < boxes.length; i += 1 ) {\n\t\t\tconst box = boxes[ i ];\n\n\t\t\t// Compute table coordinates for formatting character\n\t\t\tlet xt = box.pos.col + 1 - pos.col;\n\t\t\tlet yt = box.pos.row + 1 - pos.row;\n\n\t\t\t// Find the formatting character\n\t\t\tif( yt < tableFormat.length && xt < tableFormat[ yt ].length ) {\n\t\t\t\tbox.format = tableFormat[ yt ].charAt( xt );\n\t\t\t}\n\n\t\t\t// Compute table coordinates\n\t\t\txt = box.pos.col - pos.col;\n\t\t\tyt = box.pos.row - pos.row;\n\n\t\t\t// Find box.width\n\t\t\twhile( xt < tableFormat[ yt ].length - 1 ) {\n\t\t\t\txt += 1;\n\t\t\t\tif( tableFormat[ yt ].charAt( xt ) === \"*\" ) {\n\t\t\t\t\tconst cell = lookCell( xt, yt, \"down\", tableFormat );\n\t\t\t\t\tif( cell === \"|\" ) {\n\t\t\t\t\t\tbox.pos.width = ( pos.col + ( xt - 1 ) ) - box.pos.col;\n\t\t\t\t\t\tbox.pixels.width = ( box.pos.width + 1 ) * font.width;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Box ends at table end\n\t\t\tif( box.pos.width === null ) {\n\t\t\t\tbox.pos.width = ( pos.col + ( xt - 1 ) ) - box.pos.col;\n\t\t\t\tbox.pixels.width = ( box.pos.width + 1 ) * font.width + 1;\n\t\t\t}\n\n\t\t\t// Find box.height\n\t\t\twhile( yt < tableFormat.length - 1 ) {\n\t\t\t\tyt += 1;\n\t\t\t\tif( tableFormat[ yt ].charAt( xt ) === \"*\" ) {\n\t\t\t\t\tconst cell = lookCell( xt, yt, \"left\", tableFormat );\n\t\t\t\t\tif( cell === \"-\" ) {\n\t\t\t\t\t\tbox.pos.height = ( pos.row + ( yt - 1 ) ) - box.pos.row;\n\t\t\t\t\t\tbox.pixels.height = ( box.pos.height + 1 ) * font.height;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Box ends at table end\n\t\t\tif( box.pos.height === null ) {\n\t\t\t\tbox.pos.height = ( pos.row + ( yt - 1 ) ) - box.pos.row;\n\t\t\t\tbox.pixels.height = ( box.pos.height + 1 ) * font.height + 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction lookCell( x, y, dir, tableFormat ) {\n\t\tif( dir === \"left\" ) {\n\t\t\tx -= 1;\n\t\t} else if( dir === \"right\" ) {\n\t\t\tx += 1;\n\t\t} else if( dir === \"up\" ) {\n\t\t\ty -= 1;\n\t\t} else if( dir === \"down\" ) {\n\t\t\ty += 1;\n\t\t}\n\n\t\tif( y >= tableFormat.length || y < 0 || x < 0 ) {\n\t\t\treturn \" \";\n\t\t}\n\n\t\tif( x >= tableFormat[ y ].length ) {\n\t\t\treturn \" \";\n\t\t}\n\n\t\tif(\n\t\t\ttableFormat[ y ].charAt( x ) === \"*\" &&\n\t\t\t( dir === \"left\" || dir === \"right\" )\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\n\t\tif(\n\t\t\ttableFormat[ y ].charAt( x ) === \"*\" &&\n\t\t\t( dir === \"up\" || dir === \"down\" )\n\t\t) {\n\t\t\treturn \"|\";\n\t\t}\n\n\t\treturn tableFormat[ y ].charAt( x );\n\t}\n}\n\n", "/**\n * Pi.js - Keyboard Input Module\n * \n * Handles keyboard events, key state tracking, input buffer, and event listeners.\n * \n * @module modules/keyboard\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Keyboard state\n\tlet m_inKeys = {};  // Key by character\n\tlet m_inKeyCodes = {};  // Key by .key property\n\tlet m_inCodes = {};  // Key by .code property\n\tlet m_inputs = [];  // Input buffer\n\tlet m_inputIndex = 0;\n\tlet m_onKeyEventListeners = {};\n\tlet m_anyKeyEventListeners = {};\n\tlet m_onKeyCombos = {};  // Key combination listeners\n\tlet m_isKeyEventsActive = false;\n\tlet m_inputFocus = null;\n\tlet m_preventKeys = {};\n\n\t// Input command state\n\tlet m_inputQueue = [];  // Queue of active input requests\n\tlet m_inputQueueIndex = 0;\n\tlet m_promptInterval = null;\n\tlet m_promptBlink = false;\n\tlet m_promptLastTime = 0;\n\tlet m_promptBackground = null;\n\tlet m_promptBackgroundWidth = 0;\n\n\t// Keyboard started flag\n\tlet m_keyboardStarted = false;\n\n\t// STARTKEYBOARD - Start keyboard event listeners\n\tpi._.addCommand( \"startKeyboard\", startKeyboard, false, false, [] );\n\n\tfunction startKeyboard() {\n\t\tif( m_keyboardStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = m_inputFocus || piData.defaultInputFocus || window;\n\n\t\tif( !target ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget.addEventListener( \"keydown\", onKeyDown );\n\t\ttarget.addEventListener( \"keyup\", onKeyUp );\n\t\ttarget.addEventListener( \"blur\", clearPressedKeys );\n\n\t\tm_keyboardStarted = true;\n\t}\n\n\t// STOPKEYBOARD - Stop keyboard event listeners\n\tpi._.addCommand( \"stopKeyboard\", stopKeyboard, false, false, [] );\n\n\tfunction stopKeyboard() {\n\n\t\t// Clear all keyboard state\n\t\tm_inKeys = {};\n\t\tm_inKeyCodes = {};\n\t\tm_inCodes = {};\n\t\tm_inputs = [];\n\t\tm_onkeyListeners = {};\n\t\tm_onKeyCombos = {};\n\n\t\tif( !m_keyboardStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = m_inputFocus || piData.defaultInputFocus || window;\n\n\t\tif( target ) {\n\t\t\ttarget.removeEventListener( \"keydown\", onKeyDown );\n\t\t\ttarget.removeEventListener( \"keyup\", onKeyUp );\n\t\t\ttarget.removeEventListener( \"blur\", clearPressedKeys );\n\t\t}\n\n\t\tm_keyboardStarted = false;\n\t}\n\n\tfunction onKeyDown( e ) {\n\t\tconst key = e.key;\n\t\tconst code = e.code;\n\t\tconst keyCode = e.keyCode;\n\t\tconst keyData = {\n\t\t\t\"key\": e.key,\n\t\t\t\"location\": e.location,\n\t\t\t\"code\": e.code,\n\t\t\t\"keyCode\": e.keyCode\n\t\t};\n\n\t\t// Track key state\n\t\tm_inKeys[ key ] = keyData;\n\t\tm_inKeyCodes[ keyCode ] = keyData;\n\t\tm_inCodes[ code ] = keyData;\n\n\t\tm_inputs.push( keyData );\n\n\t\t// Prevent default for registered keys\n\t\tif( m_preventKeys[ key ] || m_preventKeys[ code ] || m_preventKeys[ keyCode ] ) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t// Trigger event listeners\n\t\tif( m_isKeyEventsActive ) {\n\t\t\ttriggerKeyEventListeners( \"down\", key, code );\n\t\t}\n\t}\n\n\tfunction onKeyUp( e ) {\n\t\tconst key = e.key;\n\t\tconst code = e.code;\n\t\tconst keyCode = e.keyCode;\n\n\t\t// Clear key state\n\t\tm_inKeys[ key ] = false;\n\t\tm_inCodes[ code ] = false;\n\t\tm_inKeyCodes[ keyCode ] = false;\n\n\t\t// Trigger event listeners\n\t\tif( m_isKeyEventsActive ) {\n\t\t\ttriggerKeyEventListeners( \"up\", key, code );\n\t\t}\n\t}\n\n\tfunction clearPressedKeys() {\n\t\tfor( const i in m_inKeys ) {\n\t\t\tm_inKeys[ i ] = false;\n\t\t}\n\t\tfor( const i in m_inKeyCodes ) {\n\t\t\tm_inKeyCodes[ i ] = false;\n\t\t}\n\t\tfor( const i in m_inCodes ) {\n\t\t\tm_inCodes[ i ] = false;\n\t\t}\n\t}\n\n\tfunction triggerKeyEventListeners( mode, key, code ) {\n\t\t\n\t\t// Trigger listeners registered for the key character (e.g., \"a\", \";\")\n\t\tconst keyListeners = m_onKeyEventListeners[ key ];\n\t\tif( keyListeners && keyListeners[ mode ] ) {\n\t\t\tfor( let i = keyListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = keyListeners[ mode ][ i ];\n\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tkeyListeners[ mode ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger listeners registered for the code (e.g., \"KeyA\", \"Semicolon\")\n\t\tif( code && code !== key ) {\n\t\t\tconst codeListeners = m_onKeyEventListeners[ code ];\n\t\t\tif( codeListeners && codeListeners[ mode ] ) {\n\t\t\t\tfor( let i = codeListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\t\tconst listener = codeListeners[ mode ][ i ];\n\t\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\t\tif( listener.once ) {\n\t\t\t\t\t\tcodeListeners[ mode ].splice( i, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger \"any key\" listeners\n\t\tif( m_anyKeyEventListeners[ mode ] ) {\n\t\t\tfor( let i = m_anyKeyEventListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = m_anyKeyEventListeners[ mode ][ i ];\n\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// INKEY - Get key state or input buffer\n\tpi._.addCommand( \"inkey\", inkey, false, false, [ \"key\" ] );\n\n\tfunction inkey( args ) {\n\t\tconst key = args[ 0 ];\n\n\t\t// Activate key events\n\t\tstartKeyboard();\n\n\t\t// If the key is provided then return the key status\n\t\tif( key != null ) {\n\n\t\t\t// Check by character first (e.g., \"a\", \";\", \":\")\n\t\t\tif( m_inKeys[ key ] ) {\n\t\t\t\treturn m_inKeys[ key ];\n\t\t\t}\n\n\t\t\t// Then check by .key property\n\t\t\tif( m_inKeyCodes[ key ] ) {\n\t\t\t\treturn m_inKeyCodes[ key ];\n\t\t\t}\n\n\t\t\t// Finally check by .code property (e.g., \"KeyA\", \"Semicolon\")\n\t\t\treturn m_inCodes[ key ] || false;\n\t\t}\n\n\t\t// If no key is provided then return all keys pressed status\n\t\tconst keysReturn = {};\n\t\tfor( const i in m_inCodes ) {\n\t\t\tif( m_inCodes[ i ] ) {\n\t\t\t\tkeysReturn[ i ] = m_inCodes[ i ];\n\t\t\t}\n\t\t}\n\t\treturn keysReturn;\n\t}\n\n\t// ONKEY - Register key event listener\n\tpi._.addCommand( \"onkey\", onkey, false, false, [ \"key\", \"mode\", \"fn\", \"once\" ] );\n\n\tfunction onkey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst mode = args[ 1 ] || \"down\";\n\t\tconst fn = args[ 2 ];\n\t\tconst once = !!args[ 3 ];\n\n\t\tstartKeyboard();\n\t\tm_isKeyEventsActive = true;\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onkey: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Handle \"any key\" listeners\n\t\tif( key == null || key === \"*\" ) {\n\t\t\tif( !m_anyKeyEventListeners[ mode ] ) {\n\t\t\t\tm_anyKeyEventListeners[ mode ] = [];\n\t\t\t}\n\t\t\tm_anyKeyEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\t\treturn;\n\t\t}\n\n\t\t// Use key directly - can be a character (\"a\", \";\") or code (\"KeyA\", \"Semicolon\")\n\t\t// Register under the key value provided\n\t\tif( !m_onKeyEventListeners[ key ] ) {\n\t\t\tm_onKeyEventListeners[ key ] = {};\n\t\t}\n\t\tif( !m_onKeyEventListeners[ key ][ mode ] ) {\n\t\t\tm_onKeyEventListeners[ key ][ mode ] = [];\n\t\t}\n\n\t\tm_onKeyEventListeners[ key ][ mode ].push( { \"fn\": fn, \"once\": once } );\n\t}\n\n\t// OFFKEY - Remove key event listener\n\tpi._.addCommand( \"offkey\", offkey, false, false, [ \"key\", \"mode\", \"fn\" ] );\n\n\tfunction offkey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst mode = args[ 1 ] || \"down\";\n\t\tconst fn = args[ 2 ];\n\n\t\t// Remove \"any key\" listeners\n\t\tif( key == null || key === \"*\" ) {\n\t\t\tif( m_anyKeyEventListeners[ mode ] ) {\n\t\t\t\tif( fn ) {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ] = m_anyKeyEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove listener registered under this key\n\t\tif( m_onKeyEventListeners[ key ] && m_onKeyEventListeners[ key ][ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tm_onKeyEventListeners[ key ][ mode ] = \n\t\t\t\t\tm_onKeyEventListeners[ key ][ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_onKeyEventListeners[ key ][ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// PREVENTKEY - Prevent default browser behavior for key\n\tpi._.addCommand( \"preventKey\", preventKey, false, false, [ \"key\", \"isPrevent\" ] );\n\n\tfunction preventKey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst isPrevent = args[ 1 ] !== false;\n\n\t\tif( isPrevent ) {\n\t\t\tm_preventKeys[ key ] = true;\n\t\t} else {\n\t\t\tdelete m_preventKeys[ key ];\n\t\t}\n\t}\n\n\t// CLEARKEYS - Clear all key states\n\tpi._.addCommand( \"clearKeys\", clearKeys, false, false, [] );\n\n\tfunction clearKeys() {\n\t\tm_inKeys = {};\n\t\tm_inKeyCodes = {};\n\t\tm_inCodes = {};\n\t\tm_inputs = [];\n\t\tm_inputIndex = 0;\n\t}\n\n\t// REINIT KEYBOARD - Reinitialize keyboard with new focus element\n\tpi._.addCommand( \"reinitKeyboard\", reinitKeyboard, true, false );\n\n\tfunction reinitKeyboard() {\n\t\tif( m_keyboardStarted ) {\n\t\t\tstopKeyboard();\n\t\t\tm_inputFocus = piData.defaultInputFocus;\n\t\t\tstartKeyboard();\n\t\t}\n\t}\n\n\t// SETINPUTFOCUS - Set input focus element\n\tpi._.addCommand( \"setInputFocus\", setInputFocus, false, true, [ \"element\" ] );\n\n\tfunction setInputFocus( screenData, args ) {\n\t\tlet element = args[ 0 ];\n\n\t\tif( typeof element === \"string\" ) {\n\t\t\telement = document.getElementById( element );\n\t\t}\n\n\t\tif( !element || !pi.util.canAddEventListeners( element ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setInputFocus: Invalid element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ELEMENT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tm_inputFocus = element;\n\n\t\t// Reinitialize keyboard if already started\n\t\tif( m_keyboardStarted ) {\n\t\t\tstopKeyboard();\n\t\t\tstartKeyboard();\n\t\t}\n\t}\n\n\t// ONKEYCOMBO - Register key combination listener\n\tpi._.addCommand( \"onkeyCombo\", onkeyCombo, false, false, [ \"keys\", \"fn\", \"once\" ] );\n\n\tfunction onkeyCombo( args ) {\n\t\tconst keys = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tif( !pi.util.isArray( keys ) || keys.length === 0 ) {\n\t\t\tconst error = new TypeError( \"onkeyCombo: keys must be a non-empty array\" );\n\t\t\terror.code = \"INVALID_KEYS\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onkeyCombo: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst comboId = keys.join( \"+\" );\n\t\tconst allKeys = [];\n\n\t\tconst comboData = {\n\t\t\t\"keys\": keys.slice(),\n\t\t\t\"keyData\": [],\n\t\t\t\"fn\": fn,\n\t\t\t\"allKeys\": allKeys,\n\t\t\t\"once\": once\n\t\t};\n\n\t\t// If the key combo doesn't exist add it\n\t\tif( !m_onKeyCombos[ comboId ] ) {\n\t\t\tm_onKeyCombos[ comboId ] = [];\n\t\t}\n\t\tm_onKeyCombos[ comboId ].push( comboData );\n\n\t\tfor( let i = 0; i < keys.length; i++ ) {\n\t\t\taddKeyCombo( keys[ i ], i, allKeys, fn, once, comboData );\n\t\t}\n\t}\n\n\tfunction addKeyCombo( key, i, allKeys, fn, once, comboData ) {\n\n\t\t// Store the functions so we can run offkeyCombo later\n\t\tcomboData.keyData.push( {\n\t\t\t\"key\": key,\n\t\t\t\"keyComboDown\": keyComboDown,\n\t\t\t\"keyComboUp\": keyComboUp\n\t\t} );\n\n\t\t// Default state is not pressed\n\t\tallKeys.push( false );\n\n\t\t// On key down\n\t\tonkey( [ key, \"down\", keyComboDown, false ] );\n\n\t\t// On key up\n\t\tonkey( [ key, \"up\", keyComboUp, false ] );\n\n\t\tfunction keyComboDown( e ) {\n\t\t\tallKeys[ i ] = true;\n\t\t\tif( allKeys.indexOf( false ) === -1 ) {\n\t\t\t\tif( once ) {\n\t\t\t\t\toffkey( [ key, \"down\", keyComboDown ] );\n\t\t\t\t\toffkey( [ key, \"up\", keyComboUp ] );\n\t\t\t\t}\n\t\t\t\tfn( e );\n\t\t\t}\n\t\t}\n\n\t\tfunction keyComboUp( e ) {\n\t\t\tallKeys[ i ] = false;\n\t\t}\n\t}\n\n\t// OFFKEYCOMBO - Remove key combination listener\n\tpi._.addCommand( \"offkeyCombo\", offkeyCombo, false, false, [ \"keys\", \"fn\" ] );\n\n\tfunction offkeyCombo( args ) {\n\t\tconst keys = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\n\t\tif( !pi.util.isArray( keys ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst comboId = keys.join( \"+\" );\n\n\t\tif( !m_onKeyCombos[ comboId ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor( let i = m_onKeyCombos[ comboId ].length - 1; i >= 0; i-- ) {\n\t\t\tconst combo = m_onKeyCombos[ comboId ][ i ];\n\n\t\t\tif( !fn || combo.fn === fn ) {\n\n\t\t\t\t// Remove all individual key listeners for this combo\n\t\t\t\tfor( let j = 0; j < combo.keyData.length; j++ ) {\n\t\t\t\t\tconst kd = combo.keyData[ j ];\n\t\t\t\t\toffkey( [ kd.key, \"down\", kd.keyComboDown ] );\n\t\t\t\t\toffkey( [ kd.key, \"up\", kd.keyComboUp ] );\n\t\t\t\t}\n\n\t\t\t\tm_onKeyCombos[ comboId ].splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\tif( m_onKeyCombos[ comboId ].length === 0 ) {\n\t\t\tdelete m_onKeyCombos[ comboId ];\n\t\t}\n\t}\n\n\t// INPUT - Get user text input with prompt\n\tpi._.addCommand( \"input\", input, false, true, [\n\t\t\"prompt\", \"callback\", \"isNumber\", \"isInteger\", \"allowNegative\"\n\t] );\n\n\tfunction input( screenData, args ) {\n\t\tconst prompt = args[ 0 ] || \"\";\n\t\tconst callback = args[ 1 ];\n\t\tconst isNumber = !!args[ 2 ];\n\t\tconst isInteger = !!args[ 3 ];\n\t\tconst allowNegative = args[ 4 ] !== false;\n\n\t\tif( typeof prompt !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"input: prompt must be a string\" );\n\t\t\terror.code = \"INVALID_PROMPT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( callback != null && !pi.util.isFunction( callback ) ) {\n\t\t\tconst error = new TypeError( \"input: callback must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Create promise for async/await support\n\t\tlet resolvePromise, rejectPromise;\n\t\tconst promise = new Promise( ( resolve, reject ) => {\n\t\t\tresolvePromise = resolve;\n\t\t\trejectPromise = reject;\n\t\t} );\n\n\t\tconst inputData = {\n\t\t\t\"prompt\": prompt,\n\t\t\t\"isNumber\": isNumber,\n\t\t\t\"isInteger\": isInteger,\n\t\t\t\"allowNegative\": allowNegative,\n\t\t\t\"val\": \"\",\n\t\t\t\"callback\": callback,\n\t\t\t\"resolve\": resolvePromise,\n\t\t\t\"reject\": rejectPromise,\n\t\t\t\"screenData\": screenData\n\t\t};\n\n\t\tm_inputQueue.push( inputData );\n\n\t\t// Start input collection if this is the first input\n\t\tif( m_inputQueue.length === 1 ) {\n\t\t\tstartInputCollection();\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tfunction startInputCollection() {\n\t\tstartKeyboard();\n\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tif( !input ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset blinking cursor state\n\t\tm_promptLastTime = Date.now();\n\t\tm_promptBackground = null;\n\t\tm_promptBackgroundWidth = 0;\n\n\t\t// Start blinking cursor interval\n\t\tif( !m_promptInterval ) {\n\t\t\tm_promptInterval = setInterval( showPrompt, 100 );\n\t\t}\n\n\t\t// Listen for keyboard input\n\t\tonkey( [ null, \"down\", collectInput, false ] );\n\t}\n\n\tfunction collectInput( event ) {\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tif( !input ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet removeLastChar = false;\n\n\t\tif( event.key === \"Enter\" ) {\n\n\t\t\t// Enter key pressed - finish input\n\t\t\tfinishInput( input );\n\n\t\t} else if( event.key === \"Backspace\" ) {\n\n\t\t\t// Backspace - remove last character\n\t\t\tif( input.val.length > 0 ) {\n\t\t\t\tinput.val = input.val.substring( 0, input.val.length - 1 );\n\t\t\t}\n\n\t\t} else if( event.key && event.key.length === 1 ) {\n\n\t\t\t// Handle +/- for numbers\n\t\t\tif( input.isNumber && input.allowNegative ) {\n\t\t\t\tif( event.key === \"-\" && input.val.length === 0 ) {\n\t\t\t\t\tinput.val = \"-\";\n\t\t\t\t\treturn;\n\t\t\t\t} else if( event.key === \"+\" && input.val.charAt( 0 ) === \"-\" ) {\n\t\t\t\t\tinput.val = input.val.substring( 1 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add character\n\t\t\tinput.val += event.key;\n\n\t\t\t// Validate number input\n\t\t\tif( input.isNumber ) {\n\t\t\t\tif( isNaN( Number( input.val ) ) ) {\n\t\t\t\t\tremoveLastChar = true;\n\t\t\t\t} else if( input.isInteger && event.key === \".\" ) {\n\t\t\t\t\tremoveLastChar = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove invalid character\n\t\tif( removeLastChar ) {\n\t\t\tinput.val = input.val.substring( 0, input.val.length - 1 );\n\t\t}\n\n\t\t// Update display\n\t\tshowPrompt();\n\t}\n\n\tfunction showPrompt( hideCursor ) {\n\t\tif( m_inputQueue.length === 0 || m_inputQueueIndex >= m_inputQueue.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tconst screenData = input.screenData;\n\n\t\t// Build message\n\t\tlet msg = input.prompt + input.val;\n\n\t\t// Blink cursor every half second\n\t\tconst now = Date.now();\n\t\tif( now - m_promptLastTime > 500 ) {\n\t\t\tm_promptBlink = !m_promptBlink;\n\t\t\tm_promptLastTime = now;\n\t\t}\n\n\t\tif( m_promptBlink && !hideCursor ) {\n\t\t\tmsg += screenData.printCursor.prompt;\n\t\t}\n\n\t\t// Check if need to scroll first\n\t\tlet pos = piData.commands.getPos( screenData );\n\t\tif( pos.row >= piData.commands.getRows( screenData ) ) {\n\t\t\tpiData.commands.print( screenData, [ \"\", false ] );\n\t\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row - 1 ] );\n\t\t\tpos = piData.commands.getPos( screenData );\n\t\t}\n\n\t\t// Get the background pixels\n\t\tconst posPx = piData.commands.getPosPx( screenData );\n\t\tconst width = ( msg.length + 1 ) * screenData.printCursor.font.width;\n\t\tconst height = screenData.printCursor.font.height;\n\n\t\t// If there is no background, save it\n\t\tif( !m_promptBackground ) {\n\t\t\tm_promptBackground = piData.commands.get( screenData,\n\t\t\t\t[ posPx.x, posPx.y, posPx.x + width, posPx.y + height ]\n\t\t\t);\n\t\t} else if( m_promptBackgroundWidth < width ) {\n\n\t\t\t// We have a background but we need a bigger background\n\t\t\tpiData.commands.put( screenData,\n\t\t\t\t[ m_promptBackground, posPx.x, posPx.y, true ]\n\t\t\t);\n\t\t\tm_promptBackground = piData.commands.get( screenData,\n\t\t\t\t[ posPx.x, posPx.y, posPx.x + width, posPx.y + height ]\n\t\t\t);\n\t\t} else {\n\n\t\t\t// Restore the background\n\t\t\tpiData.commands.put( screenData,\n\t\t\t\t[ m_promptBackground, posPx.x, posPx.y, true ]\n\t\t\t);\n\t\t}\n\n\t\t// Store the background width for later use\n\t\tm_promptBackgroundWidth = width;\n\n\t\t// Print the prompt + input + cursor\n\t\tpiData.commands.print( screenData, [ msg, true ] );\n\n\t\t// Reset cursor position\n\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row ] );\n\n\t\tpiData.commands.render( screenData );\n\t}\n\n\tfunction finishInput( input ) {\n\n\t\t// Show prompt one last time without cursor\n\t\tshowPrompt( true );\n\n\t\t// Stop blinking cursor\n\t\tif( m_promptInterval ) {\n\t\t\tclearInterval( m_promptInterval );\n\t\t\tm_promptInterval = null;\n\t\t}\n\n\t\t// Clear background\n\t\tm_promptBackground = null;\n\t\tm_promptBackgroundWidth = 0;\n\n\t\t// Remove input listener\n\t\toffkey( [ null, \"down\", collectInput ] );\n\n\t\t// Process and validate input\n\t\tprocessInputValue( input );\n\n\t\t// Print newline\n\t\tpiData.commands.print( input.screenData, [ \"\" ] );\n\n\t\t// Call callback if provided\n\t\tif( input.callback ) {\n\t\t\tinput.callback( input.val );\n\t\t}\n\n\t\t// Resolve promise\n\t\tinput.resolve( input.val );\n\n\t\t// Move to next input in queue\n\t\tm_inputQueueIndex++;\n\t\tif( m_inputQueueIndex >= m_inputQueue.length ) {\n\t\t\tm_inputQueue = [];\n\t\t\tm_inputQueueIndex = 0;\n\t\t} else {\n\t\t\tstartInputCollection();\n\t\t}\n\t}\n\n\tfunction processInputValue( input ) {\n\t\tif( input.isNumber ) {\n\t\t\tif( input.val === \"\" || input.val === \"-\" ) {\n\t\t\t\tinput.val = 0;\n\t\t\t} else {\n\t\t\t\tinput.val = Number( input.val );\n\t\t\t\tif( input.isInteger ) {\n\t\t\t\t\tinput.val = Math.floor( input.val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// CANCELINPUT - Cancel active input request\n\tpi._.addCommand( \"cancelInput\", cancelInput, false, true, [] );\n\n\tfunction cancelInput( screenData ) {\n\n\t\t// Clear all inputs\n\t\tfor( let i = m_inputQueue.length - 1; i >= 0; i-- ) {\n\t\t\tif( m_inputQueue[ i ].screenData === screenData ) {\n\t\t\t\tm_inputQueue[ i ].reject( new Error( \"Input cancelled\" ) );\n\t\t\t\tm_inputQueue.splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\t// Stop prompt interval\n\t\tif( m_promptInterval ) {\n\t\t\tclearInterval( m_promptInterval );\n\t\t\tm_promptInterval = null;\n\t\t}\n\n\t\t// Remove input listener\n\t\toffkey( [ null, \"down\", collectInput ] );\n\n\t\tm_inputQueueIndex = 0;\n\t}\n\n\t// SETINPUTCURSOR - Set the cursor character for input prompt\n\tpi._.addCommand( \"setInputCursor\", setInputCursor, false, true, [ \"cursor\" ] );\n\tpi._.addSetting( \"inputCursor\", setInputCursor, true, [ \"cursor\" ] );\n\n\tfunction setInputCursor( screenData, args ) {\n\t\tlet cursor = args[ 0 ];\n\n\t\tif( pi.util.isInteger( cursor ) ) {\n\t\t\tcursor = String.fromCharCode( cursor );\n\t\t}\n\n\t\tif( typeof cursor !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"setInputCursor: cursor must be a string or integer\" );\n\t\t\terror.code = \"INVALID_CURSOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst font = screenData.printCursor.font;\n\n\t\tif( font.mode === \"pixel\" ) {\n\t\t\t// Check if character exists in pixel font charset\n\t\t\tif( font.charset ) {\n\t\t\t\tlet badChar = true;\n\t\t\t\tfor( let i = 0; i < font.charset.length; i++ ) {\n\t\t\t\t\tif( font.charset.charAt( i ) === cursor ) {\n\t\t\t\t\t\tbadChar = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( badChar ) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`setInputCursor: cursor \"${cursor}\" not found in current font charset`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tscreenData.printCursor.prompt = cursor;\n\t}\n}\n\n", "/**\n * Pi.js - Mouse Input Module\n * \n * Handles mouse events, position tracking, button states, and event listeners.\n * \n * @module modules/mouse\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// STARTMOUSE - Start mouse event tracking\n\tpi._.addCommand( \"startMouse\", startMouse, false, true, [] );\n\n\tfunction startMouse( screenData ) {\n\t\tif( !screenData.mouseStarted ) {\n\t\t\tscreenData.canvas.addEventListener( \"mousemove\", mouseMove );\n\t\t\tscreenData.canvas.addEventListener( \"mousedown\", mouseDown );\n\t\t\tscreenData.canvas.addEventListener( \"mouseup\", mouseUp );\n\t\t\tscreenData.canvas.addEventListener( \"contextmenu\", onContextMenu );\n\t\t\tscreenData.mouseStarted = true;\n\t\t}\n\t}\n\n\t// STOPMOUSE - Stop mouse event tracking\n\tpi._.addCommand( \"stopMouse\", stopMouse, false, true, [] );\n\n\tfunction stopMouse( screenData ) {\n\t\tif( screenData.mouseStarted ) {\n\t\t\tscreenData.canvas.removeEventListener( \"mousemove\", mouseMove );\n\t\t\tscreenData.canvas.removeEventListener( \"mousedown\", mouseDown );\n\t\t\tscreenData.canvas.removeEventListener( \"mouseup\", mouseUp );\n\t\t\tscreenData.canvas.removeEventListener( \"contextmenu\", onContextMenu );\n\t\t\tscreenData.mouseStarted = false;\n\t\t}\n\t}\n\n\tfunction mouseMove( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"move\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction mouseDown( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"down\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\", getMouse( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"down\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction mouseUp( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"up\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\", getMouse( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"up\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction onContextMenu( e ) {\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n\n\tfunction updateMouse( screenData, e, eventType ) {\n\t\tconst rect = screenData.canvas.getBoundingClientRect();\n\t\tconst scaleX = screenData.width / rect.width;\n\t\tconst scaleY = screenData.height / rect.height;\n\n\t\tscreenData.mouse.x = Math.floor( ( e.clientX - rect.left ) * scaleX );\n\t\tscreenData.mouse.y = Math.floor( ( e.clientY - rect.top ) * scaleY );\n\t\tscreenData.mouse.offsetX = e.offsetX;\n\t\tscreenData.mouse.offsetY = e.offsetY;\n\t\tscreenData.mouse.button = e.button;\n\t\tscreenData.mouse.buttons = e.buttons;\n\t\tscreenData.mouse.eventType = eventType;\n\n\t\tscreenData.lastEvent = \"mouse\";\n\t}\n\n\tfunction getMouse( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.mouse.x,\n\t\t\t\"y\": screenData.mouse.y,\n\t\t\t\"offsetX\": screenData.mouse.offsetX,\n\t\t\t\"offsetY\": screenData.mouse.offsetY,\n\t\t\t\"button\": screenData.mouse.button,\n\t\t\t\"buttons\": screenData.mouse.buttons,\n\t\t\t\"eventType\": screenData.mouse.eventType\n\t\t};\n\t}\n\n\t// INMOUSE - Get mouse state\n\tpi._.addCommand( \"inmouse\", inmouse, false, true, [] );\n\n\tfunction inmouse( screenData ) {\n\t\tpiData.commands.startMouse( screenData );\n\t\treturn getMouse( screenData );\n\t}\n\n\t// ONMOUSE - Register mouse event listener\n\tpi._.addCommand( \"onmouse\", onmouse, false, true, [ \"mode\", \"fn\", \"once\" ] );\n\n\tfunction onmouse( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"down\";\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tpiData.commands.startMouse( screenData );\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onmouse: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !screenData.onMouseEventListeners ) {\n\t\t\tscreenData.onMouseEventListeners = {};\n\t\t\tscreenData.mouseEventListenersActive = 0;\n\t\t}\n\n\t\tif( !screenData.onMouseEventListeners[ mode ] ) {\n\t\t\tscreenData.onMouseEventListeners[ mode ] = [];\n\t\t}\n\n\t\tscreenData.onMouseEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\tscreenData.mouseEventListenersActive++;\n\t}\n\n\t// OFFMOUSE - Remove mouse event listener\n\tpi._.addCommand( \"offmouse\", offmouse, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offmouse( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"down\";\n\t\tconst fn = args[ 1 ];\n\n\t\tif( screenData.onMouseEventListeners && screenData.onMouseEventListeners[ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tconst beforeLen = screenData.onMouseEventListeners[ mode ].length;\n\t\t\t\tscreenData.onMouseEventListeners[ mode ] = \n\t\t\t\t\tscreenData.onMouseEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\tscreenData.mouseEventListenersActive -= \n\t\t\t\t\tbeforeLen - screenData.onMouseEventListeners[ mode ].length;\n\t\t\t} else {\n\t\t\t\tscreenData.mouseEventListenersActive -= \n\t\t\t\t\tscreenData.onMouseEventListeners[ mode ].length;\n\t\t\t\tscreenData.onMouseEventListeners[ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// TRIGGEREVENTI STENERS - Helper to trigger event listeners\n\tpi._.addCommand( \"triggerEventListeners\", triggerEventListeners, true, false );\n\n\tfunction triggerEventListeners( mode, data, listeners, extraMode ) {\n\t\tif( !listeners || !listeners[ mode ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor( let i = listeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\tconst listener = listeners[ mode ][ i ];\n\t\t\tlistener.fn( data, extraMode );\n\t\t\tif( listener.once ) {\n\t\t\t\tlisteners[ mode ].splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t// GETMOUSE - Get mouse state (internal helper)\n\tpi._.addCommand( \"getMouse\", getMouse, true, true, [] );\n\n\tfunction getMouse( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.mouse.x,\n\t\t\t\"y\": screenData.mouse.y,\n\t\t\t\"lastX\": screenData.mouse.lastX,\n\t\t\t\"lastY\": screenData.mouse.lastY,\n\t\t\t\"buttons\": screenData.mouse.buttons,\n\t\t\t\"action\": screenData.mouse.eventType,\n\t\t\t\"type\": \"mouse\"\n\t\t};\n\t}\n\n\t// INPRESS - Get press state (mouse or touch)\n\tpi._.addCommand( \"inpress\", inpress, false, true, [] );\n\n\tfunction inpress( screenData ) {\n\n\t\t// Activate the mouse and touch event listeners\n\t\tpiData.commands.startMouse( screenData );\n\t\tpiData.commands.startTouch( screenData );\n\n\t\tif( screenData.lastEvent === \"touch\" ) {\n\t\t\treturn piData.commands.getTouchPress( screenData );\n\t\t}\n\n\t\treturn piData.commands.getMouse( screenData );\n\t}\n\n\t// ONPRESS - Register press event listener\n\tpi._.addCommand( \"onpress\", onpress, false, true,\n\t\t[ \"mode\", \"fn\", \"once\", \"hitBox\", \"customData\" ]\n\t);\n\n\tfunction onpress( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\t\tconst once = args[ 2 ];\n\t\tconst hitBox = args[ 3 ];\n\t\tconst customData = args[ 4 ];\n\n\t\tconst isValid = piData.commands.onevent(\n\t\t\tmode, fn, once, hitBox, [ \"down\", \"up\", \"move\" ], \"onpress\",\n\t\t\tscreenData.onPressEventListeners, null, null, customData\n\t\t);\n\n\t\t// Activate the mouse and touch event listeners\n\t\tif( isValid ) {\n\t\t\tpiData.commands.startMouse( screenData );\n\t\t\tpiData.commands.startTouch( screenData );\n\t\t\tscreenData.pressEventListenersActive += 1;\n\t\t}\n\t}\n\n\t// OFFPRESS - Remove press event listener\n\tpi._.addCommand( \"offpress\", offpress, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offpress( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\n\t\tconst isValid = piData.commands.offevent(\n\t\t\tmode, fn, [ \"down\", \"up\", \"move\" ], \"offpress\",\n\t\t\tscreenData.onPressEventListeners\n\t\t);\n\n\t\tif( isValid ) {\n\t\t\tif( fn == null ) {\n\t\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t\t} else {\n\t\t\t\tscreenData.pressEventListenersActive -= 1;\n\t\t\t\tif( screenData.pressEventListenersActive < 0 ) {\n\t\t\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ONCLICK - Register click event listener\n\tpi._.addCommand( \"onclick\", onclick, false, true,\n\t\t[ \"fn\", \"once\", \"hitBox\", \"customData\" ]\n\t);\n\n\tfunction onclick( screenData, args ) {\n\t\tconst fn = args[ 0 ];\n\t\tconst once = args[ 1 ];\n\t\tlet hitBox = args[ 2 ];\n\t\tconst customData = args[ 3 ];\n\n\t\tif( hitBox == null ) {\n\t\t\thitBox = {\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0,\n\t\t\t\t\"width\": piData.commands.width( screenData ),\n\t\t\t\t\"height\": piData.commands.height( screenData )\n\t\t\t};\n\t\t}\n\n\t\tconst isValid = piData.commands.onevent(\n\t\t\t\"click\", fn, once, hitBox, [ \"click\" ], \"onclick\",\n\t\t\tscreenData.onClickEventListeners, null, null, customData\n\t\t);\n\n\t\t// Activate the mouse and touch event listeners\n\t\tif( isValid ) {\n\t\t\tpiData.commands.startMouse( screenData );\n\t\t\tpiData.commands.startTouch( screenData );\n\t\t\tscreenData.clickEventListenersActive += 1;\n\t\t}\n\t}\n\n\t// OFFCLICK - Remove click event listener\n\tpi._.addCommand( \"offclick\", offclick, false, true, [ \"fn\" ] );\n\n\tfunction offclick( screenData, args ) {\n\t\tconst fn = args[ 0 ];\n\n\t\tconst isValid = piData.commands.offevent(\n\t\t\t\"click\", fn, [ \"click\" ], \"offclick\",\n\t\t\tscreenData.onClickEventListeners\n\t\t);\n\n\t\tif( isValid ) {\n\t\t\tif( fn == null ) {\n\t\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t\t} else {\n\t\t\t\tscreenData.clickEventListenersActive -= 1;\n\t\t\t\tif( screenData.clickEventListenersActive < 0 ) {\n\t\t\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// SETENABLECONTEXTMENU - Enable/disable right-click context menu\n\tpi._.addCommand( \"setEnableContextMenu\", setEnableContextMenu, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"enableContextMenu\", setEnableContextMenu, true, [ \"isEnabled\" ] );\n\n\tfunction setEnableContextMenu( screenData, args ) {\n\t\tscreenData.isContextMenuEnabled = !!args[ 0 ];\n\n\t\t// Activate the mouse event listeners\n\t\tstartMouse( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Touch Input Module\n * \n * Handles touch events, multi-touch support, and event listeners.\n * \n * @module modules/touch\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// STARTTOUCH - Start touch event tracking\n\tpi._.addCommand( \"startTouch\", startTouch, false, true, [] );\n\n\tfunction startTouch( screenData ) {\n\t\tif( !screenData.touchStarted ) {\n\t\t\tscreenData.canvas.addEventListener( \"touchstart\", touchStart );\n\t\t\tscreenData.canvas.addEventListener( \"touchmove\", touchMove );\n\t\t\tscreenData.canvas.addEventListener( \"touchend\", touchEnd );\n\t\t\tscreenData.canvas.addEventListener( \"touchcancel\", touchEnd );\n\t\t\tscreenData.touchStarted = true;\n\t\t}\n\t}\n\n\t// STOPTOUCH - Stop touch event tracking\n\tpi._.addCommand( \"stopTouch\", stopTouch, false, true, [] );\n\n\tfunction stopTouch( screenData ) {\n\t\tif( screenData.touchStarted ) {\n\t\t\tscreenData.canvas.removeEventListener( \"touchstart\", touchStart );\n\t\t\tscreenData.canvas.removeEventListener( \"touchmove\", touchMove );\n\t\t\tscreenData.canvas.removeEventListener( \"touchend\", touchEnd );\n\t\t\tscreenData.canvas.removeEventListener( \"touchcancel\", touchEnd );\n\t\t\tscreenData.touchStarted = false;\n\t\t}\n\t}\n\n\tfunction touchStart( e ) {\n\t\tpiData.isTouchScreen = true;\n\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"start\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"start\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\n\t\t\t// This will prevent mouse down event from firing\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\",\n\t\t\t\tgetTouchPress( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"down\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction touchMove( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"move\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\tfunction touchEnd( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"end\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"end\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\",\n\t\t\t\tgetTouchPress( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"up\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction updateTouch( screenData, e, eventType ) {\n\t\tconst rect = screenData.canvas.getBoundingClientRect();\n\t\tconst scaleX = screenData.width / rect.width;\n\t\tconst scaleY = screenData.height / rect.height;\n\n\t\tscreenData.touch.eventType = eventType;\n\t\tscreenData.touch.count = e.touches.length;\n\t\tscreenData.touch.touches = [];\n\n\t\tfor( let i = 0; i < e.touches.length; i++ ) {\n\t\t\tconst touch = e.touches[ i ];\n\t\t\tscreenData.touch.touches.push( {\n\t\t\t\t\"x\": Math.floor( ( touch.clientX - rect.left ) * scaleX ),\n\t\t\t\t\"y\": Math.floor( ( touch.clientY - rect.top ) * scaleY ),\n\t\t\t\t\"identifier\": touch.identifier\n\t\t\t} );\n\t\t}\n\n\t\t// Update primary touch (first touch)\n\t\tif( screenData.touch.touches.length > 0 ) {\n\t\t\tscreenData.touch.x = screenData.touch.touches[ 0 ].x;\n\t\t\tscreenData.touch.y = screenData.touch.touches[ 0 ].y;\n\t\t}\n\n\t\tscreenData.lastEvent = \"touch\";\n\t}\n\n\tfunction getTouch( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.touch.x,\n\t\t\t\"y\": screenData.touch.y,\n\t\t\t\"count\": screenData.touch.count,\n\t\t\t\"touches\": screenData.touch.touches.slice(),\n\t\t\t\"eventType\": screenData.touch.eventType\n\t\t};\n\t}\n\n\tfunction getTouchPress( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.touch.x,\n\t\t\t\"y\": screenData.touch.y,\n\t\t\t\"eventType\": screenData.touch.eventType,\n\t\t\t\"inputType\": \"touch\"\n\t\t};\n\t}\n\n\t// INTOUCH - Get touch state\n\tpi._.addCommand( \"intouch\", intouch, false, true, [] );\n\n\tfunction intouch( screenData ) {\n\t\tpiData.commands.startTouch( screenData );\n\t\treturn getTouch( screenData );\n\t}\n\n\t// ONTOUCH - Register touch event listener\n\tpi._.addCommand( \"ontouch\", ontouch, false, true, [ \"mode\", \"fn\", \"once\" ] );\n\n\tfunction ontouch( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"start\";\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tpiData.commands.startTouch( screenData );\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"ontouch: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !screenData.onTouchEventListeners ) {\n\t\t\tscreenData.onTouchEventListeners = {};\n\t\t\tscreenData.touchEventListenersActive = 0;\n\t\t}\n\n\t\tif( !screenData.onTouchEventListeners[ mode ] ) {\n\t\t\tscreenData.onTouchEventListeners[ mode ] = [];\n\t\t}\n\n\t\tscreenData.onTouchEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\tscreenData.touchEventListenersActive++;\n\t}\n\n\t// OFFTOUCH - Remove touch event listener\n\tpi._.addCommand( \"offtouch\", offtouch, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offtouch( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"start\";\n\t\tconst fn = args[ 1 ];\n\n\t\tif( screenData.onTouchEventListeners && screenData.onTouchEventListeners[ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tconst beforeLen = screenData.onTouchEventListeners[ mode ].length;\n\t\t\t\tscreenData.onTouchEventListeners[ mode ] = \n\t\t\t\t\tscreenData.onTouchEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\tscreenData.touchEventListenersActive -= \n\t\t\t\t\tbeforeLen - screenData.onTouchEventListeners[ mode ].length;\n\t\t\t} else {\n\t\t\t\tscreenData.touchEventListenersActive -= \n\t\t\t\t\tscreenData.onTouchEventListeners[ mode ].length;\n\t\t\t\tscreenData.onTouchEventListeners[ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// GETTOUCHPRESS - Get touch press state (internal helper)\n\tpi._.addCommand( \"getTouchPress\", getTouchPress, true, true, [] );\n\n\tfunction getTouchPress( screenData ) {\n\t\tfunction copyTouches( touches, touchArr, action ) {\n\t\t\tfor( const i in touches ) {\n\t\t\t\tconst touch = touches[ i ];\n\t\t\t\tconst touchData = {\n\t\t\t\t\t\"x\": touch.x,\n\t\t\t\t\t\"y\": touch.y,\n\t\t\t\t\t\"id\": touch.id,\n\t\t\t\t\t\"lastX\": touch.lastX,\n\t\t\t\t\t\"lastY\": touch.lastY,\n\t\t\t\t\t\"action\": touch.action,\n\t\t\t\t\t\"type\": \"touch\"\n\t\t\t\t};\n\n\t\t\t\tif( action !== undefined ) {\n\t\t\t\t\ttouch.action = action;\n\t\t\t\t}\n\n\t\t\t\ttouchArr.push( touchData );\n\t\t\t}\n\t\t}\n\n\t\tconst touchArr = [];\n\n\t\tcopyTouches( screenData.touches, touchArr );\n\n\t\tif( touchArr.length === 0 ) {\n\t\t\tcopyTouches( screenData.lastTouches, touchArr, \"up\" );\n\t\t}\n\n\t\tif( touchArr.length > 0 ) {\n\t\t\tconst touchData = touchArr[ 0 ];\n\t\t\tif( touchData.action === \"up\" ) {\n\t\t\t\ttouchData.buttons = 0;\n\t\t\t} else {\n\t\t\t\ttouchData.buttons = 1;\n\t\t\t}\n\n\t\t\ttouchData.touches = touchArr;\n\t\t\treturn touchData;\n\t\t}\n\n\t\treturn {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"id\": -1,\n\t\t\t\"lastX\": -1,\n\t\t\t\"lastY\": -1,\n\t\t\t\"action\": \"none\",\n\t\t\t\"buttons\": 0,\n\t\t\t\"type\": \"touch\"\n\t\t};\n\t}\n\n\t// SETPINCHZOOM - Enable/disable pinch zoom\n\tpi._.addCommand( \"setPinchZoom\", setPinchZoom, false, false, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"pinchZoom\", setPinchZoom, false, [ \"isEnabled\" ] );\n\n\tfunction setPinchZoom( args ) {\n\t\tconst isEnabled = !!args[ 0 ];\n\n\t\tif( isEnabled ) {\n\t\t\tdocument.body.style.touchAction = \"\";\n\t\t} else {\n\t\t\tdocument.body.style.touchAction = \"none\";\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - Gamepad Input Module\n * \n * Handles gamepad/controller input using the Gamepad API.\n * \n * @module modules/gamepad\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Gamepad state\n\tlet m_controllers = {};\n\tlet m_controllerArr = [];\n\tlet m_events = {};\n\tlet m_gamepadLoopId = null;\n\tconst m_Modes = [\n\t\t\"connect\",\n\t\t\"disconnect\",\n\t\t\"axis\",\n\t\t\"pressed\",\n\t\t\"touched\",\n\t\t\"pressReleased\",\n\t\t\"touchReleased\"\n\t];\n\tlet m_isLooping = false;\n\tconst m_loopInterval = 8;\n\tlet m_axesSensitivity = 0.2;\n\tlet m_init = false;\n\n\tfunction initGamepads() {\n\t\twindow.addEventListener( \"gamepadconnected\", gamepadConnected );\n\t\twindow.addEventListener( \"gamepaddisconnected\", gamepadDisconnected );\n\t\tm_init = true;\n\t}\n\n\tfunction gamepadConnected( e ) {\n\t\tm_controllers[ e.gamepad.index ] = e.gamepad;\n\t\te.gamepad.controllerIndex = m_controllerArr.length;\n\t\tm_controllerArr.push( e.gamepad );\n\t\tupdateController( e.gamepad );\n\n\t\t// Trigger connect event\n\t\ttriggerGamepadEvent( \"connect\", e.gamepad.index );\n\t}\n\n\tfunction gamepadDisconnected( e ) {\n\t\t// Trigger disconnect event\n\t\ttriggerGamepadEvent( \"disconnect\", e.gamepad.index );\n\n\t\tm_controllerArr.splice(\n\t\t\tm_controllers[ e.gamepad.index ].controllerIndex, 1\n\t\t);\n\t\tdelete m_controllers[ e.gamepad.index ];\n\t}\n\n\tfunction updateControllers() {\n\t\tconst gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n\t\tfor( let i = 0; i < gamepads.length; i++ ) {\n\t\t\tif( gamepads[ i ] && m_controllers[ i ] ) {\n\t\t\t\tupdateController( gamepads[ i ] );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateController( gamepad ) {\n\t\tconst oldGamepad = m_controllers[ gamepad.index ];\n\n\t\t// Track button states\n\t\tif( !oldGamepad.buttons ) {\n\t\t\toldGamepad.buttons = [];\n\t\t}\n\t\tif( !oldGamepad.axes ) {\n\t\t\toldGamepad.axes = [];\n\t\t}\n\n\t\t// Check buttons\n\t\tfor( let i = 0; i < gamepad.buttons.length; i++ ) {\n\t\t\tconst button = gamepad.buttons[ i ];\n\t\t\tconst oldButton = oldGamepad.buttons[ i ] || { \"pressed\": false, \"touched\": false };\n\n\t\t\tif( button.pressed && !oldButton.pressed ) {\n\t\t\t\ttriggerGamepadEvent( \"pressed\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( !button.pressed && oldButton.pressed ) {\n\t\t\t\ttriggerGamepadEvent( \"pressReleased\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( button.touched && !oldButton.touched ) {\n\t\t\t\ttriggerGamepadEvent( \"touched\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( !button.touched && oldButton.touched ) {\n\t\t\t\ttriggerGamepadEvent( \"touchReleased\", gamepad.index, i );\n\t\t\t}\n\n\t\t\toldGamepad.buttons[ i ] = {\n\t\t\t\t\"pressed\": button.pressed,\n\t\t\t\t\"touched\": button.touched,\n\t\t\t\t\"value\": button.value\n\t\t\t};\n\t\t}\n\n\t\t// Check axes\n\t\tfor( let i = 0; i < gamepad.axes.length; i++ ) {\n\t\t\tconst axisValue = gamepad.axes[ i ];\n\t\t\tconst oldValue = oldGamepad.axes[ i ] || 0;\n\n\t\t\tif( Math.abs( axisValue - oldValue ) > m_axesSensitivity ) {\n\t\t\t\ttriggerGamepadEvent( \"axis\", gamepad.index, i, axisValue );\n\t\t\t}\n\n\t\t\toldGamepad.axes[ i ] = axisValue;\n\t\t}\n\n\t\tm_controllers[ gamepad.index ] = oldGamepad;\n\t}\n\n\tfunction triggerGamepadEvent( mode, gamepadIndex, item, value ) {\n\t\tif( !m_events[ gamepadIndex ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modeEvents = m_events[ gamepadIndex ][ mode ];\n\t\tif( !modeEvents ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Trigger item-specific listeners\n\t\tif( item !== undefined && modeEvents[ item ] ) {\n\t\t\tfor( let i = modeEvents[ item ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = modeEvents[ item ][ i ];\n\t\t\t\tlistener.fn( {\n\t\t\t\t\t\"gamepadIndex\": gamepadIndex,\n\t\t\t\t\t\"mode\": mode,\n\t\t\t\t\t\"item\": item,\n\t\t\t\t\t\"value\": value,\n\t\t\t\t\t\"customData\": listener.customData\n\t\t\t\t} );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tmodeEvents[ item ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger \"any item\" listeners (*)\n\t\tif( modeEvents[ \"*\" ] ) {\n\t\t\tfor( let i = modeEvents[ \"*\" ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = modeEvents[ \"*\" ][ i ];\n\t\t\t\tlistener.fn( {\n\t\t\t\t\t\"gamepadIndex\": gamepadIndex,\n\t\t\t\t\t\"mode\": mode,\n\t\t\t\t\t\"item\": item,\n\t\t\t\t\t\"value\": value,\n\t\t\t\t\t\"customData\": listener.customData\n\t\t\t\t} );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tmodeEvents[ \"*\" ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// INGAMEPADS - Get all connected gamepads\n\tpi._.addCommand( \"ingamepads\", ingamepads, false, false, [] );\n\n\tfunction ingamepads() {\n\t\tif( !m_init ) {\n\t\t\tinitGamepads();\n\t\t}\n\t\tif( m_controllers ) {\n\t\t\tupdateControllers();\n\t\t}\n\t\treturn m_controllerArr;\n\t}\n\n\t// ONGAMEPAD - Register gamepad event listener\n\tpi._.addCommand( \"ongamepad\", ongamepad, false, false,\n\t\t[ \"gamepadIndex\", \"mode\", \"item\", \"fn\", \"once\", \"customData\" ]\n\t);\n\n\tfunction ongamepad( args ) {\n\t\tif( !m_init ) {\n\t\t\tinitGamepads();\n\t\t}\n\n\t\tconst gamepadIndex = args[ 0 ];\n\t\tconst mode = args[ 1 ];\n\t\tconst item = args[ 2 ];\n\t\tconst fn = args[ 3 ];\n\t\tconst once = !!args[ 4 ];\n\t\tconst customData = args[ 5 ];\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"ongamepad: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( gamepadIndex == null ) {\n\t\t\tconst error = new TypeError( \"ongamepad: gamepadIndex is required\" );\n\t\t\terror.code = \"MISSING_GAMEPAD_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !m_events[ gamepadIndex ] ) {\n\t\t\tm_events[ gamepadIndex ] = {};\n\t\t}\n\t\tif( !m_events[ gamepadIndex ][ mode ] ) {\n\t\t\tm_events[ gamepadIndex ][ mode ] = {};\n\t\t}\n\n\t\tconst itemKey = item !== undefined ? item : \"*\";\n\n\t\tif( !m_events[ gamepadIndex ][ mode ][ itemKey ] ) {\n\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = [];\n\t\t}\n\n\t\tm_events[ gamepadIndex ][ mode ][ itemKey ].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"once\": once,\n\t\t\t\"customData\": customData\n\t\t} );\n\n\t\t// Start polling if not already\n\t\tif( !m_isLooping ) {\n\t\t\tstartGamepadLoop();\n\t\t}\n\t}\n\n\t// OFFGAMEPAD - Remove gamepad event listener\n\tpi._.addCommand( \"offgamepad\", offgamepad, false, false,\n\t\t[ \"gamepadIndex\", \"mode\", \"item\", \"fn\" ]\n\t);\n\n\tfunction offgamepad( args ) {\n\t\tconst gamepadIndex = args[ 0 ];\n\t\tconst mode = args[ 1 ];\n\t\tconst item = args[ 2 ];\n\t\tconst fn = args[ 3 ];\n\n\t\tif( !m_events[ gamepadIndex ] || !m_events[ gamepadIndex ][ mode ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemKey = item !== undefined ? item : \"*\";\n\n\t\tif( m_events[ gamepadIndex ][ mode ][ itemKey ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = \n\t\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction startGamepadLoop() {\n\t\tif( m_isLooping ) {\n\t\t\treturn;\n\t\t}\n\n\t\tm_isLooping = true;\n\n\t\tfunction loop() {\n\t\t\tif( !m_isLooping ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdateControllers();\n\t\t\tm_gamepadLoopId = setTimeout( loop, m_loopInterval );\n\t\t}\n\n\t\tloop();\n\t}\n\n\tfunction stopGamepadLoop() {\n\t\tm_isLooping = false;\n\t\tif( m_gamepadLoopId ) {\n\t\t\tclearTimeout( m_gamepadLoopId );\n\t\t\tm_gamepadLoopId = null;\n\t\t}\n\t}\n\n\t// SETGAMEPADSENSITIVITY - Set axes sensitivity threshold\n\tpi._.addCommand( \"setGamepadSensitivity\", setGamepadSensitivity, false, false,\n\t\t[ \"sensitivity\" ]\n\t);\n\n\tfunction setGamepadSensitivity( args ) {\n\t\tconst sensitivity = args[ 0 ];\n\n\t\tif( isNaN( sensitivity ) || sensitivity < 0 || sensitivity > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setGamepadSensitivity: sensitivity must be between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SENSITIVITY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tm_axesSensitivity = sensitivity;\n\t}\n}\n\n", "/**\n * Pi.js - Sound Module\n * \n * WebAudio-based sound system for loading/playing sound files and generating tones.\n * \n * @module modules/sound\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\n\t// Sound state\n\tlet m_audioPools = {};\n\tlet m_nextAudioId = 0;\n\tlet m_audioContext = null;\n\tlet m_soundPool = {};\n\tlet m_nextSoundId = 0;\n\n\t// CREATEAUDIOPOOL - Create pool of HTML5 Audio elements for sound playback\n\tpi._.addCommand( \"createAudioPool\", createAudioPool, false, false,\n\t\t[ \"src\", \"poolSize\" ]\n\t);\n\n\tfunction createAudioPool( args ) {\n\t\tconst src = args[ 0 ];\n\t\tlet poolSize = args[ 1 ];\n\n\t\t// Validate parameters\n\t\tif( !src ) {\n\t\t\tconst error = new TypeError( \"createAudioPool: No sound source provided\" );\n\t\t\terror.code = \"NO_SOURCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( poolSize == null ) {\n\t\t\tpoolSize = 1;\n\t\t}\n\n\t\tpoolSize = Math.round( poolSize );\n\t\tif( isNaN( poolSize ) || poolSize < 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"createAudioPool: parameter poolSize must be an integer greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_POOL_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Create the audio item\n\t\tconst audioItem = {\n\t\t\t\"pool\": [],\n\t\t\t\"index\": 0\n\t\t};\n\n\t\t// Create the audio pool\n\t\tfor( let i = 0; i < poolSize; i++ ) {\n\n\t\t\t// Create the audio item\n\t\t\tconst audio = new Audio( src );\n\n\t\t\tloadAudio( audioItem, audio );\n\t\t}\n\n\t\t// Add the audio item to the global object\n\t\tconst audioId = \"audioPool_\" + m_nextAudioId;\n\t\tm_audioPools[ audioId ] = audioItem;\n\n\t\t// Increment the last audio id\n\t\tm_nextAudioId += 1;\n\n\t\t// Return the id\n\t\treturn audioId;\n\t}\n\n\tfunction loadAudio( audioItem, audio, retryCount ) {\n\t\tif( retryCount == null ) {\n\t\t\tretryCount = 3;\n\t\t}\n\n\t\tfunction audioReady() {\n\t\t\taudioItem.pool.push( {\n\t\t\t\t\"audio\": audio,\n\t\t\t\t\"timeout\": 0,\n\t\t\t\t\"volume\": 1\n\t\t\t} );\n\t\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\t\tm_piResume();\n\t\t}\n\n\t\tfunction audioError() {\n\t\t\tconst errors = [\n\t\t\t\t\"MEDIA_ERR_ABORTED - fetching process aborted by user\",\n\t\t\t\t\"MEDIA_ERR_NETWORK - error occurred when downloading\",\n\t\t\t\t\"MEDIA_ERR_DECODE - error occurred when decoding\",\n\t\t\t\t\"MEDIA_ERR_SRC_NOT_SUPPORTED - audio/video not supported\"\n\t\t\t];\n\n\t\t\tconst errorCode = audio.error.code;\n\t\t\tconst index = errorCode - 1;\n\n\t\t\tif( index >= 0 && index < errors.length ) {\n\t\t\t\tconsole.warn( `createAudioPool: ${errors[ index ]}` );\n\n\t\t\t\t// Retry loading the audio if allowed\n\t\t\t\tif( retryCount > 0 ) {\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\t\t\t\t\taudio.removeEventListener( \"error\", audioError );\n\t\t\t\t\t\tconst newAudio = new Audio( audio.src );\n\t\t\t\t\t\tloadAudio( audioItem, newAudio, retryCount - 1 );\n\t\t\t\t\t}, 100 );\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn( `createAudioPool: Max retries exceeded for ${audio.src}` );\n\t\t\t\t\tm_piResume();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn( `createAudioPool: unknown error - ${errorCode}` );\n\t\t\t\tm_piResume();\n\t\t\t}\n\t\t}\n\n\t\t// Wait until audio item is loaded\n\t\tif( retryCount === 3 ) {\n\t\t\tm_piWait();\n\t\t}\n\n\t\t// Wait until audio can play\n\t\taudio.addEventListener( \"canplay\", audioReady );\n\n\t\t// If audio has an error\n\t\taudio.addEventListener( \"error\", audioError );\n\t}\n\n\t// DELETEAUDIOPOOL - Delete audio pool and free resources\n\tpi._.addCommand( \"deleteAudioPool\", deleteAudioPool, false, false, [ \"audioId\" ] );\n\n\tfunction deleteAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `deleteAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop and cleanup all audio in pool\n\t\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\t\tconst poolItem = m_audioPools[ audioId ].pool[ i ];\n\t\t\tpoolItem.audio.pause();\n\t\t\tpoolItem.audio.src = \"\";\n\t\t\tclearTimeout( poolItem.timeout );\n\t\t}\n\n\t\tdelete m_audioPools[ audioId ];\n\t}\n\n\t// PLAYAUDIOPOOL - Play sound from audio pool\n\tpi._.addCommand( \"playAudioPool\", playAudioPool, false, false,\n\t\t[ \"audioId\", \"volume\", \"startTime\", \"duration\" ]\n\t);\n\n\tfunction playAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\t\tlet volume = args[ 1 ];\n\t\tlet startTime = args[ 2 ];\n\t\tlet duration = args[ 3 ];\n\n\t\t// Validate audioId\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `playAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\tconst audioItem = m_audioPools[ audioId ];\n\n\t\t// Validate volume\n\t\tif( volume == null ) {\n\t\t\tvolume = 1;\n\t\t}\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: volume needs to be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate startTime\n\t\tif( startTime == null ) {\n\t\t\tstartTime = 0;\n\t\t}\n\n\t\tif( isNaN( startTime ) || startTime < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: startTime needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_START_TIME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate duration\n\t\tif( duration == null ) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tif( isNaN( duration ) || duration < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: duration needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DURATION\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Get the audio player\n\t\tconst poolItem = audioItem.pool[ audioItem.index ];\n\t\tconst audio = poolItem.audio;\n\n\t\t// Set the volume\n\t\taudio.volume = piData.volume * volume;\n\t\tpoolItem.volume = volume;\n\n\t\t// Set the start time of the audio\n\t\taudio.currentTime = startTime;\n\n\t\t// Stop the audio if duration specified\n\t\tif( duration > 0 ) {\n\t\t\tclearTimeout( poolItem.timeout );\n\t\t\tpoolItem.timeout = setTimeout( () => {\n\t\t\t\taudio.pause();\n\t\t\t\taudio.currentTime = 0;\n\t\t\t}, duration * 1000 );\n\t\t}\n\n\t\t// Play the sound\n\t\taudio.play();\n\n\t\t// Increment to next sound in the pool\n\t\taudioItem.index += 1;\n\t\tif( audioItem.index >= audioItem.pool.length ) {\n\t\t\taudioItem.index = 0;\n\t\t}\n\t}\n\n\t// STOPAUDIOPOOL - Stop audio pool playback\n\tpi._.addCommand( \"stopAudioPool\", stopAudioPool, false, false, [ \"audioId\" ] );\n\n\tfunction stopAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\n\t\t// If audioId not provided then stop all audio pools\n\t\tif( audioId == null ) {\n\t\t\tfor( const i in m_audioPools ) {\n\t\t\t\tfor( let j = 0; j < m_audioPools[ i ].pool.length; j++ ) {\n\t\t\t\t\tm_audioPools[ i ].pool[ j ].audio.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate audioId\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `stopAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop current audio pool\n\t\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\t\tm_audioPools[ audioId ].pool[ i ].audio.pause();\n\t\t}\n\t}\n\n\t// SOUND - Play tone by frequency using WebAudio\n\tpi._.addCommand( \"sound\", sound, false, false, [\n\t\t\"frequency\", \"duration\", \"volume\", \"oType\", \"delay\", \"attack\", \"decay\"\n\t] );\n\n\tfunction sound( args ) {\n\t\tlet frequency = Math.round( args[ 0 ] );\n\t\tlet duration = args[ 1 ];\n\t\tlet volume = args[ 2 ];\n\t\tlet oType = args[ 3 ];\n\t\tlet delay = args[ 4 ];\n\t\tlet attack = args[ 5 ];\n\t\tlet decay = args[ 6 ];\n\n\t\t// Validate frequency\n\t\tif( isNaN( frequency ) ) {\n\t\t\tconst error = new TypeError( \"sound: frequency needs to be an integer\" );\n\t\t\terror.code = \"INVALID_FREQUENCY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate duration\n\t\tif( duration == null ) {\n\t\t\tduration = 1;\n\t\t}\n\n\t\tif( isNaN( duration ) || duration < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: duration needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DURATION\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate volume\n\t\tif( volume == null ) {\n\t\t\tvolume = 1;\n\t\t}\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError( \"sound: volume needs to be a number between 0 and 1\" );\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate attack\n\t\tif( attack == null ) {\n\t\t\tattack = 0;\n\t\t}\n\n\t\tif( isNaN( attack ) || attack < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: attack needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ATTACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate delay\n\t\tif( delay == null ) {\n\t\t\tdelay = 0;\n\t\t}\n\n\t\tif( isNaN( delay ) || delay < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: delay needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DELAY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate decay\n\t\tif( decay == null ) {\n\t\t\tdecay = 0.1;\n\t\t}\n\n\t\tif( isNaN( decay ) ) {\n\t\t\tconst error = new TypeError( \"sound: decay needs to be a number\" );\n\t\t\terror.code = \"INVALID_DECAY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate oType\n\t\tif( oType == null ) {\n\t\t\toType = \"triangle\";\n\t\t}\n\n\t\tlet waveTables = null;\n\n\t\t// Check for custom oType\n\t\tif( pi.util.isArray( oType ) ) {\n\t\t\tif(\n\t\t\t\toType.length !== 2 ||\n\t\t\t\toType[ 0 ].length === 0 ||\n\t\t\t\toType[ 1 ].length === 0 ||\n\t\t\t\toType[ 0 ].length !== oType[ 1 ].length\n\t\t\t) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"sound: oType array must be an array with two non empty \" +\n\t\t\t\t\t\"arrays of equal length\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_WAVE_TABLE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\twaveTables = [];\n\n\t\t\t// Look for invalid waveTable values\n\t\t\tfor( let i = 0; i < oType.length; i++ ) {\n\t\t\t\tfor( let j = 0; j < oType[ i ].length; j++ ) {\n\t\t\t\t\tif( isNaN( oType[ i ][ j ] ) ) {\n\t\t\t\t\t\tconst error = new TypeError( \"sound: oType array must only contain numbers\" );\n\t\t\t\t\t\terror.code = \"INVALID_WAVE_VALUE\";\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twaveTables.push( new Float32Array( oType[ i ] ) );\n\t\t\t}\n\n\t\t\toType = \"custom\";\n\t\t} else {\n\n\t\t\tif( typeof oType !== \"string\" ) {\n\t\t\t\tconst error = new TypeError( \"sound: oType needs to be a string or an array\" );\n\t\t\t\terror.code = \"INVALID_TYPE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// Non-custom types\n\t\t\tconst types = [ \"triangle\", \"sine\", \"square\", \"sawtooth\" ];\n\n\t\t\tif( types.indexOf( oType ) === -1 ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"sound: oType is not a valid type. oType must be \" +\n\t\t\t\t\t\"one of the following: triangle, sine, square, sawtooth\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_OSCILLATOR_TYPE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Create an audio context if none exist\n\t\tif( !m_audioContext ) {\n\t\t\tconst context = window.AudioContext || window.webkitAudioContext;\n\t\t\tm_audioContext = new context();\n\t\t}\n\n\t\t// Calculate the stopTime\n\t\tconst stopTime = attack + duration + decay;\n\n\t\treturn piData.commands.createSound(\n\t\t\t\"sound\", m_audioContext, frequency, volume, attack, duration,\n\t\t\tdecay, stopTime, oType, waveTables, delay\n\t\t);\n\t}\n\n\t// CREATESOUND - Internal command to create WebAudio oscillator\n\tpi._.addCommand( \"createSound\", createSound, true, false, [] );\n\n\tfunction createSound(\n\t\tcmdName, audioContext, frequency, volume, attackTime, sustainTime,\n\t\tdecayTime, stopTime, oType, waveTables, delay\n\t) {\n\t\tconst oscillator = audioContext.createOscillator();\n\t\tconst envelope = audioContext.createGain();\n\t\tconst master = audioContext.createGain();\n\n\t\tmaster.gain.value = piData.volume;\n\n\t\toscillator.frequency.value = frequency;\n\t\tif( oType === \"custom\" ) {\n\t\t\tconst real = waveTables[ 0 ];\n\t\t\tconst imag = waveTables[ 1 ];\n\t\t\tconst wave = audioContext.createPeriodicWave( real, imag );\n\t\t\toscillator.setPeriodicWave( wave );\n\t\t} else {\n\t\t\toscillator.type = oType;\n\t\t}\n\n\t\tif( attackTime === 0 ) {\n\t\t\tenvelope.gain.value = volume;\n\t\t} else {\n\t\t\tenvelope.gain.value = 0;\n\t\t}\n\n\t\toscillator.connect( envelope );\n\t\tenvelope.connect( master );\n\t\tmaster.connect( audioContext.destination );\n\n\t\tconst currentTime = audioContext.currentTime + delay;\n\n\t\t// Set the attack\n\t\tif( attackTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ 0, volume ] ),\n\t\t\t\tcurrentTime,\n\t\t\t\tattackTime\n\t\t\t);\n\t\t}\n\n\t\t// Set the sustain\n\t\tif( sustainTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ volume, 0.8 * volume ] ),\n\t\t\t\tcurrentTime + attackTime,\n\t\t\t\tsustainTime\n\t\t\t);\n\t\t}\n\n\t\t// Set the decay\n\t\tif( decayTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ 0.8 * volume, 0.1 * volume, 0 ] ),\n\t\t\t\tcurrentTime + attackTime + sustainTime,\n\t\t\t\tdecayTime\n\t\t\t);\n\t\t}\n\n\t\toscillator.start( currentTime );\n\t\toscillator.stop( currentTime + stopTime );\n\n\t\tconst soundId = \"sound_\" + m_nextSoundId;\n\t\tm_nextSoundId += 1;\n\t\tm_soundPool[ soundId ] = {\n\t\t\t\"oscillator\": oscillator,\n\t\t\t\"master\": master,\n\t\t\t\"audioContext\": audioContext\n\t\t};\n\n\t\t// Delete sound when done\n\t\tsetTimeout( () => {\n\t\t\tdelete m_soundPool[ soundId ];\n\t\t}, ( currentTime + stopTime ) * 1000 );\n\n\t\treturn soundId;\n\t}\n\n\t// STOPSOUND - Stop WebAudio oscillator sound\n\tpi._.addCommand( \"stopSound\", stopSound, false, false, [ \"soundId\" ] );\n\n\tfunction stopSound( args ) {\n\t\tconst soundId = args[ 0 ];\n\n\t\t// If soundId not provided then stop all sounds\n\t\tif( soundId == null ) {\n\t\t\tfor( const i in m_soundPool ) {\n\t\t\t\tm_soundPool[ i ].oscillator.stop( 0 );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate soundId\n\t\tif( !m_soundPool[ soundId ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop current sound\n\t\tm_soundPool[ soundId ].oscillator.stop( 0 );\n\t}\n\n\t// SETVOLUME - Set global volume\n\tpi._.addCommand( \"setVolume\", setVolume, false, false, [ \"volume\" ] );\n\tpi._.addSetting( \"volume\", setVolume, false, [ \"volume\" ] );\n\n\tfunction setVolume( args ) {\n\t\tconst volume = args[ 0 ];\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setVolume: volume needs to be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.volume = volume;\n\n\t\t// Update all active sounds\n\t\tfor( const i in m_soundPool ) {\n\t\t\tif( volume === 0 ) {\n\n\t\t\t\t// Set to near zero exponentially\n\t\t\t\tm_soundPool[ i ].master.gain.exponentialRampToValueAtTime(\n\t\t\t\t\t0.01, m_soundPool[ i ].audioContext.currentTime + 0.1\n\t\t\t\t);\n\n\t\t\t\t// Set to zero one millisecond later\n\t\t\t\tm_soundPool[ i ].master.gain.setValueAtTime(\n\t\t\t\t\t0, m_soundPool[ i ].audioContext.currentTime + 0.11\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_soundPool[ i ].master.gain.exponentialRampToValueAtTime(\n\t\t\t\t\tvolume, m_soundPool[ i ].audioContext.currentTime + 0.1\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Update all audio pools\n\t\tfor( const i in m_audioPools ) {\n\t\t\tfor( const j in m_audioPools[ i ].pool ) {\n\t\t\t\tconst poolItem = m_audioPools[ i ].pool[ j ];\n\t\t\t\tpoolItem.audio.volume = piData.volume * poolItem.volume;\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - PLAY Module\n * \n * QBasic-style PLAY command for music notation.\n * Parses PLAY strings and generates notes using WebAudio.\n * \n * @module modules/play\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Note frequencies (A0-G#9)\n\tconst m_notesData = {\n\t\t\"A\": [ 27.50, 55.00, 110, 220, 440, 880, 1760, 3520, 7040, 14080 ],\n\t\t\"A#\": [ 29.14, 58.27, 116.541, 233.082, 466.164, 932.328, 1864.655, \n\t\t\t3729.31, 7458.62, 14917.24 ],\n\t\t\"B\": [ 30.87, 61.74, 123.471, 246.942, 493.883, 987.767, 1975.533, \n\t\t\t3951.066, 7902.132, 15804.264 ],\n\t\t\"C\": [ 16.35, 32.70, 65.41, 130.813, 261.626, 523.251, 1046.502, \n\t\t\t2093.005, 4186.009, 8372.018 ],\n\t\t\"C#\": [ 17.32, 34.65, 69.296, 138.591, 277.183, 554.365, 1108.731, \n\t\t\t2217.461, 4434.922, 8869.844 ],\n\t\t\"D\": [ 18.35, 36.71, 73.416, 146.832, 293.665, 587.33, 1174.659, \n\t\t\t2349.318, 4698.636, 9397.272 ],\n\t\t\"D#\": [ 19.45, 38.89, 77.782, 155.563, 311.127, 622.254, 1244.508, \n\t\t\t2489.016, 4978.032, 9956.064 ],\n\t\t\"E\": [ 20.60, 41.20, 82.407, 164.814, 329.628, 659.255, 1318.51, \n\t\t\t2637.021, 5274.042, 10548.084 ],\n\t\t\"F\": [ 21.83, 43.65, 87.307, 174.614, 349.228, 698.456, 1396.913, \n\t\t\t2793.826, 5587.652, 11175.304 ],\n\t\t\"F#\": [ 23.12, 46.25, 92.499, 184.997, 369.994, 739.989, 1479.978, \n\t\t\t2959.955, 5919.91, 11839.82 ],\n\t\t\"G\": [ 24.50, 49.00, 97.999, 195.998, 391.995, 783.991, 1567.982, \n\t\t\t3135.964, 6271.928, 12543.856 ],\n\t\t\"G#\": [ 25.96, 51.91, 103.826, 207.652, 415.305, 830.609, 1661.219, \n\t\t\t3322.438, 6644.876, 13289.752 ]\n\t};\n\n\t// Tracks storage\n\tlet m_tracks = {};\n\tlet m_allTracks = [];\n\tlet m_lastTrackId = 0;\n\tlet m_playData = [];\n\n\t// PLAY - Parse and play PLAY string\n\tpi._.addCommand( \"play\", play, false, false, [ \"playString\" ] );\n\n\tfunction play( args ) {\n\t\tlet playString = args[ 0 ];\n\n\t\tif( typeof playString !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"play: playString needs to be a string\" );\n\t\t\terror.code = \"INVALID_PLAY_STRING\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst trackId = createTrack( playString );\n\t\tif( !trackId ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tm_playData = [];\n\t\tplayTrack( trackId );\n\n\t\tm_playData.sort( ( a, b ) => a.time - b.time );\n\n\t\tconst AudioContextClass = window.AudioContext || window.webkitAudioContext;\n\t\tconst audioContext = new AudioContextClass();\n\t\t\n\t\tfor( let i = 0; i < m_playData.length; i++ ) {\n\t\t\tconst playData = m_playData[ i ];\n\t\t\tplayData.track.sounds.push(\n\t\t\t\tpiData.commands.createSound(\n\t\t\t\t\t\"play\", audioContext, playData.frequency, playData.volume,\n\t\t\t\t\tplayData.attackTime, playData.sustainTime, playData.decayTime,\n\t\t\t\t\tplayData.stopTime, playData.oType, playData.waveTables, playData.time\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction createTrack( playString ) {\n\n\t\t// Convert to uppercase and remove spaces\n\t\tplayString = playString.split( /\\s+/ ).join( \"\" ).toUpperCase();\n\n\t\tconst trackId = \"track_\" + m_lastTrackId;\n\t\tm_lastTrackId += 1;\n\n\t\t// Initialize track\n\t\tconst track = {\n\t\t\t\"id\": trackId,\n\t\t\t\"notes\": [],\n\t\t\t\"noteId\": 0,\n\t\t\t\"attackRate\": 0.1,\n\t\t\t\"decayRate\": 0.2,\n\t\t\t\"sustainRate\": 0.65,\n\t\t\t\"fullNote\": false,\n\t\t\t\"tempo\": 60 / 120,\n\t\t\t\"noteLength\": 0.25,\n\t\t\t\"pace\": 0.875,\n\t\t\t\"octave\": 4,\n\t\t\t\"volume\": 1,\n\t\t\t\"type\": \"triangle\",\n\t\t\t\"waveTables\": null,\n\t\t\t\"sounds\": []\n\t\t};\n\n\t\tm_tracks[ trackId ] = track;\n\t\tm_allTracks.push( { \"id\": trackId } );\n\n\t\t// Parse the play string and create notes in one pass\n\t\tlet i = 0;\n\n\t\twhile( i < playString.length ) {\n\t\t\tconst char = playString.charAt( i );\n\n\t\t\t// Notes (A-G with optional sharp/flat and length and dots)\n\t\t\tif( \"ABCDEFG\".indexOf( char ) !== -1 ) {\n\t\t\t\tlet note = char;\n\t\t\t\tlet length = null;\n\t\t\t\tlet dots = 0;\n\t\t\t\ti++;\n\n\t\t\t\t// Check for sharp or flat\n\t\t\t\tif( i < playString.length && \"#+- \".indexOf( playString.charAt( i ) ) !== -1 ) {\n\t\t\t\t\tif( playString.charAt( i ) !== \" \" ) {\n\t\t\t\t\t\tnote += playString.charAt( i );\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t// Check for length number\n\t\t\t\tlet lengthStr = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tlengthStr += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif( lengthStr ) {\n\t\t\t\t\tlength = parseFloat( lengthStr );\n\t\t\t\t}\n\n\t\t\t\t// Check for dots (dotted notes)\n\t\t\t\twhile( i < playString.length && playString.charAt( i ) === \".\" ) {\n\t\t\t\t\tdots++;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"note\",\n\t\t\t\t\t\"note\": note,\n\t\t\t\t\t\"length\": length,\n\t\t\t\t\t\"dots\": dots\n\t\t\t\t} );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Pause or Note by number\n\t\t\tif( \"PN\".indexOf( char ) !== -1 ) {\n\t\t\t\tconst cmd = char;\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\"type\": cmd === \"P\" ? \"pause\" : \"noteNum\",\n\t\t\t\t\t\t\"value\": parseInt( value )\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Music commands (M + subcommand)\n\t\t\tif( char === \"M\" ) {\n\t\t\t\ti++;\n\n\t\t\t\tif( i < playString.length ) {\n\t\t\t\t\tconst subCmd = playString.charAt( i );\n\n\t\t\t\t\t// ML, MN, MS, MF\n\t\t\t\t\tif( \"LNSF\".indexOf( subCmd ) !== -1 ) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tif( subCmd === \"L\" || subCmd === \"N\" || subCmd === \"S\" ) {\n\n\t\t\t\t\t\t\t// Music style\n\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\"type\": \"musicStyle\",\n\t\t\t\t\t\t\t\t\"value\": subCmd\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else if( subCmd === \"F\" ) {\n\n\t\t\t\t\t\t\t// Full note mode\n\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\"type\": \"fullNote\"\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// MA, MT, MD with number\n\t\t\t\t\tif( \"ATD\".indexOf( subCmd ) !== -1 ) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tlet value = \"\";\n\t\t\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( value ) {\n\t\t\t\t\t\t\tconst numValue = parseInt( value );\n\t\t\t\t\t\t\tif( numValue >= 0 && numValue <= 100 ) {\n\n\t\t\t\t\t\t\t\tlet noteType;\n\t\t\t\t\t\t\t\tif( subCmd === \"A\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"attackRate\";\n\t\t\t\t\t\t\t\t} else if( subCmd === \"T\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"sustainRate\";\n\t\t\t\t\t\t\t\t} else if( subCmd === \"D\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"decayRate\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\t\"type\": noteType,\n\t\t\t\t\t\t\t\t\t\"value\": numValue / 100\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Octave, Length, Tempo (with numbers)\n\t\t\tif( \"OLT\".indexOf( char ) !== -1 ) {\n\t\t\t\tconst cmd = char;\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\tconst numValue = parseFloat( value );\n\n\t\t\t\t\tif( cmd === \"O\" && numValue >= 0 && numValue <= 7 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"octave\",\n\t\t\t\t\t\t\t\"value\": parseInt( numValue )\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else if( cmd === \"L\" && numValue > 0 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"length\",\n\t\t\t\t\t\t\t\"value\": numValue\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else if( cmd === \"T\" && numValue >= 32 && numValue <= 255 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"tempo\",\n\t\t\t\t\t\t\t\"value\": parseInt( numValue )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Volume\n\t\t\tif( char === \"V\" ) {\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\tconst numValue = parseInt( value );\n\t\t\t\t\tif( numValue >= 0 && numValue <= 100 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"volume\",\n\t\t\t\t\t\t\t\"value\": numValue / 100\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Octave shortcuts\n\t\t\tif( char === \"<\" ) {\n\t\t\t\ttrack.notes.push( { \"type\": \"octaveDown\" } );\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( char === \">\" ) {\n\t\t\t\ttrack.notes.push( { \"type\": \"octaveUp\" } );\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Waveform types\n\t\t\tif( i + 6 <= playString.length && playString.substring( i, i + 6 ) === \"SQUARE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"square\"\n\t\t\t\t} );\n\t\t\t\ti += 6;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 4 <= playString.length && playString.substring( i, i + 4 ) === \"SINE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"sine\"\n\t\t\t\t} );\n\t\t\t\ti += 4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 8 <= playString.length && playString.substring( i, i + 8 ) === \"TRIANGLE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"triangle\"\n\t\t\t\t} );\n\t\t\t\ti += 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 8 <= playString.length && playString.substring( i, i + 8 ) === \"SAWTOOTH\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"sawtooth\"\n\t\t\t\t} );\n\t\t\t\ti += 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Custom wavetables [[n,n],[n,n]]\n\t\t\tif( char === \"[\" ) {\n\t\t\t\tlet token = \"\";\n\t\t\t\tlet depth = 0;\n\n\t\t\t\twhile( i < playString.length ) {\n\t\t\t\t\ttoken += playString.charAt( i );\n\t\t\t\t\tif( playString.charAt( i ) === \"[\" ) {\n\t\t\t\t\t\tdepth++;\n\t\t\t\t\t} else if( playString.charAt( i ) === \"]\" ) {\n\t\t\t\t\t\tdepth--;\n\t\t\t\t\t\tif( depth === 0 ) {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t// Parse wavetable\n\t\t\t\ttry {\n\t\t\t\t\tconst waveData = JSON.parse( token );\n\t\t\t\t\tif( pi.util.isArray( waveData ) && waveData.length === 2 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"wavetable\",\n\t\t\t\t\t\t\t\"value\": waveData\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} catch( e ) {\n\t\t\t\t\tconsole.warn( `play: Invalid wavetable format: ${token}` );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip spaces and unknown characters\n\t\t\ti++;\n\t\t}\n\n\t\treturn trackId;\n\t}\n\n\tfunction playTrack( trackId ) {\n\t\tconst track = m_tracks[ trackId ];\n\t\tif( !track || track.noteId >= track.notes.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet time = 0;\n\n\t\twhile( track.noteId < track.notes.length ) {\n\t\t\tconst cmd = track.notes[ track.noteId ];\n\n\t\t\tswitch( cmd.type ) {\n\t\t\t\tcase \"note\":\n\t\t\t\t\tconst frequency = getNoteFrequency( track, cmd.note );\n\t\t\t\t\tif( frequency > 0 ) {\n\t\t\t\t\t\tconst duration = getNoteDuration( track, cmd.length, cmd.dots );\n\t\t\t\t\t\tplayNote( track, frequency, time );\n\t\t\t\t\t\ttime += duration;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noteNum\":\n\n\t\t\t\t\t// Note by number (N0-N84)\n\t\t\t\t\tif( cmd.value > 0 && cmd.value < 85 ) {\n\t\t\t\t\t\tconst freq = m_allNotes[ cmd.value ];\n\t\t\t\t\t\tconst duration = getNoteDuration( track, null, 0 );\n\t\t\t\t\t\tplayNote( track, freq, time );\n\t\t\t\t\t\ttime += duration;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pause\":\n\n\t\t\t\t\t// Pause (P1-P64)\n\t\t\t\t\tconst pauseDuration = ( 4 / cmd.value ) * track.tempo;\n\t\t\t\t\ttime += pauseDuration;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octave\":\n\t\t\t\t\ttrack.octave = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octaveUp\":\n\t\t\t\t\tif( track.octave < 7 ) {\n\t\t\t\t\t\ttrack.octave++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octaveDown\":\n\t\t\t\t\tif( track.octave > 0 ) {\n\t\t\t\t\t\ttrack.octave--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"length\":\n\t\t\t\t\ttrack.noteLength = 4 / cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tempo\":\n\t\t\t\t\ttrack.tempo = 60 / cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"volume\":\n\t\t\t\t\ttrack.volume = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"attackRate\":\n\t\t\t\t\ttrack.attackRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sustainRate\":\n\t\t\t\t\ttrack.sustainRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"decayRate\":\n\t\t\t\t\ttrack.decayRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fullNote\":\n\t\t\t\t\ttrack.fullNote = true;\n\t\t\t\t\ttrack.pace = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"waveform\":\n\t\t\t\t\ttrack.type = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wavetable\":\n\n\t\t\t\t\t// Custom wavetable [[real],[imag]]\n\t\t\t\t\ttrack.waveTables = [\n\t\t\t\t\t\tnew Float32Array( cmd.value[ 0 ] ),\n\t\t\t\t\t\tnew Float32Array( cmd.value[ 1 ] )\n\t\t\t\t\t];\n\t\t\t\t\ttrack.type = \"custom\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"musicStyle\":\n\n\t\t\t\t\t// ML = legato (full note), MN = normal, MS = staccato (3/4 note)\n\t\t\t\t\tif( cmd.value === \"L\" ) {\n\t\t\t\t\t\ttrack.pace = 1;\n\t\t\t\t\t\ttrack.fullNote = true;\n\t\t\t\t\t} else if( cmd.value === \"N\" ) {\n\t\t\t\t\t\ttrack.pace = 0.875;\n\t\t\t\t\t\ttrack.fullNote = false;\n\t\t\t\t\t} else if( cmd.value === \"S\" ) {\n\t\t\t\t\t\ttrack.pace = 0.75;\n\t\t\t\t\t\ttrack.fullNote = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttrack.noteId++;\n\t\t}\n\t}\n\n\tfunction getNoteFrequency( track, note ) {\n\n\t\t// Handle sharp/flat\n\t\tnote = note.replace( /\\+/g, \"#\" );\n\t\tnote = note.replace( \"C-\", \"B\" );\n\t\tnote = note.replace( \"D-\", \"C#\" );\n\t\tnote = note.replace( \"E-\", \"D#\" );\n\t\tnote = note.replace( \"F-\", \"E\" );\n\t\tnote = note.replace( \"G-\", \"F#\" );\n\t\tnote = note.replace( \"A-\", \"G#\" );\n\t\tnote = note.replace( \"B-\", \"A#\" );\n\n\t\tconst noteData = m_notesData[ note ];\n\t\tif( !noteData ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst octave = track.octave;\n\t\tif( octave < 0 || octave >= noteData.length ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn noteData[ octave ];\n\t}\n\n\tfunction getNoteDuration( track, length, dots ) {\n\t\tif( length == null ) {\n\t\t\tlength = track.noteLength;\n\t\t} else {\n\t\t\tlength = 4 / length;\n\t\t}\n\n\t\tlet duration = length * track.tempo * track.pace;\n\n\t\t// Apply dotted note multipliers\n\t\tif( dots === 1 ) {\n\n\t\t\t// Single dot = 1.5x duration\n\t\t\tduration = duration * 1.5;\n\t\t} else if( dots === 2 ) {\n\n\t\t\t// Double dot = 1.75x duration\n\t\t\tduration = duration * 1.75;\n\t\t} else if( dots > 2 ) {\n\n\t\t\t// Multiple dots (each adds half of previous addition)\n\t\t\tlet multiplier = 1;\n\t\t\tlet addition = 0.5;\n\t\t\tfor( let i = 0; i < dots; i++ ) {\n\t\t\t\tmultiplier += addition;\n\t\t\t\taddition = addition / 2;\n\t\t\t}\n\t\t\tduration = duration * multiplier;\n\t\t}\n\n\t\treturn duration;\n\t}\n\n\tfunction playNote( track, frequency, time ) {\n\t\tconst volume = track.volume;\n\t\tconst interval = getNoteDuration( track, null, 0 );\n\t\tconst attackTime = interval * track.attackRate;\n\t\tconst sustainTime = interval * track.sustainRate;\n\t\tconst decayTime = interval * track.decayRate;\n\n\t\tlet stopTime;\n\t\tif( track.fullNote && attackTime + sustainTime + decayTime > interval ) {\n\t\t\tstopTime = interval;\n\t\t} else {\n\t\t\tstopTime = attackTime + sustainTime + decayTime;\n\t\t}\n\n\t\tconst soundData = {\n\t\t\t\"frequency\": frequency,\n\t\t\t\"volume\": volume,\n\t\t\t\"attackTime\": attackTime,\n\t\t\t\"sustainTime\": sustainTime,\n\t\t\t\"decayTime\": decayTime,\n\t\t\t\"stopTime\": stopTime,\n\t\t\t\"oType\": track.type,\n\t\t\t\"waveTables\": track.waveTables,\n\t\t\t\"time\": time,\n\t\t\t\"track\": track\n\t\t};\n\n\t\tm_playData.push( soundData );\n\t}\n\n\t// All note frequencies (N0-N84)\n\tconst m_allNotes = [\n\t\t0, 16.35, 17.32, 18.35, 19.45, 20.60, 21.83, 23.12, 24.50, 25.96, 27.50,\n\t\t29.14, 30.87, 32.70, 34.65, 36.71, 38.89, 41.20, 43.65, 46.25, 49.00,\n\t\t51.91, 55.00, 58.27, 61.74,\n\t\t65.406, 69.296, 73.416, 77.782, 82.407, 87.307, 92.499, 97.999,\n\t\t103.826, 110, 116.541, 123.471, 130.813, 138.591, 146.832, 155.563,\n\t\t164.814, 174.614, 184.997, 195.998, 207.652, 220, 233.082, 246.942,\n\t\t261.626, 277.183, 293.665, 311.127, 329.628, 349.228, 369.994, 391.995,\n\t\t415.305, 440, 466.164, 493.883, 523.251, 554.365, 587.33, 622.254,\n\t\t659.255, 698.456, 739.989, 783.991, 830.609, 880, 932.328, 987.767,\n\t\t1046.502, 1108.731, 1174.659, 1244.508, 1318.51, 1396.913, 1479.978,\n\t\t1567.982, 1661.219, 1760, 1864.655, 1975.533, 2093.005, 2217.461,\n\t\t2349.318, 2489.016, 2637.021, 2793.826, 2959.955, 3135.964, 3322.438,\n\t\t3520, 3729.31, 3951.066, 4186.009, 4434.922, 4698.636, 4978.032,\n\t\t5274.042, 5587.652, 5919.91, 6271.928, 6644.876, 7040, 7458.62,\n\t\t7902.132, 8372.018, 8869.844, 9397.272, 9956.064, 10548.084, 11175.304,\n\t\t11839.82, 13289.752, 14080, 14917.24, 15804.264\n\t];\n\n\t// STOPPLAY - Stop playing music\n\tpi._.addCommand( \"stopPlay\", stopPlay, false, false, [ \"trackId\" ] );\n\n\tfunction stopPlay( args ) {\n\t\tconst trackId = args[ 0 ];\n\n\t\t// Stop all tracks\n\t\tif( trackId === null || trackId === undefined ) {\n\t\t\tfor( let i = 0; i < m_allTracks.length; i++ ) {\n\t\t\t\tconst track = m_tracks[ m_allTracks[ i ].id ];\n\t\t\t\tif( track ) {\n\t\t\t\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\t\t\t\tconst sound = track.sounds[ j ];\n\t\t\t\t\t\tpiData.commands.stopSound( [ sound ] );\n\t\t\t\t\t}\n\t\t\t\t\tdelete m_tracks[ m_allTracks[ i ].id ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tm_allTracks = [];\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop specific track\n\t\tif( m_tracks[ trackId ] ) {\n\t\t\tconst track = m_tracks[ trackId ];\n\t\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\t\tconst sound = track.sounds[ j ];\n\t\t\t\tpiData.commands.stopSound( [ sound ] );\n\t\t\t}\n\t\t\tremoveTrack( trackId );\n\t\t}\n\t}\n\n\tfunction removeTrack( trackId ) {\n\t\tfor( let i = 0; i < m_allTracks.length; i++ ) {\n\t\t\tif( m_allTracks[ i ].id === trackId ) {\n\t\t\t\tm_allTracks.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tdelete m_tracks[ trackId ];\n\t}\n}\n\n", "/**\n * Pi.js - DRAW Command Module\n * \n * QBasic-style turtle graphics using draw strings\n * Commands: U/D/L/R (directions), E/F/G/H (diagonals), C (color),\n *           M (move), T (turn), B (blind), N (return), P/S (paint), A (arc)\n * \n * @module modules/draw\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// DRAW - QBasic-style turtle graphics\n\tpi._.addCommand( \"draw\", draw, false, true, [ \"drawString\" ] );\n\n\tfunction draw( screenData, args ) {\n\t\tlet drawString = args[ 0 ];\n\n\t\tif( typeof drawString !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"draw: drawString must be a string\" );\n\t\t\terror.code = \"INVALID_DRAW_STRING\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Convert to uppercase\n\t\tdrawString = drawString.toUpperCase();\n\n\t\t// Extract colors (e.g., C#FF0000)\n\t\tconst tempColors = drawString.match( /(#[A-Z0-9]+)/g );\n\t\tif( tempColors ) {\n\t\t\tfor( let i = 0; i < tempColors.length; i++ ) {\n\t\t\t\tdrawString = drawString.replace( \"C\" + tempColors[ i ], \"O\" + i );\n\t\t\t}\n\t\t}\n\n\t\t// Convert TA to T\n\t\tdrawString = drawString.replace( /(TA)/gi, \"T\" );\n\n\t\t// Remove spaces\n\t\tdrawString = drawString.split( /\\s+/ ).join( \"\" );\n\n\t\t// Regular expression for the draw commands\n\t\tconst reg = /(?=C|C#|R|B|F|G|L|A|T|D|G|H|U|E|N|M|P|S)/;\n\n\t\t// Split into separate commands\n\t\tconst parts = drawString.split( reg );\n\n\t\t// This triggers a move back after drawing the next command\n\t\tlet isReturn = false;\n\n\t\t// Store the last cursor\n\t\tlet lastCursor = {\n\t\t\t\"x\": screenData.x,\n\t\t\t\"y\": screenData.y,\n\t\t\t\"angle\": 0\n\t\t};\n\n\t\t// Move without drawing\n\t\tlet isBlind = false;\n\n\t\t// Arc mode\n\t\tlet isArc = false;\n\n\t\tfor( let i = 0; i < parts.length; i++ ) {\n\t\t\tconst drawArgs = parts[ i ].split( /(\\d+)/ );\n\n\t\t\tswitch( drawArgs[ 0 ] ) {\n\n\t\t\t\t// C - Change Color\n\t\t\t\tcase \"C\":\n\t\t\t\t\tconst color = Number( drawArgs[ 1 ] );\n\t\t\t\t\tscreenData.screenObj.setColor( color );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"O\":\n\t\t\t\t\tconst colorStr = tempColors[ drawArgs[ 1 ] ];\n\t\t\t\t\tscreenData.screenObj.setColor( colorStr );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// D - Down\n\t\t\t\tcase \"D\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 90 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// E - Up and Right\n\t\t\t\tcase \"E\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 315 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// F - Down and Right\n\t\t\t\tcase \"F\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 45 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// G - Down and Left\n\t\t\t\tcase \"G\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 135 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// H - Up and Left\n\t\t\t\tcase \"H\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 225 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// L - Left\n\t\t\t\tcase \"L\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 180 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// R - Right\n\t\t\t\tcase \"R\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 0 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// U - Up\n\t\t\t\tcase \"U\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 270 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// P - Paint\n\t\t\t\t// S - Paint with boundary color\n\t\t\t\tcase \"P\":\n\t\t\t\tcase \"S\": {\n\t\t\t\t\tconst color1 = pi.util.getInt( drawArgs[ 1 ], 0 );\n\t\t\t\t\tscreenData.screenObj.paint(\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y,\n\t\t\t\t\t\tcolor1,\n\t\t\t\t\t\tdrawArgs[ 0 ] === \"S\"\n\t\t\t\t\t);\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// A - Arc Line\n\t\t\t\tcase \"A\": {\n\t\t\t\t\tconst radius = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle1 = pi.util.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\t\tconst angle2 = pi.util.getInt( drawArgs[ 5 ], 1 );\n\t\t\t\t\tisArc = true;\n\n\t\t\t\t\t// Store arc parameters for next draw\n\t\t\t\t\tscreenData._arcParams = { radius, angle1, angle2 };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// TA/T - Turn Angle\n\t\t\t\tcase \"T\":\n\t\t\t\t\tscreenData.angle = pi.util.degreesToRadian(\n\t\t\t\t\t\tpi.util.getInt( drawArgs[ 1 ], 1 )\n\t\t\t\t\t);\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// M - Move to absolute position\n\t\t\t\tcase \"M\":\n\t\t\t\t\tscreenData.x = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tscreenData.y = pi.util.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tisBlind = true;\n\t\t\t}\n\n\t\t\t// Draw line or arc from last position to current position\n\t\t\tif( !isBlind ) {\n\t\t\t\tif( isArc && screenData._arcParams ) {\n\t\t\t\t\tconst arc = screenData._arcParams;\n\t\t\t\t\tscreenData.screenObj.arc(\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y,\n\t\t\t\t\t\tarc.radius,\n\t\t\t\t\t\tarc.angle1,\n\t\t\t\t\t\tarc.angle2\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tscreenData.screenObj.line(\n\t\t\t\t\t\tlastCursor.x,\n\t\t\t\t\t\tlastCursor.y,\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tisBlind = false;\n\t\t\tisArc = false;\n\n\t\t\t// Handle return (N command)\n\t\t\tif( isReturn ) {\n\t\t\t\tisReturn = false;\n\t\t\t\tscreenData.x = lastCursor.x;\n\t\t\t\tscreenData.y = lastCursor.y;\n\t\t\t\tscreenData.angle = lastCursor.angle;\n\t\t\t}\n\n\t\t\t// Check for N (return after next command)\n\t\t\tif( drawArgs[ 0 ] === \"N\" ) {\n\t\t\t\tisReturn = true;\n\t\t\t} else {\n\t\t\t\tlastCursor = {\n\t\t\t\t\t\"x\": screenData.x,\n\t\t\t\t\t\"y\": screenData.y,\n\t\t\t\t\t\"angle\": screenData.angle\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// B command triggers blind mode for next move\n\t\t\tif( drawArgs[ 0 ] === \"B\" ) {\n\t\t\t\tisBlind = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\r\n * Pi.js - Built-in Font Data\r\n * \r\n * Base32-encoded pixel fonts for retro-style text rendering.\r\n * \r\n * @module assets/font-data\r\n */\r\n\r\n\"use strict\";\r\n\r\nexport function loadBuiltInFonts( pi ) {\r\n\t// Font 0: 6x6\r\n\tpi.loadFont(\r\n\t\t\"0,14004,2602800,oidnrt,3po8cff,3vnhgs4,1uv77og,3hpuv70,73g00,3vjgoef,3o00000,0,71ji,k9o000,1sg,1ogoc3p,jp4ir8,19fvt51,31ovfn3,cevfh,31vrooc,1tv52h8,2g0kula,2d2hcsp,8r2jg0,3vvvj,f33opv,8efh0g,3ho84fj,2200idv,2c40237,3r4g000,87000i,3vv901h,3jptvvv,3vnjpsc,0,g8420,22h800,57p9,3p80ea7,237000i,889019,111cc02,0,88420g,g4211,28oc,140011o,1000000,11000,1s00000,400,3333100,sjam9o,1g8423,203i888,1s060ho,hg0654,2fgg1sg,1o2e01p,3p4e07,211hgg0,oi64hg,1h4e13,31g0c,o00100,gg444,41000v,v0010,1088803,2110080,sqb41o,1h4if4,20729oi,1o07421,1o0s94,19701sg,1sgf03p,3p0g03,384p4c0,14if4i8,1o8423,201o84i,s04ihg,2h40842,43o12r,1ul8g25,2blej03,28ka4s0,s97i10,1h4ib3,10729oi,140321g,ho0v21,21014i,14i6025,a4k404,1al9ok0,12a22i4,24k421,7g8og,1s06210,21g1gc3,30g0c2,42300g,2g00000,1v,o40000,1o2f3,10210s9,s003i1,1o0211,251g00c,14s700g,23gg800,6kjo4s,ge4i94,8021,g04,1884218,3180421,21000a,1ul8g01,3294i00,64i8o0,c5310,200ca30,2102ok8,g003j0,3jo0023,221000i,14i6g00,24k400,8lbsk0,a2118,14i70,2e01s44,u02230,20g0630,31g082,622019,1000001,74a5u0,sg83go,3i80i93,30110oi,1oe22jg,joqh07,17hlg4,1o2f39g,33g4u6j,2841o66,gkc971,34g0oie,e411h4,3gsi030,211osh6,423hg0,1g84720,230g8e9,c94jp4,1goi97i,133p0u8,u06pmr,1sjf94j,34i8c93,94hg0c,14i604l,3inbvgk,2603ooc,1tdvstn,3phsif4,2prfurv,2qc67i1,3ooe4n,42rp8k,gs473h,jh8ua3,561igo,ggc231,30gg842,e110oi,14c2229,i8o887,94i9si,1km94jh,301s003,2703o00,40108,3g000f4,u,40g951,108d0kc,630gg0,g84000,2a8i000,92a800,1404g28,2mkll5,1lbfvdv,2rv210g,10g8421,u10g9s,84u118,2hbka50,7oka,1s217g,11bka5e,252h8ka,ka0fg8,n8kat0,21fg0ka,lu000j,30g9s00,7g84,8421o0,g84vg,1v,84210g,1og8000,vg0084,9v210g,1og8722,252hcka,kb421s,u842,352nc00,3u00fo0,7cka5i,42p81v,vg1b,2o01r51,vg03u0,ka5fo0,3u00f,320001v,ka52h8,3o0043h,21o007,843h00,ua52,252nska,9v217s,10g84u0,7,84vvvv,3vvu000,vvvtgo,1goc60o,1goc63f,3vvo000,2e53g,hp5upf,287i90g,10g003s,2h81uh4,44no00,1ska200,18s880,etgg84,1sc94hh,3hh4u94,267k631,15jfk3p,2i9s0fb,1f0004u,2iuo01p,221so70,64i94i,3u0vg7s,gs40,e01088,1o0020g,23g0452,421042,425110,3g0800,5500kk,oi6000,400,c,1gg,12go062,252g1o2,88f000,1ose00\",\r\n\t\t6, 6, null, true\r\n\t);\r\n\r\n\t// Font 1: 6x8 (default)\r\n\tpi.loadFont(\r\n\t\t\"0,ugs,3gvtm2u,1tvmss7,vtskvf,2v710g0,g8efjg,21008e2,vfl8gs,g8e77p,311o003,f7hg00,3vvpoc7,vvu045,h8igg0,3v1mrdm,3efu71h,1ep4i8o,oi94hg,33oof4j,34233hg,u97i95,cq08mn,2pspiqc,21gsfn3,400233,2v3go40,gsv213,3jggka5,a50180,1val6h8,2h80e9j,94hj4s,3p,3jo08ef,24fjghv,gsvah0,2100842,lfjgg0,82fgg,2000044,v41000,8421,3g00098,1voa800,8477r,3g000vf,2e21000,0,8e7,4200g0,18ka000,kaf,2afih80,gug70b,33000p9,442ac0,gk4aki,1380844,0,ggg841,100g41,211100,k4fh1,1000021,fh0g00,0,2110000,f00000,0,210000g,2222200,1p2jamb,jg08ca,4213s0,1p21332,no0sh0,260k9o0,8ca97o,11o1ug8,u0k9o0,oggf4a,jg1uh1,442100,1p2h74a,jg0sh8,2f0g9o0,84000,2100042,10gg,888820,20g000f,2007o00,10820gg,2200sh0,22200g0,1p2nalq,3g08a8,2hfka40,3oi9729,ng0c98,g828o0,3oi94i9,ng1u94,e42bs0,3si8721,700c98,g9i8s0,252hfka,k80s42,4211o0,s4214i,1301ia5,c52j60,3gg8421,no12ra,2l8ka40,25il9ka,k80sh8,2h8k9o0,3oi9721,700sh8,2h8l9o3,3oi9731,1680sh8,e0k9o0,3ta4210,23g12h8,2h8k9o0,252h8k9,11012h8,2lal980,24ka22h,14812h5,4211o0,3t22222,no1og8,g843g0,210820g,g41o42,4213g0,gkh8g0,0,1v,g82000,7,17k9u0,30g8539,lg0007,h849o0,c216kq,1jc0007,hfk1o0,oi8e21,700006,2h8jo5s,30ga6i9,m80806,4211o0,4030ga,k9pg84,2a62h40,1g84210,23g000d,lalak0,mcka,k80007,h8k9o0,u4i9,323g006,2i93g8e,r6i1,700007,2g70bo0,10gu421,hg0008,2h8kpk0,h8k9,1100008,2lal980,h511,1480008,2h8jo5s,v111,7o0642,o210c0,g84010,2101g42,321300,15c0000,45,h8kbs0,1p2g8jg,309o0i0,i94hs0,o0e8nq,3g0sh6,274hs0,240c13i,13o0o06,274hs0,g0c13i,13o0007,g83gcc,1p2e8nq,3g1207,hfk1o0,1g0e8nq,3g1406,4211o0,1p2c210,23g0o06,4211o0,248a8nq,k80840,e8nq40,c0v43h,7o000c,267khk0,skifki,14o08a0,e8k9o0,12074a,jg0g40,e8k9o0,gk08ka,jg0g40,h8k9o0,1208k9,3g9p245,h8igg0,240h8ka,jg0847,2g83og8,oi8e22,ng12af,24fh0g0,3ome4it,if4c52,e212go,o0c13i,13o0c06,4211o0,88074a,jg0022,h8k9o0,1lc0f4a,k80qj0,pakq40,1p4i7g3,3g00oi9,c07g00,g04442,jg0000,v84000,fg8,g00iq6,r5cecv,15kbdiq,3s84080,842100,aaa2g,2g000k5,555000,1348p26,1268ll5,1l5d9ba,3ctreup,3erm842,4210g8,g84270,210g84e,4e10g8,ka52n8,2h8k000,fh8ka,s270,210ga5e,21eh8ka,ka52h8,2h8k00f,21eh8ka,kat0no,a52,25fg000,g8s270,0,e10g8,g8421s,842,4fo000,7s,210g842,43p0g8,7s,842,4fp0g8,g87i1s,210ga52,252p8ka,ka5i1s,3,342p8ka,katg7s,f,30ep8ka,ka5i1c,2h8k00f,30fo000,katg7c,2h8k84f,30fo000,ka52ns,f,30fp0g8,7s,2h8ka52,253o000,g87i1s,3,343p0g8,1s,2h8ka52,25fp8ka,g8vi7s,210g842,4e0000,1s,210hvvv,3vvvvvv,7v,3vvvose,se73ho,e73hos,1osfvvv,3vg0000,cqki,2i400e8,2u8ni10,1uh842,4000fq,252h8k0,3t28322,no0007,2ka5100,i94jl,2200cp,2210g80,3s8e8k9,313sc98,1voa8o0,oigoa9,mc0e83,f8c5s0,impdd,g00117,2iqbp10,oggf41,1g0sh8,2h8ka40,v07o1,3o0084f,24203s0,g41110,7o0888,8203s0,c94i10,210g842,4252go,oc0fo0,31g00cp,206co00,oi9300,0,630000,1g,721,216h8c,3h4i94g,oi2,8f0000,e73h,3000000\",\r\n\t\t6, 8, null, true\r\n\t);\r\n\r\n\t// Font 2: 8x8\r\n\tpi.loadFont(\r\n\t\t\"0,0,1v839c1,2upj0bu,1vfvmvv,31ufvru,1mftvnu,1u3g400,83gv7u,1u3g400,s7oe7u,3v7oe3s,810e3s,3v7oe3s,61s,u1g000,3vvvpu3,31ufvvv,3opi2,116cf00,3vs76dt,2upjgvv,7ge3rt,36cpj3o,u6cpj6,u1gvgo,vj6fpg,o71s70,1vm6vr3,1hmfpm0,2clkf77,3jjomkp,20e1u7u,3se1000,10sfnu,v0s0g0,c3ovgo,c7sf0o,1j6cpj6,1j00pg0,1vtnmrr,dhm6o0,v66e3c,1m3hj3o,0,1v7svg0,c3ovgo,1v3o67v,c3ovgo,c1g600,c1g60o,1v3o600,1g37u,61g000,30o7u,1g30000,1g60,30fs000,28pnv,1j28000,1gf3u,3vvu000,fvvru,u1g000,0,0,o7gu1g,o00c00,1m6or00,0,1m6pvjc,3v6or00,o7pg3o,6fgc00,cdj0o,o6dhg0,s6oe3m,3ecotg0,1g61g00,0,c30o30,1g30600,1g3060o,c30o00,6cf7v,u6c000,30c7s,o30000,0,30c30,7s,0,0,30c00,30o61g,1gc1000,1ucdjmu,3recv00,o70c1g,o31v00,1sco31o,1gcpv00,1sco31o,6cou00,e3or6c,3v0o7g0,3uc1u0c,6cou00,s61g7o,36cou00,3uco30o,o30c00,1scpj3o,36cou00,1scpj3s,61gs00,30c00,30c00,30c00,30c30,c30o60,1g30600,1v00,fo000,1g3060c,c30o00,1sco30o,o00c00,1ucdnmu,3fc0u00,o7hj6c,3ucpj00,3u6cpjs,1j6dv00,u6dg60,306cf00,3s6opj6,1j6pu00,3v64q3o,1k65vg0,3v64q3o,1k61s00,u6dg60,376cfg0,36cpj7s,36cpj00,1s30c1g,o30u00,f0o30c,36cou00,3j6cr3o,1m6dpg0,3o60o30,1h6dvg0,33etvnu,3bcdhg0,33edtmu,37cdhg0,s6phm6,336oe00,3u6cpjs,1g61s00,1scpj6c,3e7g700,3u6cpjs,1m6dpg0,1scpo3g,ecou00,3ub8c1g,o30u00,36cpj6c,36cpv00,36cpj6c,367gc00,33cdhmm,3vethg0,33ccr1o,s6phg0,36cpj3o,o30u00,3vcd30o,p6dvg0,1s60o30,1g60u00,3060c0o,60c0g0,1s1g60o,c1gu00,83gr66,0,0,7v,o30600,0,u0c,1ucotg0,3g60o3s,1j6dn00,u6c,30cou00,e0o33s,36cotg0,u6c,3uc0u00,s6oo7g,1g61s00,tmc,367o37o,3g60r3m,1j6dpg0,o00s1g,o30u00,60030c,6cpj3o,3g60pjc,1s6ppg0,1o30c1g,o30u00,1j7u,3vddhg0,1u6c,36cpj00,u6c,36cou00,1n36,1j7oo7g,tmc,367o30u,1n3m,1j61s00,v60,1s0pu00,830v1g,o38600,1j6c,36cotg0,1j6c,367gc00,1hmm,3vfsr00,1hjc,s6phg0,1j6c,367o37o,1v4o,o69v00,e30c70,o30700,c1g600,c1g600,3g30c0s,o31o00,1rdo000,0,10e3c,33cdvg0,1scpg6c,1s1g33o,co06c,36covg0,e00u6c,3uc0u00,1vc6f06,v6cfo0,3600u0c,1ucovg0,3g00u0c,1ucovg0,o30u0c,1ucovg0,u60,307g31o,1vc6f36,1v60f00,3600u6c,3uc0u00,3g00u6c,3uc0u00,3600s1g,o30u00,1ucce0o,c1gf00,3g00s1g,o30u00,333gr66,3vcdhg0,o3003o,36fpj00,e01v30,1s61v00,voc,1vsovo0,v6pj7u,36cpjg0,1sco03o,36cou00,co03o,36cou00,e003o,36cou00,1sco06c,36covg0,e006c,36covg0,co06c,367o37o,31hgf36,1j3o600,3601j6c,36cou00,c1gvm0,307s60o,s6op7g,1gedv00,36cou7s,ofoc1g,3scpj7q,33cvhm7,71m61s,c1hm3g,e00u0c,1ucovg0,s00s1g,o30u00,1o03o,36cou00,1o06c,36covg0,fg07o,36cpj00,3u01j7c,3udpj00,u6or1u,7s000,s6or1o,7o000,o00c30,30cou00,7s,30c0000,7s,60o000,31sdj6u,pmdj0f,31sdj6r,rmvjo3,c1g00o,c1g600,36pmc,1j36000,cophj,1jco000,h8g8k8,h8g8k8,1aqklda,1aqklda,3dnfmve,3dnfmve,c1g60o,c1g60o,c1g60o,3s1g60o,c1hu0o,3s1g60o,r3cdhm,3r3cdhm,0,3v3cdhm,1u0o,3s1g60o,r3dtg6,3r3cdhm,r3cdhm,r3cdhm,1vg6,3r3cdhm,r3dtg6,3v00000,r3cdhm,3v00000,c1hu0o,3s00000,0,3s1g60o,c1g60o,fg0000,c1g60o,3vg0000,0,3vhg60o,c1g60o,fhg60o,0,3vg0000,c1g60o,3vhg60o,c1g7oo,fhg60o,r3cdhm,rjcdhm,r3cdpg,vg0000,fpg,rjcdhm,r3dto0,3vg0000,1vo0,3rjcdhm,r3cdpg,rjcdhm,1vo0,3vg0000,r3dto0,3rjcdhm,c1hvo0,3vg0000,r3cdhm,3vg0000,1vo0,3vhg60o,0,3vjcdhm,r3cdhm,vg0000,c1g7oo,fg0000,7oo,fhg60o,0,vjcdhm,r3cdhm,3vjcdhm,c1hvoo,3vhg60o,c1g60o,3s00000,0,fhg60o,3vvvvvv,3vvvvvv,0,3vvvvvv,3of1s7g,3of1s7g,7gu3of,7gu3of,3vvvvvv,0,tms,34dotg0,7hj7o,36fhg60,fpj60,30c1g00,fsr3c,1m6or00,3ucoo1g,1gcpv00,vmo,3cdgs00,6cpj6,1j7oo60,7dn0o,c1g600,3u30u6c,367gc7s,s6phnu,336oe00,s6phm6,1m6prg0,e3063s,36cou00,vmr,3dns000,30ovmr,3dnso60,s61g7o,3060e00,1scpj6c,36cpj00,fo07s,fo000,o31v1g,o01v00,1g3061g,1g01v00,c30o1g,c01v00,71m6oo,c1g60o,c1g60o,cdhm3g,o3007s,30c00,7dn00,1rdo000,s6or1o,0,o,c00000,0,c00000,7go30c,3m6of0s,1s6or3c,1m00000,1o1gc30,1s00000,f1s,u3o000\",\r\n\t\t6, 8, null, true\r\n\t);\r\n\r\n\t// Font 3: 8x14\r\n\tpi.loadFont(\r\n\t\t\"0,0,0,0,1v839c1,20rr6c1,1v00000,vnv,3dvvvu3,3jvuvg0,0,6pvnu,3vfsv1o,800000,g,s7pvjs,s10000,0,c3of77,3jue60o,u00000,61s,1vfvvru,c1gf00,0,o,u3o600,0,3vvvvvv,3vufgu3,3jvvvvv,3vvu000,f36,1144phs,0,3vvvvvv,31pjfdt,2cs7vvv,3vvu000,f0s6hi,1scpj6c,1s00000,f36,1j6cf0o,1v1g600,0,vj6fpg,o30s7g,3g00000,vr3,1vm6or3,1jufpm0,0,c1hmps,3jjpmoo,c00000,1060,3gfhvno,3gc1000,0,10c3hu,3v3s3g6,100000,61s,1v1g60o,1v3o600,0,1j6cpj6,1j6c036,1j00000,vur,3dtmuor,dhm6o0,3s,3360e3c,33ccr1o,6ccv00,0,0,3vftvg0,0,c3ovgo,c1gvhs,c7s000,61s,1v1g60o,c1g600,0,c1g60o,c1gvhs,c00000,0,c0pvgc,c00000,0,c30,3v60c00,0,0,c1g60,3v00000,0,a3c,3v6oa00,0,g,s3gv3s,3vfs000,0,ftvjs,1u3ge0g,0,0,0,0,0,c3of1s,c1g00o,c00000,6cpj6,i00000,0,0,1m6pvjc,1m6pvjc,1m00000,c1gv66,31c0v06,23ccv0o,c00000,1gm6,61gc36,3300000,e3c,1m3gtms,36cotg0,1g,o30o00,0,0,30o,o30c1g,o1g300,0,o1g30c,60o30o,o00000,0,1j3pvps,1j00000,0,60o,1v1g600,0,0,0,c1g61g,0,0,3v00000,0,0,0,1g600,0,10c30o,o61g40,0,v66,37dttn6,33ccv00,0,c3gu0o,c1g60o,1v00000,v66,30o61g,1gcdvg0,0,1ucc1g6,u0c1m6,1u00000,30s,u6pj7u,60o7g0,0,3vc1g60,3u0c1m6,1u00000,e30,30c1v66,33ccv00,0,3vcc1gc,c30c1g,o00000,v66,33ccv66,33ccv00,0,1ucdhm6,1v0c1gc,1s00000,o,c00000,c1g000,0,1g600,60o,o00000,1gc,c30o1g,c0o1g0,0,3u,vg0,0,o1g,c0o1gc,c30o00,0,1ucdhgc,c1g00o,c00000,v66,33dtnmu,3ec0v00,0,83gr66,33fthm6,3300000,1v36,1j6cv36,1j6dv00,0,u6dgm0,30c1gj6,u00000,1u3c,1j6cpj6,1j6pu00,0,3v6coj8,1s6goj6,3v00000,1vj6,1h6gu38,1g61s00,0,u6dgm0,30dthj6,t00000,1hm6,33cdvm6,33cdhg0,0,u1g60o,c1g60o,u00000,7gc,60o30c,36cou00,0,3j6cr3c,1s6or36,3j00000,1s30,1g60o30,1h6dvg0,0,33etvnu,3bcdhm6,3300000,1hn6,3rftnme,33cdhg0,0,s6phm6,33cdhjc,s00000,1v36,1j6cv30,1g61s00,0,1ucdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6dpg0,0,1ucdhj0,s0phm6,1u00000,vju,1d1g60o,c1gf00,0,33cdhm6,33cdhm6,1u00000,1hm6,33cdhm6,1m3g400,0,33cdhm6,3bddvjs,1m00000,1hm6,1m3ge1o,1mcdhg0,0,1j6cpj6,u1g60o,u00000,1vm6,261gc30,31cdvg0,0,u30c1g,o30c1g,u00000,1060,3g70e0s,70c0g0,0,u0o30c,60o30c,u00000,83gr66,0,0,0,0,0,1vo0,o30600,0,0,0,3o,67pj6c,1r00000,1o30,1g7gr36,1j6cv00,0,3s,33c1g66,1u00000,70c,63or6c,36cotg0,0,3s,33ftg66,1u00000,e3c,1i61s30,1g61s00,0,3m,36cpj3s,6cou00,1o30,1g6otj6,1j6dpg0,0,c1g01o,c1g60o,u00000,1g6,s1g6,30cpj6,u00000,3g60o36,1m7gr36,3j00000,e0o,c1g60o,c1gf00,0,7c,3vddlmm,3300000,0,dopj6,1j6cpg0,0,3s,33cdhm6,1u00000,0,dopj6,1j7oo30,3o00000,3m,36cpj3s,60o7g0,0,dotj6,1g61s00,0,3s,3370766,1u00000,41g,ofoc1g,o3c700,0,6c,36cpj6c,1r00000,0,6cpj6,1j3o600,0,66,33ddlnu,1m00000,0,ccr1o,s6phg0,0,66,33cdhju,30pu00,0,ftj0o,o6dvg0,0,71g60o,1o1g60o,700000,60o,c1g00o,c1g600,0,1o1g60o,71g60o,1o00000,tms,0,0,0,41o,1mcdhnu,0,f36,31c1g62,1j3o306,1u00000,36co06c,36cpj6c,1r00000,o61g,7phnu,30ccv00,g,s6o03o,67pj6c,1r00000,1j6c,7g33s,36cotg0,30,o1g03o,67pj6c,1r00000,3gr1o,7g33s,36cotg0,0,f36,1g6cf0c,33o000,10e3c,7phnu,30ccv00,0,36co03s,33ftg66,1u00000,60c0o,7phnu,30ccv00,0,1j6c01o,c1g60o,u00000,1gf36,3g60o,c1gf00,30,o1g01o,c1g60o,u00000,cdhgg,s6phm6,3vcdhg0,e3c,s00e3c,33cdvm6,3300000,c30o00,3v6co3s,1g6dvg0,0,1j3m,r7tm6o,1n00000,fjc,36cpvmc,36cpjg0,g,s6o03s,33cdhm6,1u00000,1hm6,7phm6,33ccv00,30,o1g03s,33cdhm6,1u00000,30u6c,cpj6c,36cotg0,30,o1g06c,36cpj6c,1r00000,1hm6,cdhm6,337s1gc,1s00066,333gr66,33cdhjc,s00000,cdhg0,33cdhm6,33ccv00,o,c3opj0,1g6cf0o,c00000,3gr34,1gf0o30,1gedv00,0,1j6cf0o,1v1gvgo,c00000,fhj6c,3sc9j6u,36cphg0,e,dhg60o,1v1g60o,cdgs00,1gc30,7g33s,36cotg0,c,c3001o,c1g60o,u00000,1gc30,7phm6,33ccv00,o,o6006c,36cpj6c,1r00000,tms,dopj6,1j6cpg0,tms,cdpnm,3vdtjm6,3300000,3or3c,v00vg0,0,1o,1m6oe00,1u00000,0,c1g,30c30,33ccv00,0,0,3vc1g60,0,0,1vg6,30c000,60,30cdj6o,o61n46,61gfg0,c1g66,36dgc36,379sfg6,300000,c1g00o,c3of1s,c00000,0,r6pm3c,r00000,0,1m3c,r6pm00,0,8k84a4,8k84a4,8k84a4,8k8lda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3ene60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g67o,cfg60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3c000,0,fsdhm,r3cdhm,0,fg67o,c1g60o,c1gdhm,r3cdnm,3fcdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3c000,7u,3fcdhm,r3cdhm,r3cdhm,rfc1nu,0,dhm,r3cdhm,rfs000,0,c1g60o,cfg67o,0,0,0,fg60o,c1g60o,c1g60o,c1g60v,0,60o,c1g60o,cfu000,0,0,7v,c1g60o,c1g60o,c1g60o,c1u60o,c1g60o,0,7v,0,60o,c1g60o,cfu60o,c1g60o,c1g60o,c1u60v,c1g60o,c1gdhm,r3cdhm,r3edhm,r3cdhm,r3cdhm,r3ec1v,0,0,1v,o3edhm,r3cdhm,r3cdhm,rfe07v,0,0,7v,fedhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3c000,7v,fu000,0,r3cdhm,rfe07n,r3cdhm,r3c60o,c1g67v,fu000,0,r3cdhm,r3cdnv,0,0,7v,fu60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3u000,0,c1g60o,c1u60v,0,0,v,c1u60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,rfudhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,cfg000,0,0,v,c1g60o,c1hvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvs7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gvvvv,3vvvvvv,3vg0000,0,0,7dn6o,3cdotg0,0,v66,3ucdhns,30c0g00,1vm6,33c1g60,30c1g00,0,1vjc,1m6or3c,1m00000,1vm6,1g3061g,1gcdvg0,0,3u,3cdhm6o,1o00000,0,1j6cpj6,1u60o60,0,tms,c1g60o,c00000,vgo,u6cpj6,u1gvg0,0,s6phm6,3vcdhjc,s00000,e3c,33cdhjc,1m6prg0,0,f3060c,v6cpj6,u00000,0,7tmur,1v00000,0,1gcvmr,3dv6vj0,3000000,71g,1g60v30,1g30700,0,7phm6,33cdhm6,3300000,7u,1vg0,fs000,0,1g63u,c1g000,3vg0000,c0o,60c30o,o00vg0,0,61gc30,o1g300,1v00000,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1hm6o,1o00000,o,c00vg0,c1g000,0,tms,7dn00,0,3gr3c,s00000,0,0,0,c1g000,0,0,o,0,f,60o30c,6eor1s,e00000,dgr3c,1m6or00,0,3g,3c30o68,3s00000,0,0,1u7ov3s,1u7o000,0\",\r\n\t\t8, 14, null, true\r\n\t);\r\n\r\n\t// Font 4: 8x16\r\n\tpi.loadFont(\r\n\t\t\"0,0,0,0,vk1,2io30dt,2co30bu,0,vnv,3dvvvu3,3jvvvru,0,0,1mftvnu,3v7oe0g,0,0,83gv7u,1u3g400,0,o,u3ppv7,3jhg61s,0,o,u7tvvv,1v1g61s,0,0,0,0,0,3vvvvvv,3vvvpu3,31ufvvv,3vvvvvv,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,vr3,1vm6or3,1hmfpv6,3000000,o,cdmf77,udm60o,0,81g70,3ofhvno,3oe1g40,0,41ge,f3tvhu,f0s1g2,0,61s,1v1g60o,1v3o600,0,pj6,1j6cpj6,1j00pj6,0,vur,3dtmuor,dhm6or,0,7phj0,s6phm6,1m3g366,1u00000,0,0,3vftvnu,0,61s,1v1g60o,1v3o63u,0,61s,1v1g60o,c1g60o,0,60o,c1g60o,c7sf0o,0,0,1g37u,61g000,0,0,30o7u,1g30000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61s,u3o60o,c0060o,0,6cpj6,i00000,0,0,3c,1mfsr3c,1mfsr3c,0,c1gv66,31c0v06,38dhjs,c1g000,0,31cc30o,o61hk6,0,e3c,1m3gtms,36cpj3m,0,30c1g,1g00000,0,0,30o,o30c1g,o3060c,0,c0o,60o30c,60o61g,0,0,6cf7v,u6c000,0,0,1g63u,c1g000,0,0,0,1g60o,o00000,0,7u,0,0,0,0,60o,0,0,10c30o,o61g40,0,f36,31s7mur,31s6phs,0,61o,1s1g60o,c1g63u,0,v66,30o61g,1gc1hnu,0,v66,30cf06,30dhjs,0,30s,u6pj7u,60o30u,0,1vm0,30c1v06,30dhjs,0,e30,30c1v66,33cdhjs,0,1vm6,30c30o,o30c1g,0,v66,33ccv66,33cdhjs,0,v66,33ccvg6,30c33o,0,0,c1g000,1g600,0,0,c1g000,1g61g,0,6,61gc30,o1g306,0,0,7s000,1v00000,0,30,o1g306,61gc30,0,v66,330o60o,c0060o,0,3s,33cdnmu,3fdpg3s,0,41o,1mcdhnu,33cdhm6,0,1v36,1j6cv36,1j6cpns,0,f36,31c1g60,30c4phs,0,1u3c,1j6cpj6,1j6cr7o,0,1vj6,1h6gu38,1g64pnu,0,1vj6,1h6gu38,1g60o7g,0,f36,31c1g6u,33ccphq,0,1hm6,33cdvm6,33cdhm6,0,f0o,c1g60o,c1g61s,0,7gc,60o30c,36cpj3o,0,1pj6,1j6ou3o,1m6cpn6,0,1s30,1g60o30,1g64pnu,0,1gv7,3vvvmu3,31s7gu3,0,1hn6,3rftnme,33cdhm6,0,v66,33cdhm6,33cdhjs,0,1v36,1j6cv30,1g60o7g,0,v66,33cdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6cpn6,0,v66,3360e0c,3cdhjs,0,1vur,2chg60o,c1g61s,0,1hm6,33cdhm6,33cdhjs,0,1gu3,31s7gu3,31mcf0o,0,1gu3,31s7gur,3dvupj6,0,1gu3,1j3o60o,u6dgu3,0,1gu3,31mcf0o,c1g61s,0,1vu3,230o61g,1gc3gvv,0,f1g,o30c1g,o30c1s,0,40,30e0s1o,e0s1g2,0,f0c,60o30c,60o31s,0,83gr66,0,0,0,0,0,0,fu000,o30600,0,0,0,0,7g33s,36cpj3m,0,1o30,1g7gr36,1j6cpjs,0,0,7phm0,30c1hjs,0,70c,63or6c,36cpj3m,0,0,7phnu,30c1hjs,0,e3c,1i61s30,1g60o7g,0,0,7dj6c,36cpj3s,6cou00,1o30,1g6otj6,1j6cpn6,0,60o,3g60o,c1g61s,0,1g6,s1g6,30c1g6,1j6cf00,1o30,1g6cr3o,1s6opn6,0,e0o,c1g60o,c1g61s,0,0,edvur,3dtnmur,0,0,dopj6,1j6cpj6,0,0,7phm6,33cdhjs,0,0,dopj6,1j6cpjs,1g61s00,0,7dj6c,36cpj3s,60o7g0,0,dotj6,1g60o7g,0,0,7phj0,s0phjs,0,41g,ofoc1g,o30dgs,0,0,cpj6c,36cpj3m,0,0,c7gu3,31mcf0o,0,0,c7gu3,3dtnvr6,0,0,c6phs,c3opm3,0,0,cdhm6,33cdhju,30pu00,0,ftj0o,o61hnu,0,3go,c1gs0o,c1g60e,0,60o,c1g00o,c1g60o,0,s0o,c1g3go,c1g63g,0,tms,0,0,0,0,83gr66,33cdvg0,0,f36,31c1g60,316cf0c,37o000,1j00,cpj6c,36cpj3m,0,o61g,7phnu,30c1hjs,0,10e3c,7g33s,36cpj3m,0,1j00,7g33s,36cpj3m,0,60c0o,7g33s,36cpj3m,0,3gr1o,7g33s,36cpj3m,0,0,u6co30,1j3o306,u00000,10e3c,7phnu,30c1hjs,0,1hg0,7phnu,30c1hjs,0,60c0o,7phnu,30c1hjs,0,pg0,3g60o,c1g61s,0,1gf36,3g60o,c1g61s,0,60c0o,3g60o,c1g61s,0,cc00g,s6phm6,3vcdhm6,0,s6oe00,s6phm6,3vcdhm6,0,c30o00,3v6co3s,1g60pnu,0,0,6seor,1vdhn3n,0,fjc,36cpvmc,36cpj6e,0,10e3c,7phm6,33cdhjs,0,1hg0,7phm6,33cdhjs,0,60c0o,7phm6,33cdhjs,0,30u6c,cpj6c,36cpj3m,0,60c0o,cpj6c,36cpj3m,0,1hg0,cdhm6,33cdhju,30ou00,cc03s,33cdhm6,33cdhjs,0,cc066,33cdhm6,33cdhjs,0,1g63u,31s1g60,31ns60o,0,3gr34,1gf0o30,1g61pns,0,1gr6,u1hvoo,3vhg60o,0,fopj6,1u64pjf,1j6cpnj,0,s6oo,c1gvgo,c1g60o,3c70000,1gc30,7g33s,36cpj3m,0,o61g,3g60o,c1g61s,0,1gc30,7phm6,33cdhjs,0,1gc30,cpj6c,36cpj3m,0,tms,dopj6,1j6cpj6,0,1rdo066,3jfdvmu,37cdhm6,0,3or3c,v00vg0,0,0,3gr3c,s00v00,0,0,c1g,30c30,30cdhjs,0,0,1vm0,30c1g00,0,0,1vg6,30c1g0,0,c1g62,33co61g,1gct6o6,61u000,c1g62,33co61g,1jct5hu,30c000,60o,1g60o,u3of0o,0,0,3cr6o,1m3c000,0,0,dgr1m,1mdg000,0,8k84a4,8k84a4,8k84a4,8k84a4,1aqklda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3enfnbn,c1g60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g60o,cfg67o,c1g60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3cdhm,0,7u,r3cdhm,r3cdhm,0,fg67o,c1g60o,c1g60o,r3cdhm,rfc1nm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,0,fs1nm,r3cdhm,r3cdhm,r3cdhm,rfc1nu,0,0,r3cdhm,r3cdnu,0,0,c1g60o,cfg67o,0,0,0,7o,c1g60o,c1g60o,c1g60o,c1g60v,0,0,c1g60o,c1g67v,0,0,0,7v,c1g60o,c1g60o,c1g60o,c1g60v,c1g60o,c1g60o,0,7v,0,0,c1g60o,c1g67v,c1g60o,c1g60o,c1g60o,c1u60v,c1g60o,c1g60o,r3cdhm,r3cdhn,r3cdhm,r3cdhm,r3cdhm,r3ec1v,0,0,0,3uc1n,r3cdhm,r3cdhm,r3cdhm,rfe07v,0,0,0,fu07n,r3cdhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3cdhm,0,fu07v,0,0,r3cdhm,rfe07n,r3cdhm,r3cdhm,c1g60o,cfu07v,0,0,r3cdhm,r3cdnv,0,0,0,fu07v,c1g60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3cdhv,0,0,c1g60o,c1u60v,0,0,0,1u60v,c1g60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,r3cdnv,r3cdhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,c1g67o,0,0,0,v,c1g60o,c1g60o,3vvvvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvvvv,3of1s7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gu3of,3vvvvvv,3vvvvo0,0,0,0,7dn6o,3cdhn3m,0,u6c,36cpm6c,33cdhmc,0,1vm6,33c1g60,30c1g60,0,0,3v6or3c,1m6or3c,0,7u,3360c0o,o61hnu,0,0,7tm6o,3cdhm3g,0,0,1j6cpj6,1j7oo30,3000000,0,1rdo60o,c1g60o,0,3u,c3opj6,1j3o63u,0,1o,1mcdhnu,33ccr1o,0,e3c,33cdhjc,1m6or7e,0,7hg,c0ofj6,1j6cphs,0,0,7tmur,3dns000,0,3,37tmur,3pnso60,0,71g,1g60v30,1g60c0s,0,3s,33cdhm6,33cdhm6,0,0,3v0007u,1vg0,0,0,c1gvgo,c0007v,0,1g,c0o1gc,c3003u,0,c,c30o1g,c0o03u,0,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1g60o,3cdhm3g,0,0,c1g03u,1g600,0,0,7dn00,1rdo000,0,3gr3c,s00000,0,0,0,o,c00000,0,0,0,c00000,0,u30c,60o37c,1m6of0s,0,dgr3c,1m6or00,0,0,71m1g,1gchu00,0,0,0,1u7ov3s,1u7ov00,0\",\r\n\t\t8, 16, null, true\r\n\t);\r\n\r\n\t// Set default font to 6x8 (font ID 1)\r\n\tpi.setDefaultFont( 1 );\r\n}\r\n"],
  "mappings": "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",
  "names": ["index_exports", "__export", "index_default", "pi", "__toCommonJS", "defaultPaletteHex", "piData", "commandList", "utils_exports", "__export", "binarySearch", "cToHex", "canAddEventListeners", "checkColor", "clamp", "colorStringToColor", "colorStringToHex", "compareColors", "convertToArray", "convertToColor", "copyProperties", "dataToHex", "degreesToRadian", "deleteProperties", "getInt", "getWindowSize", "hexToColor", "hexToData", "inRange", "inRange2", "isArray", "isDomElement", "isFunction", "isInteger", "math", "pad", "padL", "padR", "queueMicrotask", "radiansToDegrees", "rgbToColor", "rgbToHex", "rndRange", "isFunction", "__name", "fn", "isDomElement", "el", "isArray", "isInteger", "canAddEventListeners", "hexToColor", "hex", "r", "g", "b", "a", "s2", "cToHex", "c", "clamp", "rgbToHex", "rgbToColor", "colorStringToColor", "colorStr", "context", "data", "colorStringToHex", "splitRgb", "s", "parts", "colors", "i", "val", "convertToColor", "color", "rgbParts", "checkColor", "strColor", "compareColors", "color1", "color2", "hexToData", "width", "height", "digits", "digitIndex", "y", "x", "hexPart", "padL", "dataToHex", "num", "min", "max", "inRange", "point", "hitBox", "inRange2", "x1", "y1", "x2", "y2", "rndRange", "degreesToRadian", "deg", "radiansToDegrees", "rad", "str", "len", "pad", "padR", "copyProperties", "dest", "src", "prop", "convertToArray", "arr", "deleteProperties", "obj", "getWindowSize", "binarySearch", "search", "compareFn", "m", "n", "k", "result", "getInt", "def", "math", "queueMicrotask", "callback", "addCommand", "name", "fn", "isInternal", "isScreen", "parameters", "isSet", "piData", "commandList", "__name", "addCommands", "fnPx", "fnAa", "screenData", "args", "addSetting", "parseOptions", "cmd", "isArray", "isDomElement", "options", "args2", "foundParameter", "i", "addPen", "cap", "addBlendCommand", "processCommands", "api", "a", "b", "nameA", "nameB", "processCommand", "parsedArgs", "getScreenData", "screenId", "commandName", "error", "isInteger", "init", "pi", "piData", "setScreen", "args", "screenObj", "screenId", "error", "__name", "removeAllScreens", "i", "getScreen", "getScreenData", "setDefaultColor", "c", "setDefaultPal", "pal", "firstColor", "getDefaultPal", "colors", "color", "setDefaultInputFocus", "element", "set", "screenData", "options", "optionName", "setting", "optionValues", "init", "pi", "piData", "normalBlend", "screenData", "x", "y", "c", "data", "i", "__name", "blendPixel", "pct", "pct2", "getImageData", "resetImageData", "setImageDirty", "setPixel", "setPixelSafe", "getPixelColor", "noise", "c2", "half", "change", "drawSquarePen", "size", "offset", "y2", "x2", "drawCirclePen", "x3", "y3", "getPixelInternal", "getPixelSafe", "findColorValue", "colorInput", "commandName", "colorValue", "error", "put", "args", "includeZero", "startX", "startY", "width", "height", "dataY", "dataX", "init", "pi", "piData", "screen", "args", "aspect", "container", "isOffscreen", "willReadFrequently", "noStyles", "isMultiple", "resizeCallback", "aspectData", "error", "parseAspect", "screenData", "createOffscreenScreen", "containerEl", "createNoStyleScreen", "createScreen", "screenObj", "cmdName", "commandData", "setupApiCommand", "__name", "name", "cmd", "parsedArgs", "width", "height", "parts", "splitter", "canvas", "bufferCanvas", "createScreenData", "isContainer", "size", "getSize", "setCanvasSize", "isNoStyles", "maxWidth", "maxHeight", "newWidth", "newHeight", "factorX", "factorY", "factor", "ratio1", "ratio2", "element", "init", "pi", "piData", "onevent", "mode", "fn", "once", "hitBox", "modes", "name", "listenerArr", "extraId", "extraData", "customData", "modeFound", "i", "error", "originalFn", "newMode", "__name", "data", "offevent", "isClear", "clearEvents", "screenData", "setAutoRender", "args", "removeScreen", "screenId", "render", "getWidth", "getHeight", "getCanvas", "setBgColor", "color", "bc", "setContainerBgColor", "findColor", "tolerance", "isAddToPalette", "m_maxDifference", "pal", "dr", "dg", "db", "da", "difference", "setColor", "colorInput", "colorValue", "colorIndex", "setPenSize", "size", "getPal", "colors", "setPalColor", "index", "swapColor", "oldColor", "newColor", "y", "x", "setPixelMode", "setPen", "pen", "noise", "setBlendMode", "getPixel", "filterImg", "filter", "get", "x1", "y1", "x2", "y2", "t", "imageData", "row", "r", "g", "b", "a", "init", "pi", "piData", "cls", "screenData", "args", "x", "y", "width", "height", "__name", "pset", "aaPset", "error", "color", "pxLine", "aaLine", "x1", "y1", "x2", "y2", "dx", "dy", "sx", "sy", "err", "e2", "ctx", "pxCircle", "aaCircle", "radius", "fillColor", "isFill", "r", "rSquared", "py", "px", "outlineRadius", "midPoint", "strokeColor", "pxRect", "aaRect", "i", "j", "pxEllipse", "aaEllipse", "radiusX", "radiusY", "rxSquared", "rySquared", "d1", "d2", "cx", "cy", "rx", "ry", "pxArc", "aaArc", "angle1", "angle2", "winding", "shouldDrawPixel", "a", "init", "pi", "piData", "m_maxDifference", "m_setPixel", "m_pixels", "paint", "screenData", "args", "x", "y", "fillColor", "tolerance", "error", "fills", "setPixelNoise", "backgroundColor", "pixel", "addFill", "__name", "checkPixel", "key", "floodCheck", "fill", "pixelColor", "dr", "dg", "db", "da", "difference", "init", "pi", "piData", "pxBezier", "aaBezier", "screenData", "args", "xStart", "yStart", "x1", "y1", "x2", "y2", "xEnd", "yEnd", "error", "color", "minDistance", "points", "lastPoint", "calcStep", "t", "dt", "point", "calcDistance", "__name", "ctx", "p1", "p2", "dx", "dy", "a", "a2", "a3", "t2", "t3", "init", "pi", "piData", "m_piWait", "m_piResume", "m_callback", "loadImage", "args", "src", "name", "image", "callback", "tempOnload", "error", "__name", "loadSpritesheet", "spriteWidth", "spriteHeight", "margin", "isAuto", "imageData", "width", "height", "getCluster", "y", "frameData", "clusterName", "searched", "clusters", "cluster", "index", "data", "i", "dirs", "x2", "y2", "name2", "canvas", "context", "x1", "y1", "getSpritesheetData", "screenData", "sprite", "spriteData", "getImage", "removeImage", "drawImage", "x", "angle", "anchorX", "anchorY", "alpha", "scaleX", "scaleY", "img", "drawItem", "drawSprite", "frame", "oldAlpha", "init", "pi", "piData", "m_piWait", "m_piResume", "loadFont", "args", "fontSrc", "width", "height", "charSet", "isEncoded", "error", "i", "temp", "chars", "font", "loadFontFromBase32Encoded", "loadFontFromImg", "__name", "decompressFont", "numStr", "bin", "data", "nums", "num", "j", "index", "y", "x", "img", "err", "setDefaultFont", "fontId", "setFont", "screenData", "size", "calcFontSize", "context", "px", "tCanvas", "tContext", "canvasPrint", "msg", "bitmapPrint", "columns", "charIndex", "sx", "sy", "getAvailableFonts", "setFontSize", "setChar", "code", "init", "pi", "piData", "print", "screenData", "args", "msg", "inLine", "isCentered", "parts", "i", "startPrint", "__name", "printCursor", "width", "overlap", "onScreenPct", "msgSplit", "msg1", "msg2", "index", "shiftImageUp", "yOffset", "y", "x", "iDest", "iSrc", "data", "piCalcWidth", "canvasCalcWidth", "setWordBreak", "piPrint", "defaultPal", "charIndex", "setPos", "col", "row", "error", "setPosPx", "getPos", "getCols", "getRows", "getPosPx", "init", "pi", "piData", "m_borderStyles", "printTable", "screenData", "args", "items", "tableFormat", "borderStyle", "isCentered", "error", "isFormatted", "i", "buildFormatedTable", "width", "buildStandardTable", "__name", "borders", "msg", "boxes", "font", "startPos", "cellHeight", "row", "cellWidth", "rowWidth", "rowPad", "msgTop", "msgMid", "msgBot", "col", "createBox", "box", "bottomRow", "pos", "padding", "cell", "cellDirs", "lookCell", "posAfter", "completeBoxes", "printItem", "height", "isVertical", "index", "startRow", "xt", "yt", "x", "y", "dir", "init", "pi", "piData", "m_inKeys", "m_inKeyCodes", "m_inCodes", "m_inputs", "m_inputIndex", "m_onKeyEventListeners", "m_anyKeyEventListeners", "m_onKeyCombos", "m_isKeyEventsActive", "m_inputFocus", "m_preventKeys", "m_inputQueue", "m_inputQueueIndex", "m_promptInterval", "m_promptBlink", "m_promptLastTime", "m_promptBackground", "m_promptBackgroundWidth", "m_keyboardStarted", "startKeyboard", "target", "onKeyDown", "onKeyUp", "clearPressedKeys", "__name", "stopKeyboard", "e", "key", "code", "keyCode", "keyData", "triggerKeyEventListeners", "i", "mode", "keyListeners", "listener", "codeListeners", "inkey", "args", "keysReturn", "onkey", "fn", "once", "error", "offkey", "preventKey", "clearKeys", "reinitKeyboard", "setInputFocus", "screenData", "element", "onkeyCombo", "keys", "comboId", "allKeys", "comboData", "addKeyCombo", "keyComboDown", "keyComboUp", "offkeyCombo", "combo", "j", "kd", "input", "prompt", "callback", "isNumber", "isInteger", "allowNegative", "resolvePromise", "rejectPromise", "promise", "resolve", "reject", "inputData", "startInputCollection", "showPrompt", "collectInput", "event", "removeLastChar", "finishInput", "hideCursor", "msg", "now", "pos", "posPx", "width", "height", "processInputValue", "cancelInput", "setInputCursor", "cursor", "font", "badChar", "init", "pi", "piData", "startMouse", "screenData", "mouseMove", "mouseDown", "mouseUp", "onContextMenu", "__name", "stopMouse", "e", "updateMouse", "getMouse", "eventType", "rect", "scaleX", "scaleY", "inmouse", "onmouse", "args", "mode", "fn", "once", "error", "offmouse", "beforeLen", "listener", "triggerEventListeners", "data", "listeners", "extraMode", "i", "inpress", "onpress", "hitBox", "customData", "offpress", "onclick", "offclick", "setEnableContextMenu", "init", "pi", "piData", "startTouch", "screenData", "touchStart", "touchMove", "touchEnd", "__name", "stopTouch", "e", "updateTouch", "getTouch", "getTouchPress", "eventType", "rect", "scaleX", "scaleY", "i", "touch", "intouch", "ontouch", "args", "mode", "fn", "once", "error", "offtouch", "beforeLen", "listener", "copyTouches", "touches", "touchArr", "action", "touchData", "setPinchZoom", "init", "pi", "piData", "m_controllers", "m_controllerArr", "m_events", "m_gamepadLoopId", "m_Modes", "m_isLooping", "m_loopInterval", "m_axesSensitivity", "m_init", "initGamepads", "gamepadConnected", "gamepadDisconnected", "__name", "e", "updateController", "triggerGamepadEvent", "updateControllers", "gamepads", "i", "gamepad", "oldGamepad", "button", "oldButton", "axisValue", "oldValue", "mode", "gamepadIndex", "item", "value", "modeEvents", "listener", "ingamepads", "ongamepad", "args", "fn", "once", "customData", "error", "itemKey", "startGamepadLoop", "offgamepad", "loop", "stopGamepadLoop", "setGamepadSensitivity", "sensitivity", "init", "pi", "piData", "m_piWait", "m_piResume", "m_audioPools", "m_nextAudioId", "m_audioContext", "m_soundPool", "m_nextSoundId", "createAudioPool", "args", "src", "poolSize", "error", "audioItem", "i", "audio", "loadAudio", "audioId", "__name", "retryCount", "audioReady", "audioError", "errors", "errorCode", "index", "newAudio", "deleteAudioPool", "poolItem", "playAudioPool", "volume", "startTime", "duration", "stopAudioPool", "j", "sound", "frequency", "oType", "delay", "attack", "decay", "waveTables", "context", "stopTime", "createSound", "cmdName", "audioContext", "attackTime", "sustainTime", "decayTime", "oscillator", "envelope", "master", "real", "imag", "wave", "currentTime", "soundId", "stopSound", "setVolume", "init", "pi", "piData", "m_notesData", "m_tracks", "m_allTracks", "m_lastTrackId", "m_playData", "play", "args", "playString", "error", "trackId", "createTrack", "playTrack", "a", "b", "AudioContextClass", "audioContext", "i", "playData", "__name", "track", "char", "note", "length", "dots", "lengthStr", "cmd", "value", "subCmd", "numValue", "noteType", "token", "depth", "waveData", "time", "frequency", "getNoteFrequency", "duration", "getNoteDuration", "playNote", "freq", "m_allNotes", "pauseDuration", "noteData", "octave", "multiplier", "addition", "volume", "interval", "attackTime", "sustainTime", "decayTime", "stopTime", "soundData", "stopPlay", "j", "sound", "removeTrack", "init", "pi", "piData", "draw", "screenData", "args", "drawString", "error", "tempColors", "i", "reg", "parts", "isReturn", "lastCursor", "isBlind", "isArc", "drawArgs", "color", "colorStr", "len", "angle", "color1", "radius", "angle1", "angle2", "arc", "__name", "loadBuiltInFonts", "pi", "__name", "VERSION", "waitCount", "waiting", "readyList", "startReadyListTimeout", "wait", "__name", "resume", "startReadyList", "temp", "fn", "pi", "piData", "addCommand", "addCommands", "addSetting", "addPen", "addBlendCommand", "parseOptions", "utils_exports", "ready", "args", "isFunction", "init", "defaultPaletteHex", "processCommands", "loadBuiltInFonts", "index_default"]
}
