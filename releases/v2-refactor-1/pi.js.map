{
  "version": 3,
  "sources": ["../src/core/pi-data.js", "../src/modules/utils.js", "../src/core/command-system.js", "../src/modules/core-commands.js", "../src/modules/screen-helper.js", "../src/modules/screen.js", "../src/modules/screen-commands.js", "../src/modules/graphics-pixel.js", "../src/modules/paint.js", "../src/modules/bezier.js", "../src/modules/images.js", "../src/modules/font.js", "../src/modules/print.js", "../src/modules/table.js", "../src/modules/keyboard.js", "../src/modules/mouse.js", "../src/modules/touch.js", "../src/modules/gamepad.js", "../src/modules/sound.js", "../src/modules/play.js", "../src/modules/draw.js", "../src/assets/font-data.js", "../src/index.js"],
  "sourcesContent": ["/**\r\n * Pi.js - Core Data Module\r\n * \r\n * Central data storage for Pi.js, equivalent to legacy m_piData.\r\n * \r\n * @module core/pi-data\r\n */\r\n\r\n\"use strict\";\r\n\r\n// Default 256-color palette (CGA + extended colors) - raw hex strings\r\n// Will be converted to Pi.js color objects during initialization\r\nexport const defaultPaletteHex = [\r\n\t\"#000000\", \"#0000AA\", \"#00AA00\", \"#00AAAA\", \"#AA0000\",\r\n\t\"#AA00AA\", \"#AA5500\", \"#AAAAAA\", \"#555555\", \"#5555FF\", \"#55FF55\", \"#55FFFF\",\r\n\t\"#FF5555\", \"#FF55FF\", \"#FFFF55\", \"#FFFFFF\", \"#000000\", \"#141414\", \"#202020\",\r\n\t\"#2D2D2D\", \"#393939\", \"#454545\", \"#515151\", \"#616161\", \"#717171\", \"#828282\",\r\n\t\"#929292\", \"#A2A2A2\", \"#B6B6B6\", \"#CACACA\", \"#E3E3E3\", \"#FFFFFF\", \"#0000FF\",\r\n\t\"#4100FF\", \"#7D00FF\", \"#BE00FF\", \"#FF00FF\", \"#FF00BE\", \"#FF007D\", \"#FF0041\",\r\n\t\"#FF0000\", \"#FF4100\", \"#FF7D00\", \"#FFBE00\", \"#FFFF00\", \"#BEFF00\", \"#7DFF00\",\r\n\t\"#41FF00\", \"#00FF00\", \"#00FF41\", \"#00FF7D\", \"#00FFBE\", \"#00FFFF\", \"#00BEFF\",\r\n\t\"#007DFF\", \"#0041FF\", \"#7D7DFF\", \"#9E7DFF\", \"#BE7DFF\", \"#DF7DFF\", \"#FF7DFF\",\r\n\t\"#FF7DDF\", \"#FF7DBE\", \"#FF7D9E\", \"#FF7D7D\", \"#FF9E7D\", \"#FFBE7D\", \"#FFDF7D\",\r\n\t\"#FFFF7D\", \"#DFFF7D\", \"#BEFF7D\", \"#9EFF7D\", \"#7DFF7D\", \"#7DFF9E\", \"#7DFFBE\",\r\n\t\"#7DFFDF\", \"#7DFFFF\", \"#7DDFFF\", \"#7DBEFF\", \"#7D9EFF\", \"#B6B6FF\", \"#C6B6FF\",\r\n\t\"#DBB6FF\", \"#EBB6FF\", \"#FFB6FF\", \"#FFB6EB\", \"#FFB6DB\", \"#FFB6C6\", \"#FFB6B6\",\r\n\t\"#FFC6B6\", \"#FFDBB6\", \"#FFEBB6\", \"#FFFFB6\", \"#EBFFB6\", \"#DBFFB6\", \"#C6FFB6\",\r\n\t\"#B6FFB6\", \"#B6FFC6\", \"#B6FFDB\", \"#B6FFEB\", \"#B6FFFF\", \"#B6EBFF\", \"#B6DBFF\",\r\n\t\"#B6C6FF\", \"#000071\", \"#1C0071\", \"#390071\", \"#550071\", \"#710071\", \"#710055\",\r\n\t\"#710039\", \"#71001C\", \"#710000\", \"#711C00\", \"#713900\", \"#715500\", \"#717100\",\r\n\t\"#557100\", \"#397100\", \"#1C7100\", \"#007100\", \"#00711C\", \"#007139\", \"#007155\",\r\n\t\"#007171\", \"#005571\", \"#003971\", \"#001C71\", \"#393971\", \"#453971\", \"#553971\",\r\n\t\"#613971\", \"#713971\", \"#713961\", \"#713955\", \"#713945\", \"#713939\", \"#714539\",\r\n\t\"#715539\", \"#716139\", \"#717139\", \"#617139\", \"#557139\", \"#457139\", \"#397139\",\r\n\t\"#397145\", \"#397155\", \"#397161\", \"#397171\", \"#396171\", \"#395571\", \"#394571\",\r\n\t\"#515171\", \"#595171\", \"#615171\", \"#695171\", \"#715171\", \"#715169\", \"#715161\",\r\n\t\"#715159\", \"#715151\", \"#715951\", \"#716151\", \"#716951\", \"#717151\", \"#697151\",\r\n\t\"#617151\", \"#597151\", \"#517151\", \"#517159\", \"#517161\", \"#517169\", \"#517171\",\r\n\t\"#516971\", \"#516171\", \"#515971\", \"#000041\", \"#100041\", \"#200041\", \"#310041\",\r\n\t\"#410041\", \"#410031\", \"#410020\", \"#410010\", \"#410000\", \"#411000\", \"#412000\",\r\n\t\"#413100\", \"#414100\", \"#314100\", \"#204100\", \"#104100\", \"#004100\", \"#004110\",\r\n\t\"#004120\", \"#004131\", \"#004141\", \"#003141\", \"#002041\", \"#001041\", \"#202041\",\r\n\t\"#282041\", \"#312041\", \"#392041\", \"#412041\", \"#412039\", \"#412031\", \"#412028\",\r\n\t\"#412020\", \"#412820\", \"#413120\", \"#413920\", \"#414120\", \"#394120\", \"#314120\",\r\n\t\"#284120\", \"#204120\", \"#204128\", \"#204131\", \"#204139\", \"#204141\", \"#203941\",\r\n\t\"#203141\", \"#202841\", \"#2D2D41\", \"#312D41\", \"#352D41\", \"#3D2D41\", \"#412D41\",\r\n\t\"#412D3D\", \"#412D35\", \"#412D31\", \"#412D2D\", \"#41312D\", \"#41352D\", \"#413D2D\",\r\n\t\"#41412D\", \"#3D412D\", \"#35412D\", \"#31412D\", \"#2D412D\", \"#2D4131\", \"#2D4135\",\r\n\t\"#2D413D\", \"#2D4141\", \"#2D3D41\", \"#2D3541\", \"#2D3141\", \"#000000\", \"#000000\",\r\n\t\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"\r\n];\r\n\r\n// Central Pi.js data storage\r\nexport const piData = {\r\n\t\"nextScreenId\": 0,\r\n\t\"screens\": {},\r\n\t\"activeScreen\": null,\r\n\t\"images\": {},\r\n\t\"imageCount\": 0,\r\n\t\"defaultPrompt\": String.fromCharCode( 219 ),\r\n\t\"defaultFont\": {},\r\n\t\"nextFontId\": 0,\r\n\t\"fonts\": {},\r\n\t\"defaultPalette\": [],\r\n\t\"defaultColor\": 7,\r\n\t\"commands\": {},\r\n\t\"screenCommands\": {},\r\n\t\"defaultPenDraw\": null,\r\n\t\"pens\": {},\r\n\t\"penList\": [],\r\n\t\"blendCommands\": {},\r\n\t\"blendCommandsList\": [],\r\n\t\"defaultBlendCmd\": null,\r\n\t\"settings\": {},\r\n\t\"settingsList\": [],\r\n\t\"volume\": 0.75,\r\n\t\"isTouchScreen\": false,\r\n\t\"defaultInputFocus\": typeof window !== \"undefined\" ? window : null\r\n};\r\n\r\n// Command list for processCommands\r\nexport const commandList = [];\r\n\r\n// Ready system\r\nexport let waitCount = 0;\r\nexport let waiting = false;\r\nexport const readyList = [];\r\nexport let startReadyListTimeout = 0;\r\n\r\nexport function setWaitCount( count ) {\r\n\twaitCount = count;\r\n}\r\n\r\nexport function setWaiting( state ) {\r\n\twaiting = state;\r\n}\r\n\r\nexport function setStartReadyListTimeout( timeout ) {\r\n\tstartReadyListTimeout = timeout;\r\n}\r\n\r\n", "/**\r\n * Pi.js - Utilities Module\r\n * \r\n * Common utility functions for math, colors, types, and data manipulation.\r\n * \r\n * @module modules/utils\r\n */\r\n\r\n\"use strict\";\r\n\r\n// Type checking utilities\r\nexport const isFunction = ( fn ) => typeof fn === \"function\";\r\nexport const isDomElement = ( el ) => el instanceof Element;\r\nexport const isArray = Array.isArray;\r\nexport const isInteger = Number.isInteger;\r\nexport const canAddEventListeners = ( el ) => {\r\n\treturn typeof el.addEventListener === \"function\" && \r\n\t\ttypeof el.removeEventListener === \"function\";\r\n};\r\n\r\n// Color conversion utilities\r\n\r\n/**\r\n * Convert hex color to color object\r\n * \r\n * @param {string} hex - Hex color string (#RGB, #RRGGBB, or #RRGGBBAA)\r\n * @returns {Object} Color object with r, g, b, a, s, s2 properties\r\n */\r\nexport function hexToColor( hex ) {\r\n\tlet r, g, b, a, s2;\r\n\ts2 = hex;\r\n\r\n\tif( hex.length === 4 ) {\r\n\t\tr = parseInt( hex.slice( 1, 2 ), 16 ) * 16 - 1;\r\n\t\tg = parseInt( hex.slice( 2, 3 ), 16 ) * 16 - 1;\r\n\t\tb = parseInt( hex.slice( 3, 4 ), 16 ) * 16 - 1;\r\n\t} else {\r\n\t\tr = parseInt( hex.slice( 1, 3 ), 16 );\r\n\t\tg = parseInt( hex.slice( 3, 5 ), 16 );\r\n\t\tb = parseInt( hex.slice( 5, 7 ), 16 );\r\n\t}\r\n\r\n\tif( hex.length === 9 ) {\r\n\t\ts2 = hex.slice( 0, 7 );\r\n\t\ta = parseInt( hex.slice( 7, 9 ), 16 );\r\n\t} else {\r\n\t\ta = 255;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"r\": r,\r\n\t\t\"g\": g,\r\n\t\t\"b\": b,\r\n\t\t\"a\": a,\r\n\t\t\"s\": `rgba(${r},${g},${b},${Math.round( a / 255 * 1000 ) / 1000})`,\r\n\t\t\"s2\": s2\r\n\t};\r\n}\r\n\r\n/**\r\n * Convert color component to hex\r\n * \r\n * @param {number} c - Color component (0-255)\r\n * @returns {string} Hex string\r\n */\r\nexport function cToHex( c ) {\r\n\tif( !isInteger( c ) ) {\r\n\t\tc = Math.round( c );\r\n\t}\r\n\tc = clamp( c, 0, 255 );\r\n\tconst hex = Number( c ).toString( 16 );\r\n\treturn hex.length < 2 ? \"0\" + hex : hex.toUpperCase();\r\n}\r\n\r\n/**\r\n * Convert RGB to hex color\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255), defaults to 255\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex( r, g, b, a ) {\r\n\tif( isNaN( a ) ) {\r\n\t\ta = 255;\r\n\t}\r\n\treturn \"#\" + cToHex( r ) + cToHex( g ) + cToHex( b ) + cToHex( a );\r\n}\r\n\r\n/**\r\n * Convert RGB to color object\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255)\r\n * @returns {Object} Color object\r\n */\r\nexport function rgbToColor( r, g, b, a ) {\r\n\treturn hexToColor( rgbToHex( r, g, b, a ) );\r\n}\r\n\r\n/**\r\n * Convert color string to color object using canvas\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {Object} Color object\r\n */\r\nexport function colorStringToColor( colorStr ) {\r\n\tconst canvas = document.createElement( \"canvas\" );\r\n\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\r\n\tcontext.fillStyle = colorStr;\r\n\tcontext.fillRect( 0, 0, 1, 1 );\r\n\tconst data = context.getImageData( 0, 0, 1, 1 ).data;\r\n\treturn rgbToColor( data[ 0 ], data[ 1 ], data[ 2 ], data[ 3 ] );\r\n}\r\n\r\n/**\r\n * Convert color string to hex\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {string} Hex color string\r\n */\r\nexport function colorStringToHex( colorStr ) {\r\n\treturn colorStringToColor( colorStr ).s2;\r\n}\r\n\r\n/**\r\n * Split RGB/RGBA string into components\r\n * \r\n * @param {string} s - RGB or RGBA string\r\n * @returns {Array<number>} Array of color components\r\n */\r\nfunction splitRgb( s ) {\r\n\ts = s.slice( s.indexOf( \"(\" ) + 1, s.indexOf( \")\" ) );\r\n\tconst parts = s.split( \",\" );\r\n\tconst colors = [];\r\n\tfor( let i = 0; i < parts.length; i++ ) {\r\n\t\tlet val;\r\n\t\tif( i === 3 ) {\r\n\t\t\tval = parseFloat( parts[ i ].trim() ) * 255;\r\n\t\t} else {\r\n\t\t\tval = parseInt( parts[ i ].trim() );\r\n\t\t}\r\n\t\tcolors.push( val );\r\n\t}\r\n\treturn colors;\r\n}\r\n\r\n/**\r\n * Convert various color formats to color object\r\n * \r\n * @param {*} color - Color in various formats\r\n * @returns {Object|null} Color object or null if invalid\r\n */\r\nexport function convertToColor( color ) {\r\n\tif( color === undefined ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Array format [r, g, b, a]\r\n\tif( isArray( color ) && color.length > 2 ) {\r\n\t\treturn rgbToColor( color[ 0 ], color[ 1 ], color[ 2 ], color[ 3 ] );\r\n\t}\r\n\r\n\t// Object format {r, g, b, a}\r\n\tif(\r\n\t\tisInteger( color?.r ) &&\r\n\t\tisInteger( color?.g ) &&\r\n\t\tisInteger( color?.b )\r\n\t) {\r\n\t\treturn rgbToColor( color.r, color.g, color.b, color.a );\r\n\t}\r\n\r\n\tif( typeof color !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Hex format\r\n\tconst checkHexColor = /(^#[0-9A-F]{8}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\r\n\tif( checkHexColor.test( color ) ) {\r\n\t\treturn hexToColor( color );\r\n\t}\r\n\r\n\t// RGB/RGBA format\r\n\tif( color.indexOf( \"rgb\" ) === 0 ) {\r\n\t\tconst rgbParts = splitRgb( color );\r\n\t\tif( rgbParts.length < 3 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn rgbToColor( rgbParts[ 0 ], rgbParts[ 1 ], rgbParts[ 2 ], rgbParts[ 3 ] );\r\n\t}\r\n\r\n\t// Named color or other CSS color\r\n\treturn colorStringToColor( color );\r\n}\r\n\r\n/**\r\n * Check if a color string is valid\r\n * \r\n * @param {string} strColor - Color string to check\r\n * @returns {boolean} True if valid\r\n */\r\nexport function checkColor( strColor ) {\r\n\tconst s = new Option().style;\r\n\ts.color = strColor;\r\n\treturn s.color !== \"\";\r\n}\r\n\r\n/**\r\n * Compare two color objects\r\n * \r\n * @param {Object} color1 - First color\r\n * @param {Object} color2 - Second color\r\n * @returns {boolean} True if colors are equal\r\n */\r\nexport function compareColors( color1, color2 ) {\r\n\treturn color1.r === color2.r &&\r\n\t\tcolor1.g === color2.g &&\r\n\t\tcolor1.b === color2.b &&\r\n\t\tcolor1.a === color2.a;\r\n}\r\n\r\n// Data conversion utilities\r\n\r\n/**\r\n * Convert hex string to 2D data array\r\n * \r\n * @param {string} hex - Hex string\r\n * @param {number} width - Width of data\r\n * @param {number} height - Height of data\r\n * @returns {Array<Array<number>>} 2D array of binary data\r\n */\r\nexport function hexToData( hex, width, height ) {\r\n\thex = hex.toUpperCase();\r\n\tconst data = [];\r\n\tlet i = 0;\r\n\tlet digits = \"\";\r\n\tlet digitIndex = 0;\r\n\r\n\tfor( let y = 0; y < height; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = 0; x < width; x++ ) {\r\n\t\t\tif( digitIndex >= digits.length ) {\r\n\t\t\t\tlet hexPart = parseInt( hex[ i ], 16 );\r\n\t\t\t\tif( isNaN( hexPart ) ) {\r\n\t\t\t\t\thexPart = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdigits = padL( hexPart.toString( 2 ), 4, \"0\" );\r\n\t\t\t\ti += 1;\r\n\t\t\t\tdigitIndex = 0;\r\n\t\t\t}\r\n\t\t\tdata[ y ].push( parseInt( digits[ digitIndex ] ) );\r\n\t\t\tdigitIndex += 1;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n * Convert 2D data array to hex string\r\n * \r\n * @param {Array<Array<number>>} data - 2D array of binary data\r\n * @returns {string} Hex string\r\n */\r\nexport function dataToHex( data ) {\r\n\tlet hex = \"\";\r\n\tlet digits = \"\";\r\n\r\n\tfor( let y = 0; y < data.length; y++ ) {\r\n\t\tfor( let x = 0; x < data[ y ].length; x++ ) {\r\n\t\t\tdigits += data[ y ][ x ];\r\n\t\t\tif( digits.length === 4 ) {\r\n\t\t\t\thex += parseInt( digits, 2 ).toString( 16 );\r\n\t\t\t\tdigits = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn hex;\r\n}\r\n\r\n// Math utilities\r\n\r\n/**\r\n * Clamp a number between min and max\r\n * \r\n * @param {number} num - Number to clamp\r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Clamped value\r\n */\r\nexport function clamp( num, min, max ) {\r\n\treturn Math.min( Math.max( num, min ), max );\r\n}\r\n\r\n/**\r\n * Check if a point is in a rectangle\r\n * \r\n * @param {Object} point - Point with x, y properties\r\n * @param {Object} hitBox - Rectangle with x, y, width, height properties\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange( point, hitBox ) {\r\n\treturn point.x >= hitBox.x && point.x < hitBox.x + hitBox.width &&\r\n\t\tpoint.y >= hitBox.y && point.y < hitBox.y + hitBox.height;\r\n}\r\n\r\n/**\r\n * Check if coordinates are in a rectangle\r\n * \r\n * @param {number} x1 - Point x\r\n * @param {number} y1 - Point y\r\n * @param {number} x2 - Rectangle x\r\n * @param {number} y2 - Rectangle y\r\n * @param {number} width - Rectangle width\r\n * @param {number} height - Rectangle height\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange2( x1, y1, x2, y2, width, height ) {\r\n\treturn x1 >= x2 && x1 < x2 + width &&\r\n\t\ty1 >= y2 && y1 < y2 + height;\r\n}\r\n\r\n/**\r\n * Generate random number in range\r\n * \r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Random number between min and max\r\n */\r\nexport function rndRange( min, max ) {\r\n\treturn Math.random() * ( max - min ) + min;\r\n}\r\n\r\n/**\r\n * Convert degrees to radians\r\n * \r\n * @param {number} deg - Degrees\r\n * @returns {number} Radians\r\n */\r\nexport function degreesToRadian( deg ) {\r\n\treturn deg * ( Math.PI / 180 );\r\n}\r\n\r\n/**\r\n * Convert radians to degrees\r\n * \r\n * @param {number} rad - Radians\r\n * @returns {number} Degrees\r\n */\r\nexport function radiansToDegrees( rad ) {\r\n\treturn rad * ( 180 / Math.PI );\r\n}\r\n\r\n// String utilities\r\n\r\n/**\r\n * Pad string on left\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padL( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tlet pad = \"\";\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tpad += c;\r\n\t}\r\n\treturn pad + str;\r\n}\r\n\r\n/**\r\n * Pad string on right\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padR( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tstr += c;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * Pad string on both sides\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function pad( str, len, c ) {\r\n\tif( typeof c !== \"string\" || c.length === 0 ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\twhile( str.length < len ) {\r\n\t\tstr = c + str + c;\r\n\t}\r\n\tif( str.length > len ) {\r\n\t\tstr = str.substr( 0, len );\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// Object utilities\r\n\r\n/**\r\n * Copy properties from source to destination\r\n * \r\n * @param {Object} dest - Destination object\r\n * @param {Object} src - Source object\r\n */\r\nexport function copyProperties( dest, src ) {\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tdest[ prop ] = src[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Convert object to array\r\n * \r\n * @param {Object} src - Source object\r\n * @returns {Array} Array of values\r\n */\r\nexport function convertToArray( src ) {\r\n\tconst arr = [];\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tarr.push( src[ prop ] );\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n/**\r\n * Delete all properties from object\r\n * \r\n * @param {Object} obj - Object to clear\r\n */\r\nexport function deleteProperties( obj ) {\r\n\tfor( const prop in obj ) {\r\n\t\tif( obj.hasOwnProperty( prop ) ) {\r\n\t\t\tdelete obj[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Window utilities\r\n\r\n/**\r\n * Get window size\r\n * \r\n * @returns {Object} Object with width and height\r\n */\r\nexport function getWindowSize() {\r\n\tconst width = window.innerWidth || document.documentElement.clientWidth ||\r\n\t\tdocument.body.clientWidth;\r\n\r\n\tconst height = window.innerHeight || document.documentElement.clientHeight ||\r\n\t\tdocument.body.clientHeight;\r\n\r\n\treturn { \"width\": width, \"height\": height };\r\n}\r\n\r\n// Search utilities\r\n\r\n/**\r\n * Binary search in sorted array\r\n * \r\n * @param {Array} data - Sorted array\r\n * @param {*} search - Value to search for\r\n * @param {Function} compareFn - Comparison function\r\n * @returns {number} Index of found element or negative insertion point\r\n */\r\nexport function binarySearch( data, search, compareFn ) {\r\n\tlet m = 0;\r\n\tlet n = data.length - 1;\r\n\r\n\twhile( m <= n ) {\r\n\t\tconst k = ( n + m ) >> 1;\r\n\t\tconst result = compareFn( search, data[ k ], k );\r\n\t\tif( result > 0 ) {\r\n\t\t\tm = k + 1;\r\n\t\t} else if( result < 0 ) {\r\n\t\t\tn = k - 1;\r\n\t\t} else {\r\n\t\t\treturn k;\r\n\t\t}\r\n\t}\r\n\treturn -m - 1;\r\n}\r\n\r\n/**\r\n * Parse integer with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed integer or default\r\n */\r\nexport function getInt( val, def ) {\r\n\tval = parseInt( val );\r\n\tif( isNaN( val ) ) {\r\n\t\tval = def;\r\n\t}\r\n\treturn val;\r\n}\r\n\r\n// Common math constants\r\nexport const math = Object.freeze( {\r\n\t\"deg30\": Math.PI / 6,\r\n\t\"deg45\": Math.PI / 4,\r\n\t\"deg60\": Math.PI / 3,\r\n\t\"deg90\": Math.PI / 2,\r\n\t\"deg120\": ( 2 * Math.PI ) / 3,\r\n\t\"deg135\": ( 3 * Math.PI ) / 4,\r\n\t\"deg150\": ( 5 * Math.PI ) / 6,\r\n\t\"deg180\": Math.PI,\r\n\t\"deg210\": ( 7 * Math.PI ) / 6,\r\n\t\"deg225\": ( 5 * Math.PI ) / 4,\r\n\t\"deg240\": ( 4 * Math.PI ) / 3,\r\n\t\"deg270\": ( 3 * Math.PI ) / 2,\r\n\t\"deg300\": ( 5 * Math.PI ) / 3,\r\n\t\"deg315\": ( 7 * Math.PI ) / 4,\r\n\t\"deg330\": ( 11 * Math.PI ) / 6,\r\n\t\"deg360\": Math.PI * 2\r\n} );\r\n\r\n// Queue microtask (built-in in modern browsers)\r\n// Wrap to preserve window context\r\nexport const queueMicrotask = ( callback ) => {\r\n\tif( window.queueMicrotask ) {\r\n\t\twindow.queueMicrotask( callback );\r\n\t} else {\r\n\t\tsetTimeout( callback, 0 );\r\n\t}\r\n};\r\n\r\n", "/**\r\n * Pi.js - Command System Module\r\n * \r\n * Command registration and processing, matching legacy API pattern.\r\n * \r\n * @module core/command-system\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { piData, commandList } from \"./pi-data.js\";\r\nimport * as utils from \"../modules/utils.js\";\r\n\r\n/**\r\n * Add a command to the system\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fn - Command function\r\n * @param {boolean} isInternal - If true, not exposed in API\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n * @param {boolean} isSet - If true, this is a setting\r\n */\r\nexport function addCommand( name, fn, isInternal, isScreen, parameters, isSet ) {\r\n\tpiData.commands[ name ] = fn;\r\n\r\n\tif( !isInternal ) {\r\n\t\tcommandList.push( {\r\n\t\t\t\"name\": name,\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"isScreen\": isScreen,\r\n\t\t\t\"parameters\": parameters || [],\r\n\t\t\t\"isSet\": isSet,\r\n\t\t\t\"noParse\": isSet\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a command with dual pixel/anti-aliased implementations\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fnPx - Pixel mode implementation\r\n * @param {Function} fnAa - Anti-aliased mode implementation\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addCommands( name, fnPx, fnAa, parameters ) {\r\n\taddCommand( name, function( screenData, args ) {\r\n\t\tif( screenData.pixelMode ) {\r\n\t\t\tfnPx( screenData, args );\r\n\t\t} else {\r\n\t\t\tfnAa( screenData, args );\r\n\t\t}\r\n\t}, false, true, parameters );\r\n}\r\n\r\n/**\r\n * Add a setting\r\n * \r\n * @param {string} name - Setting name\r\n * @param {Function} fn - Setting function\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addSetting( name, fn, isScreen, parameters ) {\r\n\tpiData.settings[ name ] = {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"isScreen\": isScreen,\r\n\t\t\"parameters\": parameters || []\r\n\t};\r\n\tpiData.settingsList.push( name );\r\n}\r\n\r\n/**\r\n * Parse options - converts object notation to array or passes through array\r\n * \r\n * @param {Object} cmd - Command definition\r\n * @param {Array} args - Arguments passed to command\r\n * @returns {Array} Parsed arguments\r\n */\r\nexport function parseOptions( cmd, args ) {\r\n\tif( cmd.noParse ) {\r\n\t\treturn args;\r\n\t}\r\n\r\n\t// If first argument is an object, convert to array based on parameter names\r\n\tif(\r\n\t\targs.length > 0 &&\r\n\t\ttypeof args[ 0 ] === \"object\" &&\r\n\t\targs[ 0 ] !== null &&\r\n\t\t!args[ 0 ].hasOwnProperty( \"screen\" ) &&\r\n\t\t!utils.isArray( args[ 0 ] ) &&\r\n\t\t!utils.isDomElement( args[ 0 ] )\r\n\t) {\r\n\t\tconst options = args[ 0 ];\r\n\t\tconst args2 = [];\r\n\t\tlet foundParameter = false;\r\n\r\n\t\tfor( let i = 0; i < cmd.parameters.length; i++ ) {\r\n\t\t\tif( options.hasOwnProperty( cmd.parameters[ i ] ) ) {\r\n\t\t\t\targs2.push( options[ cmd.parameters[ i ] ] );\r\n\t\t\t\tfoundParameter = true;\r\n\t\t\t} else {\r\n\t\t\t\targs2.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( foundParameter ) {\r\n\t\t\treturn args2;\r\n\t\t}\r\n\t}\r\n\r\n\treturn args;\r\n}\r\n\r\n/**\r\n * Add a pen drawing mode\r\n * \r\n * @param {string} name - Pen name\r\n * @param {Function} fn - Pen function\r\n * @param {string} cap - Line cap style\r\n */\r\nexport function addPen( name, fn, cap ) {\r\n\tpiData.penList.push( name );\r\n\tpiData.pens[ name ] = {\r\n\t\t\"cmd\": fn,\r\n\t\t\"cap\": cap\r\n\t};\r\n}\r\n\r\n/**\r\n * Add a blend command\r\n * \r\n * @param {string} name - Blend mode name\r\n * @param {Function} fn - Blend function\r\n */\r\nexport function addBlendCommand( name, fn ) {\r\n\tpiData.blendCommandsList.push( name );\r\n\tpiData.blendCommands[ name ] = fn;\r\n}\r\n\r\n/**\r\n * Process commands and create API methods\r\n * \r\n * @param {Object} api - API object to add methods to\r\n */\r\nexport function processCommands( api ) {\r\n\t// Alphabetize commands\r\n\tcommandList.sort( ( a, b ) => {\r\n\t\tconst nameA = a.name.toUpperCase();\r\n\t\tconst nameB = b.name.toUpperCase();\r\n\t\tif( nameA < nameB ) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif( nameA > nameB ) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t} );\r\n\r\n\tfor( const cmd of commandList ) {\r\n\t\tprocessCommand( api, cmd );\r\n\t}\r\n}\r\n\r\n/**\r\n * Process a single command and add to API\r\n * \r\n * @param {Object} api - API object\r\n * @param {Object} cmd - Command definition\r\n */\r\nfunction processCommand( api, cmd ) {\r\n\tif( cmd.isSet ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( null, parsedArgs );\r\n\t\t};\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( cmd.isScreen ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\tconst screenData = getScreenData( undefined, cmd.name );\r\n\t\t\tif( screenData !== false ) {\r\n\t\t\t\treturn piData.commands[ cmd.name ]( screenData, parsedArgs );\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( parsedArgs );\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Get screen data for command execution\r\n * \r\n * @param {number|undefined} screenId - Screen ID or undefined for active screen\r\n * @param {string} commandName - Command name for error messages\r\n * @returns {Object|boolean} Screen data or false\r\n */\r\nexport function getScreenData( screenId, commandName ) {\r\n\tif( piData.activeScreen === null ) {\r\n\t\tif( commandName === \"set\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use native Error for missing screen\r\n\t\tconst error = new Error( `${commandName}: No screens available for command.` );\r\n\t\terror.code = \"NO_SCREEN\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( screenId === undefined || screenId === null ) {\r\n\t\tscreenId = piData.activeScreen.id;\r\n\t}\r\n\r\n\tif( utils.isInteger( screenId ) && !piData.screens[ screenId ] ) {\r\n\t\t// Use native Error for invalid screen ID\r\n\t\tconst error = new Error( `${commandName}: Invalid screen id.` );\r\n\t\terror.code = \"INVALID_SCREEN_ID\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn piData.screens[ screenId ];\r\n}\r\n\r\n", "/**\n * Pi.js - Core Commands Module\n * \n * Core system commands including screen management and global settings.\n * \n * @module modules/core-commands\n */\n\n\"use strict\";\n\nimport { getScreenData } from \"../core/command-system.js\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Set the active screen\n\tpi._.addCommand( \"setScreen\", setScreen, false, false, [ \"screen\" ] );\n\tpi._.addSetting( \"screen\", setScreen, false, [ \"screen\" ] );\n\n\tfunction setScreen( args ) {\n\t\tconst screenObj = args[ 0 ];\n\t\tlet screenId;\n\n\t\tif( pi.util.isInteger( screenObj ) ) {\n\t\t\tscreenId = screenObj;\n\t\t} else if( screenObj && pi.util.isInteger( screenObj.id ) ) {\n\t\t\tscreenId = screenObj.id;\n\t\t}\n\n\t\tif( !piData.screens[ screenId ] ) {\n\t\t\tconst error = new Error( \"screen: Invalid screen.\" );\n\t\t\terror.code = \"INVALID_SCREEN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.activeScreen = piData.screens[ screenId ];\n\t}\n\n\t// Remove all screens from the page and memory\n\tpi._.addCommand( \"removeAllScreens\", removeAllScreens, false, false, [] );\n\n\tfunction removeAllScreens() {\n\t\tfor( const i in piData.screens ) {\n\t\t\tconst screenData = piData.screens[ i ];\n\t\t\tscreenData.screenObj.removeScreen();\n\t\t}\n\t\tpiData.nextScreenId = 0;\n\t}\n\n\t// Get screen by ID\n\tpi._.addCommand( \"getScreen\", getScreen, false, false, [ \"screenId\" ] );\n\n\tfunction getScreen( args ) {\n\t\tconst screenId = args[ 0 ];\n\t\tconst screen = getScreenData( screenId, \"getScreen\" );\n\t\treturn screen.screenObj;\n\t}\n\n\t// Set the default color\n\tpi._.addCommand( \"setDefaultColor\", setDefaultColor, false, false, [ \"color\" ] );\n\tpi._.addSetting( \"defaultColor\", setDefaultColor, false, [ \"color\" ] );\n\n\tfunction setDefaultColor( args ) {\n\t\tlet c = args[ 0 ];\n\n\t\tif( !isNaN( Number( c ) ) && piData.defaultPalette.length > c ) {\n\t\t\tpiData.defaultColor = c;\n\t\t} else {\n\t\t\tc = pi.util.convertToColor( c );\n\t\t\tif( c === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"setDefaultColor: invalid color value for parameter color.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tpiData.defaultColor = c;\n\t\t}\n\t}\n\n\t// Set the default palette\n\tpi._.addCommand( \"setDefaultPal\", setDefaultPal, false, false, [ \"pal\" ] );\n\tpi._.addSetting( \"defaultPal\", setDefaultPal, false, [ \"pal\" ] );\n\n\tfunction setDefaultPal( args ) {\n\t\tconst pal = args[ 0 ];\n\n\t\tif( !pi.util.isArray( pal ) ) {\n\t\t\tconst error = new TypeError( \"setDefaultPal: parameter pal is not an array.\" );\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( pal.length < 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setDefaultPal: parameter pal must have at least one color value.\"\n\t\t\t);\n\t\t\terror.code = \"EMPTY_PALETTE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.defaultPalette = [];\n\n\t\tif( pal.length > 1 ) {\n\t\t\tpiData.defaultColor = 1;\n\t\t} else {\n\t\t\tpiData.defaultColor = 0;\n\t\t}\n\n\t\tfor( let i = 0; i < pal.length; i++ ) {\n\t\t\tconst c = pi.util.convertToColor( pal[ i ] );\n\t\t\tif( c === null ) {\n\t\t\t\tconsole.warn( \"setDefaultPal: invalid color value inside array pal.\" );\n\t\t\t\tpiData.defaultPalette.push( pi.util.convertToColor( \"#000000\" ) );\n\t\t\t} else {\n\t\t\t\tpiData.defaultPalette.push( c );\n\t\t\t}\n\t\t}\n\n\t\t// Set color 0 to transparent\n\t\tconst firstColor = piData.defaultPalette[ 0 ];\n\t\tpiData.defaultPalette[ 0 ] = pi.util.convertToColor( [\n\t\t\tfirstColor.r,\n\t\t\tfirstColor.g,\n\t\t\tfirstColor.b,\n\t\t\t0\n\t\t] );\n\t}\n\n\t// Get default palette\n\tpi._.addCommand( \"getDefaultPal\", getDefaultPal, false, false, [] );\n\n\tfunction getDefaultPal() {\n\t\tconst colors = [];\n\t\tfor( const color of piData.defaultPalette ) {\n\t\t\tcolors.push( color );\n\t\t}\n\t\treturn colors;\n\t}\n\n\t// Set the default input focus element\n\tpi._.addCommand( \"setDefaultInputFocus\", setDefaultInputFocus, false, false, [ \"element\" ] );\n\tpi._.addSetting( \"defaultInputFocus\", setDefaultInputFocus, false, [ \"element\" ] );\n\n\tfunction setDefaultInputFocus( args ) {\n\t\tlet element = args[ 0 ];\n\n\t\tif( typeof element === \"string\" ) {\n\t\t\telement = document.getElementById( element );\n\t\t}\n\n\t\tif( !element || !pi.util.canAddEventListeners( element ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setDefaultInputFocus: Invalid argument element. \" +\n\t\t\t\t\"Element must be a DOM element or string id of a DOM element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ELEMENT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !( element.tabIndex >= 0 ) ) {\n\t\t\telement.tabIndex = 0;\n\t\t}\n\n\t\tpiData.defaultInputFocus = element;\n\n\t\t// Reinitialize keyboard if command exists\n\t\tif( piData.commands[ \"reinitKeyboard\" ] ) {\n\t\t\tpiData.commands[ \"reinitKeyboard\" ]();\n\t\t}\n\t}\n\n\t// Global settings command\n\tpi._.addCommand( \"set\", set, false, true, piData.settingsList, true );\n\n\tfunction set( screenData, args ) {\n\t\tconst options = args[ 0 ];\n\n\t\t// Loop through all the options\n\t\tfor( const optionName in options ) {\n\t\t\t\n\t\t\t// If the option is a valid setting\n\t\t\tif( piData.settings[ optionName ] ) {\n\n\t\t\t\t// Get the setting data\n\t\t\t\tconst setting = piData.settings[ optionName ];\n\n\t\t\t\t// Parse the options from the setting\n\t\t\t\tlet optionValues = options[ optionName ];\n\n\t\t\t\tif(\n\t\t\t\t\t!pi.util.isArray( optionValues ) &&\n\t\t\t\t\ttypeof optionValues === \"object\"\n\t\t\t\t) {\n\t\t\t\t\toptionValues = pi._.parseOptions( setting, [ optionValues ] );\n\t\t\t\t} else {\n\t\t\t\t\toptionValues = [ optionValues ];\n\t\t\t\t}\n\n\t\t\t\t// Call the setting function\n\t\t\t\tif( setting.isScreen ) {\n\t\t\t\t\tif( !screenData ) {\n\t\t\t\t\t\tscreenData = getScreenData( undefined, `set ${setting.name}` );\n\t\t\t\t\t}\n\t\t\t\t\tsetting.fn( screenData, optionValues );\n\t\t\t\t} else {\n\t\t\t\t\tsetting.fn( optionValues );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - Screen Helper Functions Module\n * \n * Helper functions for screen operations, color resolution, pixel operations,\n * blend modes, and pen drawing.\n * \n * @module modules/screen-helper\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Blend Commands\n\n\tpi._.addBlendCommand( \"normal\", normalBlend );\n\n\tfunction normalBlend( screenData, x, y, c ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\tdata[ i ] = c.r;\n\t\tdata[ i + 1 ] = c.g;\n\t\tdata[ i + 2 ] = c.b;\n\t\tdata[ i + 3 ] = c.a;\n\t}\n\n\tpi._.addBlendCommand( \"blend\", blendPixel );\n\n\tfunction blendPixel( screenData, x, y, c ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\t// displayColor = sourceColor \u00D7 alpha / 255 + backgroundColor \u00D7 (255 \u2013 alpha) / 255\n\t\t// blend = ( source * source_alpha) + destination * ( 1 - source_alpha)\n\t\tconst pct = c.a / 255;\n\t\tconst pct2 = ( 255 - c.a ) / 255;\n\n\t\tdata[ i ] = ( c.r * pct ) + data[ i ] * pct2;\n\t\tdata[ i + 1 ] = ( c.g * pct ) + data[ i + 1 ] * pct2;\n\t\tdata[ i + 2 ] = ( c.b * pct ) + data[ i + 2 ] * pct2;\n\n\t\t// Alpha blending formula: result_alpha = source_alpha + dest_alpha * (1 - source_alpha)\n\t\tdata[ i + 3 ] = c.a + data[ i + 3 ] * pct2;\n\t}\n\n\t// ImageData Helpers\n\n\tpi._.addCommand( \"getImageData\", getImageData, true, false );\n\n\tfunction getImageData( screenData ) {\n\t\tif( screenData.dirty === false || screenData.imageData === null ) {\n\t\t\tscreenData.imageData = screenData.context.getImageData(\n\t\t\t\t0, 0, screenData.width, screenData.height\n\t\t\t);\n\t\t}\n\t}\n\n\tpi._.addCommand( \"resetImageData\", resetImageData, true, false );\n\n\tfunction resetImageData( screenData ) {\n\t\tscreenData.imageData = null;\n\t}\n\n\tpi._.addCommand( \"setImageDirty\", setImageDirty, true, false );\n\n\tfunction setImageDirty( screenData ) {\n\t\tif( screenData.dirty === false ) {\n\t\t\tscreenData.dirty = true;\n\n\t\t\tif(\n\t\t\t\tscreenData.isAutoRender &&\n\t\t\t\t!screenData.autoRenderMicrotaskScheduled\n\t\t\t) {\n\t\t\t\tscreenData.autoRenderMicrotaskScheduled = true;\n\n\t\t\t\tpi.util.queueMicrotask( function() {\n\t\t\t\t\tif( screenData.screenObj && screenData.isAutoRender ) {\n\t\t\t\t\t\tscreenData.screenObj.render();\n\t\t\t\t\t}\n\t\t\t\t\tscreenData.autoRenderMicrotaskScheduled = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Pixel Operations\n\n\tpi._.addCommand( \"setPixel\", setPixel, true, false );\n\n\tfunction setPixel( screenData, x, y, c ) {\n\t\tscreenData.blendPixelCmd( screenData, x, y, c );\n\t}\n\n\tpi._.addCommand( \"setPixelSafe\", setPixelSafe, true, false );\n\tpi._.addPen( \"pixel\", setPixelSafe, \"square\" );\n\n\tfunction setPixelSafe( screenData, x, y, c ) {\n\t\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\n\t\t\treturn;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tc = getPixelColor( screenData, c );\n\t\tscreenData.blendPixelCmd( screenData, x, y, c );\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"getPixelColor\", getPixelColor, true, false );\n\n\tfunction getPixelColor( screenData, c ) {\n\t\tconst noise = screenData.pen.noise;\n\n\t\tif( !noise ) {\n\t\t\treturn c;\n\t\t}\n\n\t\tconst c2 = { \"r\": c.r, \"g\": c.g, \"b\": c.b, \"a\": c.a };\n\t\tconst half = noise / 2;\n\n\t\tif( pi.util.isArray( noise ) ) {\n\t\t\tc2.r = pi.util.clamp(\n\t\t\t\tMath.round( c2.r + pi.util.rndRange( -noise[ 0 ], noise[ 0 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.g = pi.util.clamp(\n\t\t\t\tMath.round( c2.g + pi.util.rndRange( -noise[ 1 ], noise[ 1 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.b = pi.util.clamp(\n\t\t\t\tMath.round( c2.b + pi.util.rndRange( -noise[ 2 ], noise[ 2 ] ) ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t\tc2.a = pi.util.clamp(\n\t\t\t\tc2.a + pi.util.rndRange( -noise[ 3 ], noise[ 3 ] ),\n\t\t\t\t0, 255\n\t\t\t);\n\t\t} else {\n\t\t\tconst change = Math.round( Math.random() * noise - half );\n\t\t\tc2.r = pi.util.clamp( c2.r + change, 0, 255 );\n\t\t\tc2.g = pi.util.clamp( c2.g + change, 0, 255 );\n\t\t\tc2.b = pi.util.clamp( c2.b + change, 0, 255 );\n\t\t}\n\n\t\treturn c2;\n\t}\n\n\t// Pen Drawing Functions\n\n\tpi._.addCommand( \"drawSquarePen\", drawSquarePen, true, false );\n\tpi._.addPen( \"square\", drawSquarePen, \"square\" );\n\n\tfunction drawSquarePen( screenData, x, y, c ) {\n\t\t// Size must always be an odd number\n\t\tconst size = screenData.pen.size * 2 - 1;\n\n\t\t// Compute the center offset of the square\n\t\tconst offset = Math.round( size / 2 ) - 1;\n\n\t\t// Draw the square\n\t\tfor( let y2 = 0; y2 < size; y2++ ) {\n\t\t\tfor( let x2 = 0; x2 < size; x2++ ) {\n\t\t\t\tpiData.commands.setPixelSafe(\n\t\t\t\t\tscreenData,\n\t\t\t\t\tx2 + x - offset,\n\t\t\t\t\ty2 + y - offset,\n\t\t\t\t\tc\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"drawCirclePen\", drawCirclePen, true, false );\n\tpi._.addPen( \"circle\", drawCirclePen, \"round\" );\n\n\tfunction drawCirclePen( screenData, x, y, c ) {\n\t\t\n\t\t// Special case for pen size 2\n\t\tif( screenData.pen.size === 2 ) {\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x + 1, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x - 1, y, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y + 1, c );\n\t\t\tpiData.commands.setPixelSafe( screenData, x, y - 1, c );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Double size to get the size of the outer box\n\t\tconst size = screenData.pen.size * 2;\n\n\t\t// Half is size of radius\n\t\tconst half = screenData.pen.size;\n\n\t\t// Calculate the center of circle\n\t\tconst offset = half - 1;\n\n\t\t// Loop through the square boundary outside of the circle\n\t\tfor( let y2 = 0; y2 < size; y2++ ) {\n\t\t\tfor( let x2 = 0; x2 < size; x2++ ) {\n\n\t\t\t\t// Compute the coordinates\n\t\t\t\tconst x3 = x2 - offset;\n\t\t\t\tconst y3 = y2 - offset;\n\n\t\t\t\t// Compute the radius of point - round to make pixel perfect\n\t\t\t\tconst r = Math.round( Math.sqrt( x3 * x3 + y3 * y3 ) );\n\n\t\t\t\t// Only draw the pixel if it is inside the circle\n\t\t\t\tif( r < half ) {\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, x3 + x, y3 + y, c );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tpi._.addCommand( \"getPixelInternal\", getPixelInternal, true, false );\n\n\tfunction getPixelInternal( screenData, x, y ) {\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index of the color\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\n\t\treturn {\n\t\t\t\"r\": data[ i ],\n\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\"a\": data[ i + 3 ]\n\t\t};\n\t}\n\n\tpi._.addCommand( \"getPixelSafe\", getPixelSafe, true, false );\n\n\tfunction getPixelSafe( screenData, x, y ) {\n\t\tpiData.commands.getImageData( screenData );\n\t\treturn getPixelInternal( screenData, x, y );\n\t}\n\n\t// Color Resolution\n\n\tpi._.addCommand( \"findColorValue\", findColorValue, true, false );\n\n\tfunction findColorValue( screenData, colorInput, commandName ) {\n\t\tlet colorValue;\n\n\t\tif( pi.util.isInteger( colorInput ) ) {\n\t\t\tif( colorInput > screenData.pal.length ) {\n\t\t\t\tconst error = new RangeError(\n\t\t\t\t\t`${commandName}: parameter color is not a color in the palette.`\n\t\t\t\t);\n\t\t\t\terror.code = \"COLOR_OUT_OF_RANGE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tcolorValue = screenData.pal[ colorInput ];\n\t\t} else {\n\t\t\tcolorValue = pi.util.convertToColor( colorInput );\n\t\t\tif( colorValue === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t`${commandName}: parameter color is not a valid color format.`\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn colorValue;\n\t}\n\n\t// PUT - Put pixel data to screen\n\tpi._.addCommand( \"put\", put, false, true, [ \"data\", \"x\", \"y\", \"includeZero\" ] );\n\n\tfunction put( screenData, args ) {\n\t\tconst data = args[ 0 ];\n\t\tlet x = Math.round( args[ 1 ] );\n\t\tlet y = Math.round( args[ 2 ] );\n\t\tconst includeZero = !!args[ 3 ];\n\n\t\t// Exit if no data\n\t\tif( !data || data.length < 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"put: parameters x and y must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Clip x if offscreen\n\t\tlet startX;\n\t\tif( x < 0 ) {\n\t\t\tstartX = x * -1;\n\t\t} else {\n\t\t\tstartX = 0;\n\t\t}\n\n\t\t// Clip y if offscreen\n\t\tlet startY;\n\t\tif( y < 0 ) {\n\t\t\tstartY = y * -1;\n\t\t} else {\n\t\t\tstartY = 0;\n\t\t}\n\n\t\t// Calc width & height\n\t\tlet width = data[ 0 ].length - startX;\n\t\tlet height = data.length - startY;\n\n\t\t// Clamp width & height\n\t\tif( x + startX + width >= screenData.width ) {\n\t\t\twidth = screenData.width - x - startX;\n\t\t}\n\t\tif( y + startY + height >= screenData.height ) {\n\t\t\theight = screenData.height - y - startY;\n\t\t}\n\n\t\t// Exit if there is no data that fits the screen\n\t\tif( width <= 0 || height <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Loop through the data\n\t\tfor( let dataY = startY; dataY < startY + height; dataY++ ) {\n\t\t\tfor( let dataX = startX; dataX < startX + width; dataX++ ) {\n\n\t\t\t\t// Get the color\n\t\t\t\tconst c = screenData.pal[ data[ dataY ][ dataX ] ];\n\n\t\t\t\t// Calculate the index of the image data\n\t\t\t\tconst i = ( ( screenData.width * ( y + dataY ) ) + ( x + dataX ) ) * 4;\n\n\t\t\t\t// Put the color in the image data\n\t\t\t\tif( c && ( c.a > 0 || includeZero ) ) {\n\t\t\t\t\tscreenData.imageData.data[ i ] = c.r;\n\t\t\t\t\tscreenData.imageData.data[ i + 1 ] = c.g;\n\t\t\t\t\tscreenData.imageData.data[ i + 2 ] = c.b;\n\t\t\t\t\tscreenData.imageData.data[ i + 3 ] = c.a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// Set defaults\n\tpiData.defaultPenDraw = setPixelSafe;\n\tpiData.defaultBlendCmd = normalBlend;\n}\n\n", "/**\n * Pi.js - Screen Module\n * \n * Screen creation and management for Pi.js.\n * Creates canvas elements, manages multiple screens, handles aspect ratios.\n * \n * @module modules/screen\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Main screen creation command\n\tpi._.addCommand( \"screen\", screen, false, false,\n\t\t[ \"aspect\", \"container\", \"isOffscreen\", \"willReadFrequently\", \"noStyles\",\n\t\t \"isMultiple\", \"resizeCallback\" ]\n\t);\n\n\tfunction screen( args ) {\n\t\tconst aspect = args[ 0 ];\n\t\tconst container = args[ 1 ];\n\t\tconst isOffscreen = args[ 2 ];\n\t\tconst willReadFrequently = !!( args[ 3 ] );\n\t\tconst noStyles = args[ 4 ];\n\t\tconst isMultiple = args[ 5 ];\n\t\tconst resizeCallback = args[ 6 ];\n\n\t\tlet aspectData;\n\n\t\t// Validate resize callback\n\t\tif( resizeCallback != null && !pi.util.isFunction( resizeCallback ) ) {\n\t\t\tconst error = new TypeError( \"screen: resizeCallback must be a function.\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Parse aspect ratio\n\t\tif( typeof aspect === \"string\" && aspect !== \"\" ) {\n\t\t\taspectData = parseAspect( aspect.toLowerCase() );\n\t\t\tif( !aspectData ) {\n\t\t\t\tconst error = new Error( \"screen: invalid value for aspect.\" );\n\t\t\t\terror.code = \"INVALID_ASPECT\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\taspectData.isMultiple = !!( isMultiple );\n\t\t}\n\n\t\t// Create appropriate screen type\n\t\tlet screenData;\n\n\t\tif( isOffscreen ) {\n\t\t\tif( !aspectData ) {\n\t\t\t\tconst error = new Error(\n\t\t\t\t\t\"screen: You must supply an aspect ratio with exact dimensions \" +\n\t\t\t\t\t\"for offscreen screens.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"NO_ASPECT_OFFSCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( aspectData.splitter !== \"x\" ) {\n\t\t\t\tconst error = new Error(\n\t\t\t\t\t\"screen: You must use aspect ratio with e(x)act pixel dimensions \" +\n\t\t\t\t\t\"such as 320x200 for offscreen screens.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_OFFSCREEN_ASPECT\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData = createOffscreenScreen( aspectData, willReadFrequently );\n\t\t} else {\n\t\t\tlet containerEl = container;\n\t\t\tif( typeof container === \"string\" ) {\n\t\t\t\tcontainerEl = document.getElementById( container );\n\t\t\t}\n\t\t\tif( containerEl && !pi.util.isDomElement( containerEl ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"screen: Invalid argument container. Container must be a DOM element \" +\n\t\t\t\t\t\"or a string id of a DOM element.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_CONTAINER\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( noStyles ) {\n\t\t\t\tscreenData = createNoStyleScreen( aspectData, containerEl, willReadFrequently );\n\t\t\t} else {\n\t\t\t\tscreenData = createScreen(\n\t\t\t\t\taspectData, containerEl, resizeCallback, willReadFrequently\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Setup screen cache\n\t\tscreenData.cache = { \"findColor\": {} };\n\n\t\t// Create screen object\n\t\tconst screenObj = {};\n\t\tscreenData.commands = {};\n\n\t\t// Loop through all the screen commands\n\t\tfor( const cmdName in piData.screenCommands ) {\n\t\t\tconst commandData = piData.screenCommands[ cmdName ];\n\t\t\tscreenData.commands[ cmdName ] = commandData.fn;\n\n\t\t\t// Setup the API command on screenObj\n\t\t\tsetupApiCommand( screenObj, cmdName, screenData, commandData );\n\t\t}\n\n\t\t// Assign screen object reference\n\t\tscreenData.screenObj = screenObj;\n\t\tscreenObj.id = screenData.id;\n\t\tscreenObj.screen = true;\n\n\t\treturn screenObj;\n\t}\n\n\t// Setup API command method on screen object\n\tfunction setupApiCommand( screenObj, name, screenData, cmd ) {\n\t\tscreenObj[ name ] = function( ...args ) {\n\t\t\tconst parsedArgs = pi._.parseOptions( cmd, args );\n\t\t\treturn screenData.commands[ name ]( screenData, parsedArgs );\n\t\t};\n\t}\n\n\t// Parse aspect ratio string\n\tfunction parseAspect( aspect ) {\n\t\tlet width, height, parts, splitter;\n\n\t\t// 2 types of ratios: percentage or exact pixels\n\t\tif( aspect.indexOf( \":\" ) > -1 ) {\n\t\t\tsplitter = \":\";\n\t\t} else if( aspect.indexOf( \"x\" ) > -1 ) {\n\t\t\tsplitter = \"x\";\n\t\t} else if( aspect.indexOf( \"e\" ) > -1 ) {\n\t\t\tsplitter = \"e\";\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tparts = aspect.split( splitter );\n\n\t\t// Get the width and validate it\n\t\twidth = Number( parts[ 0 ] );\n\t\tif( isNaN( width ) || width === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Get the height and validate it\n\t\theight = Number( parts[ 1 ] );\n\t\tif( isNaN( height ) || height === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\t\"width\": width,\n\t\t\t\"height\": height,\n\t\t\t\"splitter\": splitter\n\t\t};\n\t}\n\n\t// Create offscreen canvas\n\tfunction createOffscreenScreen( aspectData, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tcanvas.width = aspectData.width;\n\t\tcanvas.height = aspectData.height;\n\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\t\tbufferCanvas.width = aspectData.width;\n\t\tbufferCanvas.height = aspectData.height;\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, null, aspectData, true,\n\t\t\tfalse, null, willReadFrequently\n\t\t);\n\t}\n\n\t// Create screen with default styling\n\tfunction createScreen( aspectData, container, resizeCallback, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\n\t\t// Style the canvas\n\t\tcanvas.style.backgroundColor = \"black\";\n\t\tcanvas.style.position = \"absolute\";\n\t\tcanvas.style.imageRendering = \"pixelated\";\n\t\tcanvas.style.imageRendering = \"crisp-edges\";\n\n\t\t// If no container, use document body\n\t\tlet isContainer = true;\n\t\tif( !pi.util.isDomElement( container ) ) {\n\t\t\tisContainer = false;\n\t\t\tdocument.documentElement.style.height = \"100%\";\n\t\t\tdocument.documentElement.style.margin = \"0\";\n\t\t\tdocument.body.style.height = \"100%\";\n\t\t\tdocument.body.style.margin = \"0\";\n\t\t\tdocument.body.style.overflow = \"hidden\";\n\t\t\tcanvas.style.left = \"0\";\n\t\t\tcanvas.style.top = \"0\";\n\t\t\tcontainer = document.body;\n\t\t}\n\n\t\t// Make sure container is not blank\n\t\tif( container.offsetHeight === 0 ) {\n\t\t\tcontainer.style.height = \"200px\";\n\t\t}\n\n\t\t// Append canvas to container\n\t\tcontainer.appendChild( canvas );\n\n\t\tif( aspectData ) {\n\t\t\t// Calculate container size\n\t\t\tconst size = getSize( container );\n\n\t\t\t// Set the canvas size\n\t\t\tsetCanvasSize( aspectData, canvas, size.width, size.height );\n\n\t\t\t// Set the buffer size\n\t\t\tbufferCanvas.width = canvas.width;\n\t\t\tbufferCanvas.height = canvas.height;\n\t\t} else {\n\t\t\t// If canvas is inside an element, use static position\n\t\t\tif( isContainer ) {\n\t\t\t\tcanvas.style.position = \"static\";\n\t\t\t}\n\n\t\t\t// Set canvas to fullscreen\n\t\t\tcanvas.style.width = \"100%\";\n\t\t\tcanvas.style.height = \"100%\";\n\t\t\tconst size = getSize( canvas );\n\t\t\tcanvas.width = size.width;\n\t\t\tcanvas.height = size.height;\n\t\t\tbufferCanvas.width = size.width;\n\t\t\tbufferCanvas.height = size.height;\n\t\t}\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, container, aspectData, false,\n\t\t\tfalse, resizeCallback, willReadFrequently\n\t\t);\n\t}\n\n\t// Create screen without styles\n\tfunction createNoStyleScreen( aspectData, container, willReadFrequently ) {\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst bufferCanvas = document.createElement( \"canvas\" );\n\n\t\t// If no container, use document body\n\t\tif( !pi.util.isDomElement( container ) ) {\n\t\t\tcontainer = document.body;\n\t\t}\n\n\t\t// Append canvas to container\n\t\tcontainer.appendChild( canvas );\n\n\t\tif( aspectData && aspectData.splitter === \"x\" ) {\n\t\t\t// Set the buffer size\n\t\t\tcanvas.width = aspectData.width;\n\t\t\tcanvas.height = aspectData.height;\n\t\t\tbufferCanvas.width = canvas.width;\n\t\t\tbufferCanvas.height = canvas.height;\n\t\t} else {\n\t\t\tconst size = getSize( canvas );\n\t\t\tbufferCanvas.width = size.width;\n\t\t\tbufferCanvas.height = size.height;\n\t\t}\n\n\t\treturn createScreenData(\n\t\t\tcanvas, bufferCanvas, container, aspectData, false,\n\t\t\ttrue, null, willReadFrequently\n\t\t);\n\t}\n\n\t// Create the screen data object\n\tfunction createScreenData(\n\t\tcanvas, bufferCanvas, container, aspectData, isOffscreen, isNoStyles,\n\t\tresizeCallback, willReadFrequently\n\t) {\n\t\tconst screenData = {};\n\n\t\t// Set the screen id\n\t\tscreenData.id = piData.nextScreenId;\n\t\tpiData.nextScreenId += 1;\n\t\tpiData.activeScreen = screenData;\n\n\t\t// Set the screenId on the canvas\n\t\tcanvas.dataset.screenId = screenData.id;\n\n\t\t// Context attributes\n\t\tif( willReadFrequently ) {\n\t\t\tscreenData.contextAttributes = { \"willReadFrequently\": true };\n\t\t} else {\n\t\t\tscreenData.contextAttributes = {};\n\t\t}\n\n\t\t// Set the screen default data\n\t\tscreenData.canvas = canvas;\n\t\tscreenData.width = canvas.width;\n\t\tscreenData.height = canvas.height;\n\t\tscreenData.container = container;\n\t\tscreenData.aspectData = aspectData;\n\t\tscreenData.isOffscreen = isOffscreen;\n\t\tscreenData.isNoStyles = isNoStyles;\n\t\tscreenData.context = canvas.getContext( \"2d\", screenData.contextAttributes );\n\t\tscreenData.bufferCanvas = bufferCanvas;\n\t\tscreenData.bufferContext = bufferCanvas.getContext(\n\t\t\t\"2d\", screenData.contextAttributes\n\t\t);\n\t\tscreenData.dirty = false;\n\t\tscreenData.isAutoRender = true;\n\t\tscreenData.autoRenderMicrotaskScheduled = false;\n\t\tscreenData.imageData = null;\n\t\tscreenData.x = 0;\n\t\tscreenData.y = 0;\n\t\tscreenData.angle = 0;\n\t\tscreenData.pal = piData.defaultPalette.slice();\n\t\tscreenData.fColor = screenData.pal[ piData.defaultColor ] || \n\t\t\tpi.util.convertToColor( \"#FFFFFF\" );\n\t\tscreenData.bColor = screenData.pal[ 0 ] || pi.util.convertToColor( \"#000000\" );\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.strokeStyle = screenData.fColor.s;\n\t\tscreenData.mouseStarted = false;\n\t\tscreenData.touchStarted = false;\n\t\tscreenData.printCursor = {\n\t\t\t\"x\": 0,\n\t\t\t\"y\": 0,\n\t\t\t\"font\": piData.defaultFont,\n\t\t\t\"rows\": Math.floor( canvas.height / ( piData.defaultFont.height || 14 ) ),\n\t\t\t\"cols\": Math.floor( canvas.width / ( piData.defaultFont.width || 8 ) ),\n\t\t\t\"prompt\": piData.defaultPrompt,\n\t\t\t\"breakWord\": true\n\t\t};\n\t\tscreenData.clientRect = canvas.getBoundingClientRect();\n\t\tscreenData.mouse = {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"offsetX\": 0,\n\t\t\t\"offsetY\": 0,\n\t\t\t\"button\": 0,\n\t\t\t\"buttons\": 0,\n\t\t\t\"lastX\": -1,\n\t\t\t\"lastY\": -1,\n\t\t\t\"eventType\": \"\"\n\t\t};\n\t\tscreenData.touch = {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"count\": 0,\n\t\t\t\"touches\": [],\n\t\t\t\"eventType\": \"\"\n\t\t};\n\t\tscreenData.touches = {};\n\t\tscreenData.lastTouches = {};\n\t\tscreenData.pixelMode = true;\n\t\tscreenData.pen = {\n\t\t\t\"draw\": piData.defaultPenDraw,\n\t\t\t\"size\": 1,\n\t\t\t\"noise\": null\n\t\t};\n\t\tscreenData.blendPixelCmd = piData.defaultBlendCmd;\n\n\t\t// Disable anti-aliasing\n\t\tscreenData.context.imageSmoothingEnabled = false;\n\n\t\t// Event listeners\n\t\tscreenData.onMouseEventListeners = {};\n\t\tscreenData.onTouchEventListeners = {};\n\t\tscreenData.onPressEventListeners = {};\n\t\tscreenData.onClickEventListeners = {};\n\t\tscreenData.mouseEventListenersActive = 0;\n\t\tscreenData.touchEventListenersActive = 0;\n\t\tscreenData.pressEventListenersActive = 0;\n\t\tscreenData.clickEventListenersActive = 0;\n\t\tscreenData.lastEvent = null;\n\n\t\t// Right click is enabled\n\t\tscreenData.isContextMenuEnabled = true;\n\n\t\t// Resize callback\n\t\tscreenData.resizeCallback = resizeCallback;\n\n\t\t// Register this screen\n\t\tpiData.screens[ screenData.id ] = screenData;\n\n\t\treturn screenData;\n\t}\n\n\t// Set canvas size based on aspect ratio\n\tfunction setCanvasSize( aspectData, canvas, maxWidth, maxHeight ) {\n\t\tlet width = aspectData.width;\n\t\tlet height = aspectData.height;\n\t\tconst splitter = aspectData.splitter;\n\t\tlet newWidth, newHeight;\n\n\t\t// If set size to exact multiple\n\t\tif( aspectData.isMultiple && splitter !== \":\" ) {\n\t\t\tconst factorX = Math.floor( maxWidth / width );\n\t\t\tconst factorY = Math.floor( maxHeight / height );\n\t\t\tlet factor = factorX > factorY ? factorY : factorX;\n\t\t\tif( factor < 1 ) {\n\t\t\t\tfactor = 1;\n\t\t\t}\n\t\t\tnewWidth = width * factor;\n\t\t\tnewHeight = height * factor;\n\n\t\t\t// Extending the canvas to match container size\n\t\t\tif( splitter === \"e\" ) {\n\t\t\t\twidth = Math.floor( maxWidth / factor );\n\t\t\t\theight = Math.floor( maxHeight / factor );\n\t\t\t\tnewWidth = width * factor;\n\t\t\t\tnewHeight = height * factor;\n\t\t\t}\n\t\t} else {\n\t\t\t// Calculate the screen ratios\n\t\t\tconst ratio1 = height / width;\n\t\t\tconst ratio2 = width / height;\n\t\t\tnewWidth = maxHeight * ratio2;\n\t\t\tnewHeight = maxWidth * ratio1;\n\n\t\t\t// Calculate the best fit\n\t\t\tif( newWidth > maxWidth ) {\n\t\t\t\tnewWidth = maxWidth;\n\t\t\t\tnewHeight = newWidth * ratio1;\n\t\t\t} else {\n\t\t\t\tnewHeight = maxHeight;\n\t\t\t}\n\n\t\t\t// Extending canvas\n\t\t\tif( splitter === \"e\" ) {\n\t\t\t\twidth += Math.round( ( maxWidth - newWidth ) * ( width / newWidth ) );\n\t\t\t\theight += Math.round( ( maxHeight - newHeight ) * ( height / newHeight ) );\n\t\t\t\tnewWidth = maxWidth;\n\t\t\t\tnewHeight = maxHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Set the size\n\t\tcanvas.style.width = Math.floor( newWidth ) + \"px\";\n\t\tcanvas.style.height = Math.floor( newHeight ) + \"px\";\n\n\t\t// Set the margins\n\t\tcanvas.style.marginLeft = Math.floor( ( maxWidth - newWidth ) / 2 ) + \"px\";\n\t\tcanvas.style.marginTop = Math.floor( ( maxHeight - newHeight ) / 2 ) + \"px\";\n\n\t\t// Set the actual canvas dimensions\n\t\tif( splitter === \"x\" || splitter === \"e\" ) {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t} else {\n\t\t\t// For ratio mode, set to container size\n\t\t\tcanvas.width = Math.floor( newWidth );\n\t\t\tcanvas.height = Math.floor( newHeight );\n\t\t}\n\t}\n\n\t// Get size of container\n\tfunction getSize( element ) {\n\t\treturn {\n\t\t\t\"width\": element.offsetWidth || element.clientWidth || element.width,\n\t\t\t\"height\": element.offsetHeight || element.clientHeight || element.height\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Screen Commands Module\n * \n * Basic screen commands like remove, render, width/height getters, etc.\n * \n * @module modules/screen-commands\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// ONEVENT - Helper for adding event listeners (internal)\n\tpi._.addCommand( \"onevent\", onevent, true, true, [] );\n\n\tfunction onevent( mode, fn, once, hitBox, modes, name, listenerArr, extraId,\n\t\textraData, customData\n\t) {\n\t\t// Make sure mode is valid\n\t\tlet modeFound = false;\n\n\t\tfor( let i = 0; i < modes.length; i++ ) {\n\t\t\tif( mode === modes[ i ] ) {\n\t\t\t\tmodeFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif( !modeFound ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`${name}: mode needs to be one of the following ${modes.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Make sure once is a boolean\n\t\tonce = !!once;\n\n\t\t// Make sure function is valid\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( `${name}: fn is not a valid function` );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate hitbox\n\t\tif( hitBox ) {\n\t\t\tif(\n\t\t\t\t!pi.util.isInteger( hitBox.x ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.y ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.width ) ||\n\t\t\t\t!pi.util.isInteger( hitBox.height )\n\t\t\t) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t`${name}: hitbox must have properties x, y, width, and height whose values are integers`\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_HITBOX\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Prevent event from being triggered in case event is called in an event\n\t\tsetTimeout( function() {\n\t\t\tconst originalFn = fn;\n\t\t\tlet newMode;\n\n\t\t\t// Add extraId to mode\n\t\t\tif( typeof extraId === \"string\" ) {\n\t\t\t\tnewMode = mode + extraId;\n\t\t\t} else {\n\t\t\t\tnewMode = mode;\n\t\t\t}\n\n\t\t\t// If it's a one time function\n\t\t\tif( once ) {\n\t\t\t\tfn = function( data, customData ) {\n\t\t\t\t\toffevent( mode, originalFn, modes, name, listenerArr, extraId );\n\t\t\t\t\toriginalFn( data, customData );\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif( !listenerArr[ newMode ] ) {\n\t\t\t\tlistenerArr[ newMode ] = [];\n\t\t\t}\n\n\t\t\tlistenerArr[ newMode ].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"hitBox\": hitBox,\n\t\t\t\t\"extraData\": extraData,\n\t\t\t\t\"clickDown\": false,\n\t\t\t\t\"originalFn\": originalFn,\n\t\t\t\t\"customData\": customData\n\t\t\t} );\n\t\t}, 1 );\n\n\t\treturn true;\n\t}\n\n\t// OFFEVENT - Helper for removing event listeners (internal)\n\tpi._.addCommand( \"offevent\", offevent, true, true, [] );\n\n\tfunction offevent( mode, fn, modes, name, listenerArr, extraId ) {\n\t\t// Make sure mode is valid\n\t\tlet modeFound = false;\n\n\t\tfor( let i = 0; i < modes.length; i++ ) {\n\t\t\tif( mode === modes[ i ] ) {\n\t\t\t\tmodeFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif( !modeFound ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`${name}: mode needs to be one of the following ${modes.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Add extraId to mode\n\t\tif( typeof extraId === \"string\" ) {\n\t\t\tmode += extraId;\n\t\t}\n\n\t\t// Validate fn\n\t\tconst isClear = fn == null;\n\t\tif( !isClear && !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( `${name}: fn is not a valid function` );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( listenerArr[ mode ] ) {\n\t\t\tif( isClear ) {\n\t\t\t\tdelete listenerArr[ mode ];\n\t\t\t} else {\n\t\t\t\tfor( let i = listenerArr[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\t\tif( listenerArr[ mode ][ i ].originalFn === fn ) {\n\t\t\t\t\t\tlistenerArr[ mode ].splice( i, 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( listenerArr[ mode ].length === 0 ) {\n\t\t\t\t\t\tdelete listenerArr[ mode ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// CLEAREVENTS - Clear all event listeners\n\tpi._.addCommand( \"clearEvents\", clearEvents, false, true, [] );\n\n\tfunction clearEvents( screenData ) {\n\t\t// Reset all event listeners\n\t\tscreenData.onMouseEventListeners = {};\n\t\tscreenData.onTouchEventListeners = {};\n\t\tscreenData.onPressEventListeners = {};\n\t\tscreenData.onClickEventListeners = {};\n\t\tscreenData.mouseEventListenersActive = 0;\n\t\tscreenData.touchEventListenersActive = 0;\n\t\tscreenData.pressEventListenersActive = 0;\n\t\tscreenData.clickEventListenersActive = 0;\n\t\tscreenData.lastEvent = null;\n\t}\n\n\t// SETAUTORENDER - Enable/disable automatic rendering\n\tpi._.addCommand( \"setAutoRender\", setAutoRender, false, true, [ \"isAutoRender\" ] );\n\tpi._.addSetting( \"autoRender\", setAutoRender, true, [ \"isAutoRender\" ] );\n\n\tfunction setAutoRender( screenData, args ) {\n\t\tscreenData.isAutoRender = !!args[ 0 ];\n\n\t\tif( screenData.isAutoRender ) {\n\t\t\tscreenData.screenObj.render();\n\t\t}\n\t}\n\n\t// Remove the screen from the page and memory\n\tpi._.addCommand( \"removeScreen\", removeScreen, false, true, [] );\n\n\tfunction removeScreen( screenData ) {\n\t\tconst screenId = screenData.id;\n\n\t\t// If removing active screen, find another\n\t\tif( screenData === piData.activeScreen ) {\n\t\t\tfor( const i in piData.screens ) {\n\t\t\t\tif( piData.screens[ i ] !== screenData ) {\n\t\t\t\t\tpiData.activeScreen = piData.screens[ i ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Cancel input if method exists\n\t\tif( screenData.screenObj.cancelInput ) {\n\t\t\tscreenData.screenObj.cancelInput();\n\t\t}\n\n\t\t// Remove all commands from screen object\n\t\tfor( const i in screenData.screenObj ) {\n\t\t\tdelete screenData.screenObj[ i ];\n\t\t}\n\n\t\t// Remove the canvas from the page\n\t\tif( screenData.canvas.parentElement ) {\n\t\t\tscreenData.canvas.parentElement.removeChild( screenData.canvas );\n\t\t}\n\n\t\t// Set values to null\n\t\tscreenData.canvas = null;\n\t\tscreenData.bufferCanvas = null;\n\t\tscreenData.pal = null;\n\t\tscreenData.commands = null;\n\t\tscreenData.context = null;\n\t\tscreenData.imageData = null;\n\t\tscreenData.screenObj = null;\n\n\t\t// Delete the screen from screens container\n\t\tdelete piData.screens[ screenId ];\n\t}\n\n\t// Render screen (puts buffer to main canvas)\n\tpi._.addCommand( \"render\", render, false, true, [] );\n\n\tfunction render( screenData ) {\n\t\tif( screenData.dirty === true ) {\n\t\t\tscreenData.context.putImageData(\n\t\t\t\tscreenData.imageData, 0, 0\n\t\t\t);\n\t\t\tscreenData.dirty = false;\n\t\t}\n\t}\n\n\t// Get screen width\n\tpi._.addCommand( \"width\", getWidth, false, true, [] );\n\n\tfunction getWidth( screenData ) {\n\t\treturn screenData.width;\n\t}\n\n\t// Get screen height\n\tpi._.addCommand( \"height\", getHeight, false, true, [] );\n\n\tfunction getHeight( screenData ) {\n\t\treturn screenData.height;\n\t}\n\n\t// Get canvas element\n\tpi._.addCommand( \"canvas\", getCanvas, false, true, [] );\n\n\tfunction getCanvas( screenData ) {\n\t\treturn screenData.canvas;\n\t}\n\n\t// Set background color\n\tpi._.addCommand( \"setBgColor\", setBgColor, false, true, [ \"color\" ] );\n\tpi._.addSetting( \"bgColor\", setBgColor, true, [ \"color\" ] );\n\n\tfunction setBgColor( screenData, args ) {\n\t\tlet color = args[ 0 ];\n\t\tlet bc;\n\n\t\tif( pi.util.isInteger( color ) ) {\n\t\t\tbc = screenData.pal[ color ];\n\t\t} else {\n\t\t\tbc = pi.util.convertToColor( color );\n\t\t}\n\n\t\tif( bc && typeof bc.s === \"string\" ) {\n\t\t\tscreenData.canvas.style.backgroundColor = bc.s;\n\t\t} else {\n\t\t\tconst error = new TypeError( \"bgColor: invalid color value for parameter c.\" );\n\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Set container background color\n\tpi._.addCommand( \"setContainerBgColor\", setContainerBgColor, false, true, [ \"color\" ] );\n\tpi._.addSetting( \"containerBgColor\", setContainerBgColor, true, [ \"color\" ] );\n\n\tfunction setContainerBgColor( screenData, args ) {\n\t\tconst color = args[ 0 ];\n\t\tlet bc;\n\n\t\tif( screenData.container ) {\n\t\t\tif( pi.util.isInteger( color ) ) {\n\t\t\t\tbc = screenData.pal[ color ];\n\t\t\t} else {\n\t\t\t\tbc = pi.util.convertToColor( color );\n\t\t\t}\n\n\t\t\tif( bc && typeof bc.s === \"string\" ) {\n\t\t\t\tscreenData.container.style.backgroundColor = bc.s;\n\t\t\t} else {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"containerBgColor: invalid color value for parameter c.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\t// FINDCOLOR - Find or add color to palette\n\tpi._.addCommand( \"findColor\", findColor, false, true,\n\t\t[ \"color\", \"tolerance\", \"isAddToPalette\" ]\n\t);\n\n\tfunction findColor( screenData, args ) {\n\t\tlet color = args[ 0 ];\n\t\tlet tolerance = args[ 1 ];\n\t\tconst isAddToPalette = !!args[ 2 ];\n\n\t\t// Max color difference constant\n\t\tconst m_maxDifference = ( 255 * 255 ) * 3.25;\n\n\t\tif( tolerance == null ) {\n\t\t\ttolerance = 1;\n\t\t} else if( isNaN( tolerance ) || tolerance < 0 || tolerance > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"findColor: parameter tolerance must be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\ttolerance = tolerance * ( 2 - tolerance ) * m_maxDifference;\n\t\tconst pal = screenData.pal;\n\n\t\t// Check cache first\n\t\tif( color && color.s && screenData.cache.findColor[ color.s ] !== undefined ) {\n\t\t\treturn screenData.cache.findColor[ color.s ];\n\t\t}\n\n\t\t// Convert color to color object\n\t\tcolor = piData.commands.findColorValue( screenData, color, \"findColor\" );\n\n\t\t// Find exact match or closest color in palette\n\t\tfor( let i = 0; i < pal.length; i++ ) {\n\t\t\tif( pal[ i ].s === color.s ) {\n\t\t\t\tscreenData.cache.findColor[ color.s ] = i;\n\t\t\t\treturn i;\n\t\t\t} else {\n\t\t\t\tconst dr = pal[ i ].r - color.r;\n\t\t\t\tconst dg = pal[ i ].g - color.g;\n\t\t\t\tconst db = pal[ i ].b - color.b;\n\t\t\t\tconst da = pal[ i ].a - color.a;\n\n\t\t\t\tconst difference = ( dr * dr + dg * dg + db * db + da * da * 0.25 );\n\t\t\t\tconst similarity = m_maxDifference - difference;\n\n\t\t\t\tif( similarity >= tolerance ) {\n\t\t\t\t\tscreenData.cache.findColor[ color.s ] = i;\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to palette if allowed\n\t\tif( isAddToPalette ) {\n\t\t\tpal.push( color );\n\t\t\tscreenData.cache.findColor[ color.s ] = pal.length - 1;\n\t\t\treturn pal.length - 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// SET COLOR - Set drawing color for current screen\n\tpi._.addCommand( \"setColor\", setColor, false, true, [ \"color\", \"isAddToPalette\" ] );\n\tpi._.addSetting( \"color\", setColor, true, [ \"color\", \"isAddToPalette\" ] );\n\n\tfunction setColor( screenData, args ) {\n\t\tconst colorInput = args[ 0 ];\n\t\tconst isAddToPalette = !!args[ 1 ];\n\n\t\tconst colorValue = piData.commands.findColorValue(\n\t\t\tscreenData, colorInput, \"setColor\"\n\t\t);\n\n\t\tif( colorValue === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( isAddToPalette ) {\n\t\t\t// Find or add color to palette\n\t\t\tconst colorIndex = piData.commands.findColor( screenData,\n\t\t\t\t[ colorValue, 1, isAddToPalette ]\n\t\t\t);\n\t\t\tscreenData.fColor = screenData.pal[ colorIndex ];\n\t\t} else {\n\t\t\tscreenData.fColor = colorValue;\n\t\t}\n\n\t\t// Update canvas context styles for AA mode\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.strokeStyle = screenData.fColor.s;\n\t}\n\n\t// SET PEN SIZE - Set pen size for drawing\n\tpi._.addCommand( \"setPenSize\", setPenSize, false, true, [ \"size\" ] );\n\tpi._.addSetting( \"penSize\", setPenSize, true, [ \"size\" ] );\n\n\tfunction setPenSize( screenData, args ) {\n\t\tlet size = args[ 0 ];\n\n\t\tif( size === undefined ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\tif( !pi.util.isInteger( size ) || size < 1 ) {\n\t\t\tconst error = new TypeError( \"setPenSize: size must be an integer >= 1.\" );\n\t\t\terror.code = \"INVALID_PEN_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.pen.size = size;\n\n\t\t// Update canvas line width for AA mode\n\t\tscreenData.context.lineWidth = size;\n\t}\n\n\t// GETPAL - Get screen's palette\n\tpi._.addCommand( \"getPal\", getPal, false, true, [] );\n\n\tfunction getPal( screenData ) {\n\t\tconst colors = [];\n\t\tfor( let i = 0; i < screenData.pal.length; i++ ) {\n\t\t\tconst color = {\n\t\t\t\t\"r\": screenData.pal[ i ].r,\n\t\t\t\t\"g\": screenData.pal[ i ].g,\n\t\t\t\t\"b\": screenData.pal[ i ].b,\n\t\t\t\t\"a\": screenData.pal[ i ].a,\n\t\t\t\t\"s\": screenData.pal[ i ].s\n\t\t\t};\n\t\t\tcolors.push( color );\n\t\t}\n\t\treturn colors;\n\t}\n\n\t// SETPALCOLOR - Set a specific color in the palette\n\tpi._.addCommand( \"setPalColor\", setPalColor, false, true, [ \"index\", \"color\" ] );\n\tpi._.addSetting( \"palColor\", setPalColor, true, [ \"index\", \"color\" ] );\n\n\tfunction setPalColor( screenData, args ) {\n\t\tconst index = args[ 0 ];\n\t\tconst color = args[ 1 ];\n\n\t\tif( !pi.util.isInteger( index ) || index < 0 || index > screenData.pal.length ) {\n\t\t\tconst error = new RangeError( \"setPalColor: index is not a valid integer value\" );\n\t\t\terror.code = \"INVALID_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst colorValue = pi.util.convertToColor( color );\n\t\tif( colorValue === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setPalColor: parameter color is not a valid color format\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Check if we are changing the current selected fore color\n\t\tif( screenData.fColor.s === screenData.pal[ index ].s ) {\n\t\t\tscreenData.fColor = colorValue;\n\t\t}\n\n\t\t// Update the color cache\n\t\tif( screenData.cache.findColor[ color.s ] ) {\n\t\t\tscreenData.cache.findColor[ color.s ] = index;\n\t\t}\n\n\t\tscreenData.pal[ index ] = colorValue;\n\t}\n\n\t// SWAPCOLOR - Swap one color for another in the palette and screen\n\tpi._.addCommand( \"swapColor\", swapColor, false, true, [ \"oldColor\", \"newColor\" ] );\n\n\tfunction swapColor( screenData, args ) {\n\t\tlet oldColor = args[ 0 ];\n\t\tlet newColor = args[ 1 ];\n\n\t\t// Validate oldColor\n\t\tif( !pi.util.isInteger( oldColor ) ) {\n\t\t\tconst error = new TypeError( \"swapColor: parameter oldColor must be an integer\" );\n\t\t\terror.code = \"INVALID_OLD_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( oldColor < 0 || oldColor >= screenData.pal.length ) {\n\t\t\tconst error = new RangeError( \"swapColor: parameter oldColor is an invalid integer\" );\n\t\t\terror.code = \"INVALID_OLD_COLOR_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( screenData.pal[ oldColor ] === undefined ) {\n\t\t\tconst error = new Error(\n\t\t\t\t\"swapColor: parameter oldColor is not in the screen color palette\"\n\t\t\t);\n\t\t\terror.code = \"COLOR_NOT_IN_PALETTE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst index = oldColor;\n\t\toldColor = screenData.pal[ index ];\n\n\t\t// Validate newColor\n\t\tnewColor = pi.util.convertToColor( newColor );\n\t\tif( newColor === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"swapColor: parameter newColor is not a valid color format\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_NEW_COLOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Swap all colors on screen\n\t\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tif(\n\t\t\t\t\tdata[ i ] === oldColor.r &&\n\t\t\t\t\tdata[ i + 1 ] === oldColor.g &&\n\t\t\t\t\tdata[ i + 2 ] === oldColor.b &&\n\t\t\t\t\tdata[ i + 3 ] === oldColor.a\n\t\t\t\t) {\n\t\t\t\t\tdata[ i ] = newColor.r;\n\t\t\t\t\tdata[ i + 1 ] = newColor.g;\n\t\t\t\t\tdata[ i + 2 ] = newColor.b;\n\t\t\t\t\tdata[ i + 3 ] = newColor.a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\n\t\t// Update the pal data\n\t\tscreenData.pal[ index ] = newColor;\n\t}\n\n\t// SETPIXELMODE - Toggle pixel mode on/off\n\tpi._.addCommand( \"setPixelMode\", setPixelMode, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"pixelMode\", setPixelMode, true, [ \"isEnabled\" ] );\n\n\tfunction setPixelMode( screenData, args ) {\n\t\tconst isEnabled = args[ 0 ];\n\n\t\tif( isEnabled ) {\n\t\t\tscreenData.context.imageSmoothingEnabled = false;\n\t\t\tscreenData.pixelMode = true;\n\t\t} else {\n\t\t\tscreenData.context.imageSmoothingEnabled = true;\n\t\t\tscreenData.pixelMode = false;\n\t\t}\n\t}\n\n\t// SETPEN - Set pen style, size, and noise\n\tpi._.addCommand( \"setPen\", setPen, false, true, [ \"pen\", \"size\", \"noise\" ] );\n\tpi._.addSetting( \"pen\", setPen, true, [ \"pen\", \"size\", \"noise\" ] );\n\n\tfunction setPen( screenData, args ) {\n\t\tlet pen = args[ 0 ];\n\t\tlet size = Math.round( args[ 1 ] );\n\t\tlet noise = args[ 2 ];\n\n\t\tif( !piData.pens[ pen ] ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setPen: parameter pen is not a valid pen. Valid pens: ${piData.penList.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_PEN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !pi.util.isInteger( size ) ) {\n\t\t\tconst error = new TypeError( \"setPen: parameter size must be an integer\" );\n\t\t\terror.code = \"INVALID_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( noise && ( !pi.util.isArray( noise ) && isNaN( noise ) ) ) {\n\t\t\tconst error = new TypeError( \"setPen: parameter noise is not an array or number\" );\n\t\t\terror.code = \"INVALID_NOISE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( pi.util.isArray( noise ) ) {\n\t\t\tnoise = noise.slice();\n\t\t\tfor( let i = 0; i < noise.length; i++ ) {\n\t\t\t\tif( isNaN( noise[ i ] ) ) {\n\t\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\t\"setPen: parameter noise array contains an invalid value\"\n\t\t\t\t\t);\n\t\t\t\t\terror.code = \"INVALID_NOISE_VALUE\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( pen === \"pixel\" ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\t// Set the minimum pen size to 1\n\t\tif( size < 1 ) {\n\t\t\tsize = 1;\n\t\t}\n\n\t\t// Handle special case of size of one\n\t\tif( size === 1 ) {\n\n\t\t\t// Size is one so only draw one pixel\n\t\t\tscreenData.pen.draw = piData.pens.pixel.cmd;\n\n\t\t\t// Set the line width for context draw\n\t\t\tscreenData.context.lineWidth = 1;\n\t\t} else {\n\n\t\t\t// Set the draw mode for pixel draw\n\t\t\tscreenData.pen.draw = piData.pens[ pen ].cmd;\n\n\t\t\t// Set the line width for context draw\n\t\t\tscreenData.context.lineWidth = size * 2 - 1;\n\t\t}\n\n\t\tscreenData.pen.noise = noise;\n\t\tscreenData.pen.size = size;\n\t\tscreenData.context.lineCap = piData.pens[ pen ].cap;\n\t}\n\n\t// SETBLENDMODE - Set blend mode for pixel operations\n\tpi._.addCommand( \"setBlendMode\", setBlendMode, false, true, [ \"mode\" ] );\n\tpi._.addSetting( \"blendMode\", setBlendMode, true, [ \"mode\" ] );\n\n\tfunction setBlendMode( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\n\t\tif( !piData.blendCommands[ mode ] ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setBlendMode: Argument blend is not a valid blend mode. Valid modes: ${piData.blendCommandsList.join( \", \" )}`\n\t\t\t);\n\t\t\terror.code = \"INVALID_BLEND_MODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.blendPixelCmd = piData.blendCommands[ mode ];\n\t}\n\n\t// GETPIXEL - Get color of a single pixel\n\tpi._.addCommand( \"getPixel\", getPixel, false, true, [ \"x\", \"y\" ] );\n\n\tfunction getPixel( screenData, args ) {\n\t\tconst x = Math.round( args[ 0 ] );\n\t\tconst y = Math.round( args[ 1 ] );\n\n\t\t// Make sure x and y are integers\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"getPixel: x and y must be integers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Calculate the index\n\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\treturn pi.util.convertToColor( {\n\t\t\t\"r\": data[ i ],\n\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\"a\": data[ i + 3 ]\n\t\t} );\n\t}\n\n\t// FILTERIMG - Apply a filter function to all pixels\n\tpi._.addCommand( \"filterImg\", filterImg, false, true, [ \"filter\" ] );\n\n\tfunction filterImg( screenData, args ) {\n\t\tconst filter = args[ 0 ];\n\n\t\tif( !pi.util.isFunction( filter ) ) {\n\t\t\tconst error = new TypeError( \"filterImg: filter must be a callback function\" );\n\t\t\terror.code = \"INVALID_FILTER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tconst data = screenData.imageData.data;\n\n\t\t// Apply filter to all pixels\n\t\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tconst color = filter( {\n\t\t\t\t\t\"r\": data[ i ],\n\t\t\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\t\t\"a\": data[ i + 3 ]\n\t\t\t\t}, x, y );\n\n\t\t\t\tif( color &&\n\t\t\t\t\tpi.util.isInteger( color.r ) &&\n\t\t\t\t\tpi.util.isInteger( color.g ) &&\n\t\t\t\t\tpi.util.isInteger( color.b ) &&\n\t\t\t\t\tpi.util.isInteger( color.a )\n\t\t\t\t) {\n\t\t\t\t\tdata[ i ] = pi.util.clamp( color.r, 0, 255 );\n\t\t\t\t\tdata[ i + 1 ] = pi.util.clamp( color.g, 0, 255 );\n\t\t\t\t\tdata[ i + 2 ] = pi.util.clamp( color.b, 0, 255 );\n\t\t\t\t\tdata[ i + 3 ] = pi.util.clamp( color.a, 0, 255 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// GET - Capture screen region as 2D array of palette indices\n\tpi._.addCommand( \"get\", get, false, true,\n\t\t[ \"x1\", \"y1\", \"x2\", \"y2\", \"tolerance\", \"isAddToPalette\" ]\n\t);\n\n\tfunction get( screenData, args ) {\n\t\tlet x1 = Math.round( args[ 0 ] );\n\t\tlet y1 = Math.round( args[ 1 ] );\n\t\tlet x2 = Math.round( args[ 2 ] );\n\t\tlet y2 = Math.round( args[ 3 ] );\n\t\tconst tolerance = args[ 4 ] != null ? args[ 4 ] : 1;\n\t\tconst isAddToPalette = !!args[ 5 ];\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError( \"get: parameters x1, x2, y1, y2 must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( tolerance ) ) {\n\t\t\tconst error = new TypeError( \"get: parameter tolerance must be a number.\" );\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Clamp coordinates\n\t\tx1 = pi.util.clamp( x1, 0, screenData.width - 1 );\n\t\tx2 = pi.util.clamp( x2, 0, screenData.width - 1 );\n\t\ty1 = pi.util.clamp( y1, 0, screenData.height - 1 );\n\t\ty2 = pi.util.clamp( y2, 0, screenData.height - 1 );\n\n\t\t// Swap if needed\n\t\tif( x1 > x2 ) {\n\t\t\tconst t = x1;\n\t\t\tx1 = x2;\n\t\t\tx2 = t;\n\t\t}\n\t\tif( y1 > y2 ) {\n\t\t\tconst t = y1;\n\t\t\ty1 = y2;\n\t\t\ty2 = t;\n\t\t}\n\n\t\t// Get image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst imageData = screenData.imageData;\n\t\tconst data = [];\n\n\t\tlet row = 0;\n\t\tfor( let y = y1; y <= y2; y++ ) {\n\t\t\tdata.push( [] );\n\t\t\tfor( let x = x1; x <= x2; x++ ) {\n\n\t\t\t\t// Calculate the index of the image data\n\t\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tconst r = imageData.data[ i ];\n\t\t\t\tconst g = imageData.data[ i + 1 ];\n\t\t\t\tconst b = imageData.data[ i + 2 ];\n\t\t\t\tconst a = imageData.data[ i + 3 ];\n\n\t\t\t\tconst color = pi.util.rgbToColor( r, g, b, a );\n\t\t\t\tconst colorIndex = piData.commands.findColor( screenData,\n\t\t\t\t\t[ color, tolerance, isAddToPalette ]\n\t\t\t\t);\n\n\t\t\t\tdata[ row ].push( colorIndex );\n\t\t\t}\n\t\t\trow += 1;\n\t\t}\n\n\t\treturn data;\n\t}\n}\n\n", "/**\n * Pi.js - Pixel-Mode Graphics Module\n * \n * Pixel-perfect drawing implementations using manual pixel manipulation.\n * Implements Bresenham line, midpoint circle, and other algorithms.\n * \n * @module modules/graphics-pixel\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// CLS - Clear screen\n\tpi._.addCommand( \"cls\", cls, false, true, [ \"x\", \"y\", \"width\", \"height\" ] );\n\n\tfunction cls( screenData, args ) {\n\t\tconst x = pi.util.getInt( Math.round( args[ 0 ] ), 0 );\n\t\tconst y = pi.util.getInt( Math.round( args[ 1 ] ), 0 );\n\t\tconst width = pi.util.getInt( Math.round( args[ 2 ] ), screenData.width );\n\t\tconst height = pi.util.getInt( Math.round( args[ 3 ] ), screenData.height );\n\n\t\tif( x !== 0 || y !== 0 || width !== screenData.width || height !== screenData.height ) {\n\t\t\tscreenData.screenObj.render();\n\t\t\tscreenData.context.clearRect( x, y, width, height );\n\t\t} else {\n\t\t\tscreenData.context.clearRect( x, y, width, height );\n\t\t\tscreenData.imageData = null;\n\t\t\tscreenData.printCursor.x = 0;\n\t\t\tscreenData.printCursor.y = 0;\n\t\t\tscreenData.x = 0;\n\t\t\tscreenData.y = 0;\n\t\t\tscreenData.dirty = false;\n\t\t}\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// PSET - Set pixel (pixel mode and anti-aliased mode)\n\tpi._.addCommands( \"pset\", pset, aaPset, [ \"x\", \"y\" ] );\n\n\tfunction pset( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\n\t\t// Make sure x and y are integers\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"pset: Arguments x and y must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set the cursor\n\t\tscreenData.x = x;\n\t\tscreenData.y = y;\n\n\t\t// Make sure x and y are on the screen\n\t\tif( !pi.util.inRange2( x, y, 0, 0, screenData.width, screenData.height ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the fore color\n\t\tconst color = screenData.fColor;\n\n\t\tpiData.commands.getImageData( screenData );\n\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaPset( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"pset: Arguments x and y must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.context.fillRect( x, y, 1, 1 );\n\t}\n\n\t// LINE - Draw line (Bresenham algorithm for pixel mode)\n\tpi._.addCommands( \"line\", pxLine, aaLine, [ \"x1\", \"y1\", \"x2\", \"y2\" ] );\n\n\tfunction pxLine( screenData, args ) {\n\t\tlet x1 = Math.round( args[ 0 ] );\n\t\tlet y1 = Math.round( args[ 1 ] );\n\t\tlet x2 = Math.round( args[ 2 ] );\n\t\tlet y2 = Math.round( args[ 3 ] );\n\n\t\t// Make sure coordinates are integers\n\t\tif(\n\t\t\t!pi.util.isInteger( x1 ) || !pi.util.isInteger( y1 ) ||\n\t\t\t!pi.util.isInteger( x2 ) || !pi.util.isInteger( y2 )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"line: Arguments x1, y1, x2, and y2 must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Initialize the color for the line\n\t\tconst color = screenData.fColor;\n\n\t\tconst dx = Math.abs( x2 - x1 );\n\t\tconst dy = Math.abs( y2 - y1 );\n\n\t\t// Set the x slope\n\t\tconst sx = x1 < x2 ? 1 : -1;\n\n\t\t// Set the y slope\n\t\tconst sy = y1 < y2 ? 1 : -1;\n\n\t\t// Set the error\n\t\tlet err = dx - dy;\n\n\t\t// Get the image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Set the first pixel\n\t\tscreenData.pen.draw( screenData, x1, y1, color );\n\n\t\t// Bresenham's line algorithm\n\t\twhile( !( ( x1 === x2 ) && ( y1 === y2 ) ) ) {\n\t\t\tconst e2 = err << 1;\n\n\t\t\tif( e2 > -dy ) {\n\t\t\t\terr -= dy;\n\t\t\t\tx1 += sx;\n\t\t\t}\n\n\t\t\tif( e2 < dx ) {\n\t\t\t\terr += dx;\n\t\t\t\ty1 += sy;\n\t\t\t}\n\n\t\t\t// Set the next pixel\n\t\t\tscreenData.pen.draw( screenData, x1, y1, color );\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaLine( screenData, args ) {\n\t\tconst x1 = args[ 0 ];\n\t\tconst y1 = args[ 1 ];\n\t\tconst x2 = args[ 2 ];\n\t\tconst y2 = args[ 3 ];\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"line: parameters x1, y1, x2, y2 must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tctx.beginPath();\n\t\tctx.moveTo( x1, y1 );\n\t\tctx.lineTo( x2, y2 );\n\t\tctx.stroke();\n\t}\n\n\t// CIRCLE - Draw circle (Midpoint circle algorithm for pixel mode)\n\tpi._.addCommands( \"circle\", pxCircle, aaCircle, [ \"x\", \"y\", \"radius\", \"fillColor\" ] );\n\n\tfunction pxCircle( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radius = Math.round( args[ 2 ] );\n\t\tlet fillColor = args[ 3 ];\n\t\tlet isFill = false;\n\n\t\tif(\n\t\t\t!pi.util.isInteger( x ) ||\n\t\t\t!pi.util.isInteger( y ) ||\n\t\t\t!pi.util.isInteger( radius )\n\t\t) {\n\t\t\tconst error = new TypeError( \"circle: x, y, radius must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Check for fill color\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"circle\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Initialize the color for the circle outline\n\t\tconst color = screenData.fColor;\n\n\t\t// Fill the circle first if needed (draw horizontal lines)\n\t\tif( isFill ) {\n\t\t\tconst r = radius - 1; // Use same radius as outline\n\t\t\tconst rSquared = r * r;\n\n\t\t\t// Draw horizontal lines for each row of the circle\n\t\t\tfor( let dy = -r; dy <= r; dy++ ) {\n\t\t\t\tconst py = y + dy;\n\n\t\t\t\t// Skip if row is out of bounds\n\t\t\t\tif( py < 0 || py >= screenData.height ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Calculate half-width of circle at this y coordinate\n\t\t\t\tconst dx = Math.floor( Math.sqrt( rSquared - dy * dy ) );\n\n\t\t\t\t// Draw horizontal line from -dx to +dx\n\t\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\n\t\t\t\t\t// Skip if pixel is out of bounds\n\t\t\t\t\tif( px < 0 || px >= screenData.width ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set individual pixel for scanline fill\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, px, py, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Draw the outline after fill (outline will overwrite fill pixels on border)\n\t\tconst outlineRadius = radius - 1;\n\t\tlet x2 = outlineRadius;\n\t\tlet y2 = 0;\n\n\t\t// Midpoint circle algorithm - Only print initial points if r > 0\n\t\tif( outlineRadius > 1 ) {\n\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x, x2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x, -x2 + y, color );\n\t\t} else if( outlineRadius === 1 ) {\n\t\t\tscreenData.pen.draw( screenData, x + 1, y, color );\n\t\t\tscreenData.pen.draw( screenData, x - 1, y, color );\n\t\t\tscreenData.pen.draw( screenData, x, y + 1, color );\n\t\t\tscreenData.pen.draw( screenData, x, y - 1, color );\n\t\t\ty2 = x2 + 1;\n\t\t} else if( outlineRadius === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\t\ty2 = x2 + 1;\n\t\t}\n\n\t\t// Initialize decision parameter\n\t\tlet midPoint = 1 - outlineRadius;\n\n\t\twhile( x2 > y2 ) {\n\t\t\ty2 += 1;\n\n\t\t\tif( midPoint <= 0 ) {\n\t\t\t\t// Mid-point is inside or on the perimeter\n\t\t\t\tmidPoint = midPoint + 2 * y2 + 1;\n\t\t\t} else {\n\t\t\t\t// Mid point is outside the perimeter\n\t\t\t\tx2 -= 1;\n\t\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\n\t\t\t}\n\n\t\t\t// Set pixels around point and reflection in other octants\n\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, x2 + x, -y2 + y, color );\n\t\t\tscreenData.pen.draw( screenData, -x2 + x, -y2 + y, color );\n\n\t\t\t// Set pixels on the perimeter points if not on x = y\n\t\t\tif( x2 !== y2 ) {\n\t\t\t\tscreenData.pen.draw( screenData, y2 + x, x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, y2 + x, -x2 + y, color );\n\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, -x2 + y, color );\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaCircle( screenData, args ) {\n\t\tlet x = args[ 0 ] + 0.5;\n\t\tlet y = args[ 1 ] + 0.5;\n\t\tlet r = args[ 2 ] - 0.9;\n\t\tlet fillColor = args[ 3 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( r ) ) {\n\t\t\tconst error = new TypeError( \"circle: parameters x, y, r must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Ensure radius is not negative\n\t\tif( r < 0 ) {\n\t\t\tr = 0;\n\t\t}\n\n\t\t// Check for fill\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"circle\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tconst strokeColor = screenData.fColor.s;\n\n\t\t// Create single path for both fill and stroke\n\t\tctx.beginPath();\n\t\tctx.arc( x, y, r, 0, Math.PI * 2 );\n\n\t\t// Draw fill first if needed\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fill();\n\t\t}\n\n\t\t// Always draw the outline stroke\n\t\tctx.strokeStyle = strokeColor;\n\t\tctx.stroke();\n\t}\n\n\t// RECT - Draw rectangle\n\tpi._.addCommands( \"rect\", pxRect, aaRect, [ \"x\", \"y\", \"width\", \"height\", \"fillColor\" ] );\n\n\tfunction pxRect( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet width = Math.round( args[ 2 ] );\n\t\tlet height = Math.round( args[ 3 ] );\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif(\n\t\t\t!pi.util.isInteger( x ) || !pi.util.isInteger( y ) ||\n\t\t\t!pi.util.isInteger( width ) || !pi.util.isInteger( height )\n\t\t) {\n\t\t\tconst error = new TypeError( \"rect: x, y, width, height must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst color = screenData.fColor;\n\t\tconst isFill = fillColor != null;\n\n\t\tif( isFill ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"rect\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Draw outline\n\t\tfor( let i = 0; i < width; i++ ) {\n\t\t\tscreenData.pen.draw( screenData, x + i, y, color );\n\t\t\tscreenData.pen.draw( screenData, x + i, y + height - 1, color );\n\t\t}\n\n\t\tfor( let i = 1; i < height - 1; i++ ) {\n\t\t\tscreenData.pen.draw( screenData, x, y + i, color );\n\t\t\tscreenData.pen.draw( screenData, x + width - 1, y + i, color );\n\t\t}\n\n\t\t// Fill if needed\n\t\tif( isFill ) {\n\t\t\tfor( let j = 1; j < height - 1; j++ ) {\n\t\t\t\tfor( let i = 1; i < width - 1; i++ ) {\n\t\t\t\t\tpiData.commands.setPixel( screenData, x + i, y + j, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaRect( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\t\tconst width = args[ 2 ];\n\t\tconst height = args[ 3 ];\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( width ) || isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"rect: parameters must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst isFill = fillColor != null;\n\n\t\tif( isFill ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"rect\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fillRect( x, y, width, height );\n\t\t} else {\n\t\t\tctx.strokeRect( x, y, width, height );\n\t\t}\n\t}\n\n\t// ELLIPSE - Draw ellipse (Midpoint ellipse algorithm for pixel mode)\n\tpi._.addCommands( \"ellipse\", pxEllipse, aaEllipse,\n\t\t[ \"x\", \"y\", \"radiusX\", \"radiusY\", \"fillColor\" ]\n\t);\n\n\tfunction pxEllipse( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radiusX = Math.round( args[ 2 ] );\n\t\tlet radiusY = Math.round( args[ 3 ] );\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radiusX ) || isNaN( radiusY ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: parameters x, y, radiusX, radiusY must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"ellipse\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Initialize the color for the outline\n\t\tconst color = screenData.fColor;\n\n\t\t// Handle degenerate case\n\t\tif( radiusX === 0 && radiusY === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x ), Math.floor( y ), color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Fill the ellipse first if needed (draw horizontal lines)\n\t\tif( isFill ) {\n\t\t\tconst rxSquared = radiusX * radiusX;\n\t\t\tconst rySquared = radiusY * radiusY;\n\n\t\t\t// Draw horizontal lines for each row of the ellipse\n\t\t\tfor( let dy = -radiusY; dy <= radiusY; dy++ ) {\n\t\t\t\tconst py = y + dy;\n\n\t\t\t\t// Skip if row is out of bounds\n\t\t\t\tif( py < 0 || py >= screenData.height ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Calculate half-width of ellipse at this y coordinate\n\t\t\t\t// Using ellipse equation: (x/rx)^2 + (y/ry)^2 = 1\n\t\t\t\t// Solving for x: x = rx * sqrt(1 - (y/ry)^2)\n\t\t\t\tconst dx = Math.floor( radiusX * Math.sqrt( 1 - ( dy * dy ) / rySquared ) );\n\n\t\t\t\t// Draw horizontal line from -dx to +dx\n\t\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\n\t\t\t\t\t// Skip if pixel is out of bounds\n\t\t\t\t\tif( px < 0 || px >= screenData.width ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set individual pixel for scanline fill (like pxCircle)\n\t\t\t\t\tpiData.commands.setPixelSafe( screenData, px, py, fillColor );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now draw the outline using Midpoint ellipse algorithm\n\t\t// Starting points\n\t\tlet x2 = 0;\n\t\tlet y2 = radiusY;\n\n\t\t// Decision parameter of region 1\n\t\tlet d1 = ( radiusY * radiusY ) - ( radiusX * radiusX * radiusY ) +\n\t\t\t( 0.25 * radiusX * radiusX );\n\n\t\tlet dx = 2 * radiusY * radiusY * x2;\n\t\tlet dy = 2 * radiusX * radiusX * y2;\n\n\t\t// For region 1\n\t\twhile( dx < dy ) {\n\t\t\t// 4-way symmetry\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t\t// Update decision parameter\n\t\t\tif( d1 < 0 ) {\n\t\t\t\tx2++;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\td1 = d1 + dx + ( radiusY * radiusY );\n\t\t\t} else {\n\t\t\t\tx2++;\n\t\t\t\ty2--;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td1 = d1 + dx - dy + ( radiusY * radiusY );\n\t\t\t}\n\t\t}\n\n\t\t// Decision parameter of region 2\n\t\tlet d2 = ( ( radiusY * radiusY ) * ( ( x2 + 0.5 ) * ( x2 + 0.5 ) ) ) +\n\t\t\t( ( radiusX * radiusX ) * ( ( y2 - 1 ) * ( y2 - 1 ) ) ) -\n\t\t\t( radiusX * radiusX * radiusY * radiusY );\n\n\t\t// Plotting points of region 2\n\t\twhile( y2 >= 0 ) {\n\t\t\t// 4-way symmetry\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\t\tscreenData.pen.draw( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t\t// Update parameter\n\t\t\tif( d2 > 0 ) {\n\t\t\t\ty2--;\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td2 = d2 + ( radiusX * radiusX ) - dy;\n\t\t\t} else {\n\t\t\t\ty2--;\n\t\t\t\tx2++;\n\t\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\t\td2 = d2 + dx - dy + ( radiusX * radiusX );\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaEllipse( screenData, args ) {\n\t\tconst cx = args[ 0 ];\n\t\tconst cy = args[ 1 ];\n\t\tconst rx = args[ 2 ];\n\t\tconst ry = args[ 3 ];\n\t\tlet fillColor = args[ 4 ];\n\n\t\tif( isNaN( cx ) || isNaN( cy ) || isNaN( rx ) || isNaN( ry ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: parameters x, y, radiusX, radiusY must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet isFill = false;\n\t\tif( fillColor != null ) {\n\t\t\tfillColor = piData.commands.findColorValue( screenData, fillColor, \"ellipse\" );\n\t\t\tif( fillColor === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisFill = true;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.moveTo( cx + rx, cy );\n\t\tctx.ellipse( cx, cy, rx, ry, 0, pi.util.math.deg360, false );\n\n\t\tif( isFill ) {\n\t\t\tctx.fillStyle = fillColor.s;\n\t\t\tctx.fill();\n\t\t}\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// ARC - Draw arc (partial circle)\n\tpi._.addCommands( \"arc\", pxArc, aaArc, [ \"x\", \"y\", \"radius\", \"angle1\", \"angle2\" ] );\n\n\tfunction pxArc( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet radius = Math.round( args[ 2 ] );\n\t\tlet angle1 = args[ 3 ];\n\t\tlet angle2 = args[ 4 ];\n\n\t\t// Normalize angles to 0-360\n\t\tangle1 = ( angle1 + 360 ) % 360;\n\t\tangle2 = ( angle2 + 360 ) % 360;\n\n\t\tconst winding = angle1 > angle2;\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radius ) ) {\n\t\t\tconst error = new TypeError( \"arc: x, y, radius must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst color = screenData.fColor;\n\n\t\t// Helper function to check if angle is within arc range\n\t\tfunction shouldDrawPixel( px, py ) {\n\t\t\tlet a = pi.util.radiansToDegrees( Math.atan2( py - y, px - x ) );\n\t\t\ta = ( a + 360 ) % 360;\n\n\t\t\tif( winding ) {\n\t\t\t\treturn a >= angle1 || a <= angle2;\n\t\t\t}\n\t\t\treturn a >= angle1 && a <= angle2;\n\t\t}\n\n\t\tradius -= 1;\n\t\tif( radius < 0 ) {\n\t\t\tradius = 0;\n\t\t}\n\n\t\tlet x2 = radius;\n\t\tlet y2 = 0;\n\n\t\t// Handle special cases\n\t\tif( radius > 1 ) {\n\t\t\tif( shouldDrawPixel( x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x, x2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x, x2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x, -x2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x, -x2 + y, color );\n\t\t\t}\n\t\t} else if( radius === 1 ) {\n\t\t\tif( shouldDrawPixel( x + 1, y ) ) screenData.pen.draw( screenData, x + 1, y, color );\n\t\t\tif( shouldDrawPixel( x - 1, y ) ) screenData.pen.draw( screenData, x - 1, y, color );\n\t\t\tif( shouldDrawPixel( x, y + 1 ) ) screenData.pen.draw( screenData, x, y + 1, color );\n\t\t\tif( shouldDrawPixel( x, y - 1 ) ) screenData.pen.draw( screenData, x, y - 1, color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t} else if( radius === 0 ) {\n\t\t\tscreenData.pen.draw( screenData, x, y, color );\n\t\t\tpiData.commands.setImageDirty( screenData );\n\t\t\treturn;\n\t\t}\n\n\t\t// Midpoint circle algorithm with angle checking\n\t\tlet midPoint = 1 - radius;\n\n\t\twhile( x2 > y2 ) {\n\t\t\ty2 += 1;\n\n\t\t\tif( midPoint <= 0 ) {\n\t\t\t\tmidPoint = midPoint + 2 * y2 + 1;\n\t\t\t} else {\n\t\t\t\tx2 -= 1;\n\t\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\n\t\t\t}\n\n\t\t\t// Draw pixels in arc range (8-way symmetry)\n\t\t\tif( shouldDrawPixel( x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( x2 + x, -y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, x2 + x, -y2 + y, color );\n\t\t\t}\n\t\t\tif( shouldDrawPixel( -x2 + x, -y2 + y ) ) {\n\t\t\t\tscreenData.pen.draw( screenData, -x2 + x, -y2 + y, color );\n\t\t\t}\n\n\t\t\tif( x2 !== y2 ) {\n\t\t\t\tif( shouldDrawPixel( y2 + x, x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, y2 + x, x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( -y2 + x, x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( y2 + x, -x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, y2 + x, -x2 + y, color );\n\t\t\t\t}\n\t\t\t\tif( shouldDrawPixel( -y2 + x, -x2 + y ) ) {\n\t\t\t\t\tscreenData.pen.draw( screenData, -y2 + x, -x2 + y, color );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaArc( screenData, args ) {\n\t\tlet x = args[ 0 ];\n\t\tlet y = args[ 1 ];\n\t\tlet radius = args[ 2 ];\n\t\tlet angle1 = args[ 3 ];\n\t\tlet angle2 = args[ 4 ];\n\n\t\tif( isNaN( x ) || isNaN( y ) || isNaN( radius ) || isNaN( angle1 ) || isNaN( angle2 ) ) {\n\t\t\tconst error = new TypeError( \"arc: parameters must be numbers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tx = x + 0.5;\n\t\ty = y + 0.5;\n\t\tradius = radius - 0.9;\n\t\tif( radius < 0 ) {\n\t\t\tradius = 0;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tangle1 = pi.util.degreesToRadian( angle1 );\n\t\tangle2 = pi.util.degreesToRadian( angle2 );\n\n\t\tconst ctx = screenData.context;\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.moveTo( x + Math.cos( angle1 ) * radius, y + Math.sin( angle1 ) * radius );\n\t\tctx.arc( x, y, radius, angle1, angle2 );\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Paint/Flood Fill Module\n * \n * Implements flood fill algorithm for filling enclosed areas.\n * \n * @module modules/paint\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_maxDifference = ( 255 * 255 ) * 3.25;\n\tlet m_setPixel;\n\tlet m_pixels;\n\n\t// PAINT - Flood fill algorithm\n\tpi._.addCommand( \"paint\", paint, false, true, [ \"x\", \"y\", \"fillColor\", \"tolerance\" ] );\n\n\tfunction paint( screenData, args ) {\n\t\tlet x = Math.round( args[ 0 ] );\n\t\tlet y = Math.round( args[ 1 ] );\n\t\tlet fillColor = args[ 2 ];\n\t\tlet tolerance = args[ 3 ];\n\n\t\tif( !pi.util.isInteger( x ) || !pi.util.isInteger( y ) ) {\n\t\t\tconst error = new TypeError( \"paint: parameters x and y must be integers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set the default tolerance to 1 (exact match)\n\t\tif( tolerance == null || tolerance === false ) {\n\t\t\ttolerance = 1;\n\t\t}\n\n\t\tif( isNaN( tolerance ) || tolerance < 0 || tolerance > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"paint: parameter tolerance must be a number between 0 and 1.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_TOLERANCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Soften the tolerance so closer to one it changes less,\n\t\t// closer to 0 changes more\n\t\ttolerance = tolerance * ( 2 - tolerance ) * m_maxDifference;\n\n\t\t// Brave browser quirk workaround\n\t\tif( navigator.brave && tolerance === m_maxDifference ) {\n\t\t\ttolerance -= 1;\n\t\t}\n\n\t\t// Initialize fill queue with starting point\n\t\tconst fills = [ {\n\t\t\t\"x\": x,\n\t\t\t\"y\": y\n\t\t} ];\n\n\t\t// Change the setPixel command if adding noise\n\t\tif( screenData.pen.noise ) {\n\t\t\tm_setPixel = setPixelNoise;\n\t\t} else {\n\t\t\tm_setPixel = piData.commands.setPixel;\n\t\t}\n\n\t\t// Resolve fill color\n\t\tif( pi.util.isInteger( fillColor ) ) {\n\t\t\tif( fillColor > screenData.pal.length ) {\n\t\t\t\tconst error = new RangeError(\n\t\t\t\t\t\"paint: Argument fillColor is not a color in the palette.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"COLOR_OUT_OF_RANGE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tfillColor = screenData.pal[ fillColor ];\n\t\t} else {\n\t\t\tfillColor = pi.util.convertToColor( fillColor );\n\t\t\tif( fillColor === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"paint: Argument fillColor is not a valid color format.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Initialize pixel tracking\n\t\tm_pixels = {};\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\t// Get the background color at starting point\n\t\tconst backgroundColor = piData.commands.getPixelInternal( screenData, x, y );\n\n\t\t// Flood fill algorithm - loop until no fills left\n\t\twhile( fills.length > 0 ) {\n\t\t\tconst pixel = fills.pop();\n\n\t\t\t// Set the current pixel\n\t\t\tm_setPixel( screenData, pixel.x, pixel.y, fillColor );\n\n\t\t\t// Add fills to 4-way neighbors\n\t\t\taddFill( screenData, pixel.x + 1, pixel.y, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x - 1, pixel.y, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x, pixel.y + 1, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t\taddFill( screenData, pixel.x, pixel.y - 1, fills, fillColor,\n\t\t\t\tbackgroundColor, tolerance );\n\t\t}\n\n\t\t// Clean up pixel tracking for garbage collection\n\t\tm_pixels = null;\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// Helper: Set pixel with noise effect\n\tfunction setPixelNoise( screenData, x, y, fillColor ) {\n\t\tfillColor = piData.commands.getPixelColor( screenData, fillColor );\n\t\tpiData.commands.setPixel( screenData, x, y, fillColor );\n\t}\n\n\t// Helper: Check if pixel has been processed\n\tfunction checkPixel( x, y ) {\n\t\tconst key = x + \" \" + y;\n\t\tif( m_pixels[ key ] ) {\n\t\t\treturn true;\n\t\t}\n\t\tm_pixels[ key ] = true;\n\t\treturn false;\n\t}\n\n\t// Helper: Add fill to queue if it should be filled\n\tfunction addFill( screenData, x, y, fills, fillColor, backgroundColor, tolerance ) {\n\t\tif( floodCheck( screenData, x, y, fillColor, backgroundColor, tolerance ) ) {\n\t\t\tm_setPixel( screenData, x, y, fillColor );\n\t\t\tconst fill = { \"x\": x, \"y\": y };\n\t\t\tfills.push( fill );\n\t\t}\n\t}\n\n\t// Helper: Check if pixel should be filled\n\tfunction floodCheck( screenData, x, y, fillColor, backgroundColor, tolerance ) {\n\t\t// Check bounds\n\t\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pixelColor = piData.commands.getPixelInternal( screenData, x, y );\n\n\t\t// Make sure we haven't already filled this pixel\n\t\tif( !checkPixel( x, y ) ) {\n\n\t\t\t// Calculate the difference between the two colors\n\t\t\tconst dr = ( pixelColor.r - backgroundColor.r );\n\t\t\tconst dg = ( pixelColor.g - backgroundColor.g );\n\t\t\tconst db = ( pixelColor.b - backgroundColor.b );\n\t\t\tconst da = ( pixelColor.a - backgroundColor.a );\n\t\t\tconst difference = ( dr * dr + dg * dg + db * db + da * da * 0.25 );\n\t\t\tconst simularity = m_maxDifference - difference;\n\n\t\t\treturn simularity >= tolerance;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n", "/**\n * Pi.js - Bezier Curves Module\n * \n * Implements cubic Bezier curves for smooth curved paths.\n * \n * @module modules/bezier\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// BEZIER - Draw cubic Bezier curve\n\tpi._.addCommands( \"bezier\", pxBezier, aaBezier,\n\t\t[ \"xStart\", \"yStart\", \"x1\", \"y1\", \"x2\", \"y2\", \"xEnd\", \"yEnd\" ]\n\t);\n\n\tfunction pxBezier( screenData, args ) {\n\t\tlet xStart = Math.round( args[ 0 ] );\n\t\tlet yStart = Math.round( args[ 1 ] );\n\t\tlet x1 = Math.round( args[ 2 ] );\n\t\tlet y1 = Math.round( args[ 3 ] );\n\t\tlet x2 = Math.round( args[ 4 ] );\n\t\tlet y2 = Math.round( args[ 5 ] );\n\t\tlet xEnd = Math.round( args[ 6 ] );\n\t\tlet yEnd = Math.round( args[ 7 ] );\n\n\t\t// Validate parameters\n\t\tif(\n\t\t\tisNaN( xStart ) || isNaN( yStart ) ||\n\t\t\tisNaN( x1 ) || isNaN( y1 ) ||\n\t\t\tisNaN( x2 ) || isNaN( y2 ) ||\n\t\t\tisNaN( xEnd ) || isNaN( yEnd )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"bezier: parameters xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd \" +\n\t\t\t\t\"must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Initialize the color for the line\n\t\tconst color = screenData.fColor;\n\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tconst minDistance = screenData.pen.size;\n\t\tconst points = [\n\t\t\t{ \"x\": xStart, \"y\": yStart },\n\t\t\t{ \"x\": x1, \"y\": y1 },\n\t\t\t{ \"x\": x2, \"y\": y2 },\n\t\t\t{ \"x\": xEnd, \"y\": yEnd }\n\t\t];\n\n\t\tlet lastPoint = calcStep( 0, points );\n\n\t\t// Set the first pixel\n\t\tscreenData.pen.draw( screenData, lastPoint.x, lastPoint.y, color );\n\n\t\tlet t = 0.1;\n\t\tlet dt = 0.1;\n\n\t\twhile( t < 1 ) {\n\t\t\tconst point = calcStep( t, points );\n\t\t\tconst distance = calcDistance( point, lastPoint );\n\n\t\t\t// Adjust the step size if it's too big\n\t\t\tif( distance > minDistance && dt > 0.00001 ) {\n\t\t\t\tt -= dt;\n\t\t\t\tdt = dt * 0.75;\n\t\t\t} else {\n\t\t\t\tscreenData.pen.draw( screenData, point.x, point.y, color );\n\t\t\t\tlastPoint = point;\n\t\t\t}\n\t\t\tt += dt;\n\t\t}\n\n\t\t// Draw the last step\n\t\tconst point = calcStep( 1, points );\n\t\tscreenData.pen.draw( screenData, point.x, point.y, color );\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\tfunction aaBezier( screenData, args ) {\n\t\tlet xStart = args[ 0 ] + 0.5;\n\t\tlet yStart = args[ 1 ] + 0.5;\n\t\tlet x1 = args[ 2 ] + 0.5;\n\t\tlet y1 = args[ 3 ] + 0.5;\n\t\tlet x2 = args[ 4 ] + 0.5;\n\t\tlet y2 = args[ 5 ] + 0.5;\n\t\tlet xEnd = args[ 6 ] + 0.5;\n\t\tlet yEnd = args[ 7 ] + 0.5;\n\n\t\tif(\n\t\t\tisNaN( xStart ) || isNaN( yStart ) || isNaN( x1 ) || isNaN( y1 ) ||\n\t\t\tisNaN( x2 ) || isNaN( y2 ) || isNaN( xEnd ) || isNaN( yEnd )\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"bezier: parameters xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd \" +\n\t\t\t\t\"must be numbers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tscreenData.screenObj.render();\n\n\t\tconst ctx = screenData.context;\n\t\tctx.strokeStyle = screenData.fColor.s;\n\t\tctx.beginPath();\n\t\tctx.moveTo( xStart, yStart );\n\t\tctx.bezierCurveTo( x1, y1, x2, y2, xEnd, yEnd );\n\t\tctx.stroke();\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n\n\t// Helper: Calculate distance squared between two points\n\tfunction calcDistance( p1, p2 ) {\n\t\tconst dx = p1.x - p2.x;\n\t\tconst dy = p1.y - p2.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\n\t// Helper: Calculate point on cubic Bezier curve at parameter t (0-1)\n\tfunction calcStep( t, points ) {\n\t\tconst a = ( 1 - t );\n\t\tconst a2 = a * a;\n\t\tconst a3 = a * a * a;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t * t;\n\n\t\treturn {\n\t\t\t\"x\": Math.round(\n\t\t\t\ta3 * points[ 0 ].x +\n\t\t\t\t3 * a2 * t * points[ 1 ].x +\n\t\t\t\t3 * a * t2 * points[ 2 ].x +\n\t\t\t\tt3 * points[ 3 ].x\n\t\t\t),\n\t\t\t\"y\": Math.round(\n\t\t\t\ta3 * points[ 0 ].y +\n\t\t\t\t3 * a2 * t * points[ 1 ].y +\n\t\t\t\t3 * a * t2 * points[ 2 ].y +\n\t\t\t\tt3 * points[ 3 ].y\n\t\t\t)\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Image Operations Module\n * \n * Handles image loading, sprite sheets, and image drawing/manipulation.\n * \n * @module modules/images\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\tlet m_callback = null;\n\n\t// LOADIMAGE - Load image from URL or element\n\tpi._.addCommand( \"loadImage\", loadImage, false, false, [ \"src\", \"name\" ] );\n\n\tfunction loadImage( args ) {\n\t\tlet src = args[ 0 ];\n\t\tlet name = args[ 1 ];\n\t\tlet image;\n\t\tlet callback;\n\t\tlet tempOnload;\n\n\t\tif( typeof src === \"string\" ) {\n\t\t\t// Create a new image\n\t\t\timage = new Image();\n\n\t\t\t// Set the source\n\t\t\timage.src = src;\n\t\t} else {\n\t\t\tif( !src || ( src.tagName !== \"IMG\" && src.tagName !== \"CANVAS\" ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"loadImage: src must be a string, image element, or canvas.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_IMAGE_SOURCE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\timage = src;\n\t\t}\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t}\n\n\t\tpiData.images[ name ] = {\n\t\t\t\"image\": null,\n\t\t\t\"type\": \"image\"\n\t\t};\n\n\t\t// Store callback locally\n\t\tcallback = m_callback;\n\t\tm_callback = null;\n\n\t\tif( !image.complete ) {\n\t\t\tm_piWait();\n\t\t\tif( pi.util.isFunction( image.onload ) ) {\n\t\t\t\ttempOnload = image.onload;\n\t\t\t}\n\t\t\timage.onload = function() {\n\t\t\t\tif( tempOnload ) {\n\t\t\t\t\ttempOnload();\n\t\t\t\t}\n\t\t\t\tpiData.images[ name ].image = image;\n\t\t\t\tif( pi.util.isFunction( callback ) ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t} else {\n\t\t\tpiData.images[ name ].image = image;\n\t\t\tif( pi.util.isFunction( callback ) ) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\n\t\treturn name;\n\t}\n\n\t// LOADSPRITESHEET - Load spritesheet with grid or auto-detection\n\tpi._.addCommand( \"loadSpritesheet\", loadSpritesheet, false, false,\n\t\t[ \"src\", \"name\", \"width\", \"height\", \"margin\" ]\n\t);\n\n\tfunction loadSpritesheet( args ) {\n\t\tlet src = args[ 0 ];\n\t\tlet name = args[ 1 ];\n\t\tlet spriteWidth = args[ 2 ];\n\t\tlet spriteHeight = args[ 3 ];\n\t\tlet margin = args[ 4 ];\n\n\t\tif( margin == null ) {\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tlet isAuto = false;\n\t\tif( spriteWidth == null && spriteHeight == null ) {\n\t\t\tisAuto = true;\n\t\t\tspriteWidth = 0;\n\t\t\tspriteHeight = 0;\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tspriteWidth = Math.round( spriteWidth );\n\t\tspriteHeight = Math.round( spriteHeight );\n\t\tmargin = Math.round( margin );\n\n\t\t// Validate spriteWidth and spriteHeight\n\t\tif(\n\t\t\t!isAuto && (\n\t\t\t\t!pi.util.isInteger( spriteWidth ) ||\n\t\t\t\t!pi.util.isInteger( spriteHeight )\n\t\t\t)\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"loadSpriteSheet: width, and height must be integers.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SPRITE_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Size cannot be less than 1\n\t\tif( !isAuto && ( spriteWidth < 1 || spriteHeight < 1 ) ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"loadSpriteSheet: width, and height must be greater than 0.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SPRITE_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate margin\n\t\tif( !pi.util.isInteger( margin ) ) {\n\t\t\tconst error = new TypeError( \"loadSpriteSheet: margin must be an integer.\" );\n\t\t\terror.code = \"INVALID_MARGIN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate name\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t}\n\n\t\t// Load the frames when the image gets loaded\n\t\tm_callback = function() {\n\n\t\t\t// Update the image data\n\t\t\tconst imageData = piData.images[ name ];\n\t\t\timageData.type = \"spritesheet\";\n\t\t\timageData.spriteWidth = spriteWidth;\n\t\t\timageData.spriteHeight = spriteHeight;\n\t\t\timageData.margin = margin;\n\t\t\timageData.frames = [];\n\t\t\timageData.isAuto = isAuto;\n\n\t\t\t// Prepare for loops\n\t\t\tconst width = imageData.image.width;\n\t\t\tconst height = imageData.image.height;\n\n\t\t\tif( imageData.isAuto ) {\n\n\t\t\t\t// Find all clusters of pixels (auto-detect sprites)\n\t\t\t\tconst searched = {};\n\t\t\t\tconst canvas = document.createElement( \"canvas\" );\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\t\t\t\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\t\t\t\tcontext.drawImage( imageData.image, 0, 0 );\n\t\t\t\tconst dirs = [\n\t\t\t\t\t[ -1, -1 ], [ 0, -1 ], [ 1, -1 ],\n\t\t\t\t\t[ -1,  0 ],             [ 1,  0 ],\n\t\t\t\t\t[ -1,  1 ], [ 0,  1 ], [ 1,  1 ]\n\t\t\t\t];\n\t\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\t\t// Helper: Get cluster of connected pixels (for auto-detection)\n\t\t\t\tfunction getCluster( x, y, frameData ) {\n\t\t\t\t\tconst clusterName = x + \"_\" + y;\n\t\t\t\t\tif(\n\t\t\t\t\t\tsearched[ clusterName ] || x < 0 || x >= width || \n\t\t\t\t\t\ty < 0 || y >= height\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst clusters = [];\n\t\t\t\t\tclusters.push( [ x, y, clusterName ] );\n\n\t\t\t\t\twhile( clusters.length > 0 ) {\n\t\t\t\t\t\tconst cluster = clusters.pop();\n\t\t\t\t\t\tx = cluster[ 0 ];\n\t\t\t\t\t\ty = cluster[ 1 ];\n\t\t\t\t\t\tconst name = cluster[ 2 ];\n\t\t\t\t\t\tsearched[ name ] = true;\n\t\t\t\t\t\tconst index = ( x + y * width ) * 4;\n\n\t\t\t\t\t\tif( data[ index + 3 ] > 0 ) {\n\t\t\t\t\t\t\tframeData.x = Math.min( frameData.x, x );\n\t\t\t\t\t\t\tframeData.y = Math.min( frameData.y, y );\n\t\t\t\t\t\t\tframeData.right = Math.max( frameData.right, x );\n\t\t\t\t\t\t\tframeData.bottom = Math.max( frameData.bottom, y );\n\t\t\t\t\t\t\tframeData.width = frameData.right - frameData.x + 1;\n\t\t\t\t\t\t\tframeData.height = frameData.bottom - frameData.y + 1;\n\n\t\t\t\t\t\t\tfor( let i = 0; i < dirs.length; i++ ) {\n\t\t\t\t\t\t\t\tconst x2 = x + dirs[ i ][ 0 ];\n\t\t\t\t\t\t\t\tconst y2 = y + dirs[ i ][ 1 ];\n\t\t\t\t\t\t\t\tconst name2 = x2 + \"_\" + y2;\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t!( searched[ name2 ] || x2 < 0 || x2 >= width || \n\t\t\t\t\t\t\t\t\ty2 < 0 || y2 >= height )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tclusters.push( [ x2, y2, name2 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Read the alpha component of each pixel\n\t\t\t\tfor( let i = 3; i < data.length; i += 4 ) {\n\t\t\t\t\tif( data[ i ] > 0 ) {\n\t\t\t\t\t\tconst index = ( i - 3 ) / 4;\n\t\t\t\t\t\tconst x1 = index % width;\n\t\t\t\t\t\tconst y1 = Math.floor( index / width );\n\t\t\t\t\t\tconst frameData = {\n\t\t\t\t\t\t\t\"x\": width,\n\t\t\t\t\t\t\t\"y\": height,\n\t\t\t\t\t\t\t\"width\": 0,\n\t\t\t\t\t\t\t\"height\": 0,\n\t\t\t\t\t\t\t\"right\": 0,\n\t\t\t\t\t\t\t\"bottom\": 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tgetCluster( x1, y1, frameData );\n\t\t\t\t\t\tif( ( frameData.width + frameData.height ) > 4 ) {\n\t\t\t\t\t\t\timageData.frames.push( frameData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Grid-based sprite detection\n\t\t\t\tlet x1 = imageData.margin;\n\t\t\t\tlet y1 = imageData.margin;\n\t\t\t\tlet x2 = x1 + imageData.spriteWidth;\n\t\t\t\tlet y2 = y1 + imageData.spriteHeight;\n\n\t\t\t\t// Loop through all the frames\n\t\t\t\twhile( y2 <= height - imageData.margin ) {\n\t\t\t\t\twhile( x2 <= width - imageData.margin ) {\n\t\t\t\t\t\timageData.frames.push( {\n\t\t\t\t\t\t\t\"x\": x1,\n\t\t\t\t\t\t\t\"y\": y1,\n\t\t\t\t\t\t\t\"width\": imageData.spriteWidth,\n\t\t\t\t\t\t\t\"height\": imageData.spriteHeight,\n\t\t\t\t\t\t\t\"right\": x1 + imageData.spriteWidth - 1,\n\t\t\t\t\t\t\t\"bottom\": y1 + imageData.spriteHeight - 1\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tx1 += imageData.spriteWidth + imageData.margin;\n\t\t\t\t\t\tx2 = x1 + imageData.spriteWidth;\n\t\t\t\t\t}\n\t\t\t\t\tx1 = imageData.margin;\n\t\t\t\t\tx2 = x1 + imageData.spriteWidth;\n\t\t\t\t\ty1 += imageData.spriteHeight + imageData.margin;\n\t\t\t\t\ty2 = y1 + imageData.spriteHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tloadImage( [ src, name ] );\n\n\t\treturn name;\n\t}\n\n\t// GETSPRITESHEETDATA - Get spritesheet frame information\n\tpi._.addCommand( \"getSpritesheetData\", getSpritesheetData, false, true, [ \"name\" ] );\n\n\tfunction getSpritesheetData( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\n\t\t// Validate name\n\t\tif( !piData.images[ name ] ) {\n\t\t\tconst error = new Error( \"getSpritesheetData: invalid sprite name\" );\n\t\t\terror.code = \"INVALID_SPRITE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst sprite = piData.images[ name ];\n\n\t\tif( sprite.type !== \"spritesheet\" ) {\n\t\t\tconst error = new Error( \"getSpritesheetData: image is not a sprite\" );\n\t\t\terror.code = \"NOT_A_SPRITESHEET\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst spriteData = {\n\t\t\t\"frameCount\": sprite.frames.length,\n\t\t\t\"frames\": []\n\t\t};\n\n\t\tfor( let i = 0; i < sprite.frames.length; i++ ) {\n\t\t\tspriteData.frames.push( {\n\t\t\t\t\"index\": i,\n\t\t\t\t\"x\": sprite.frames[ i ].x,\n\t\t\t\t\"y\": sprite.frames[ i ].y,\n\t\t\t\t\"width\": sprite.frames[ i ].width,\n\t\t\t\t\"height\": sprite.frames[ i ].height,\n\t\t\t\t\"left\": sprite.frames[ i ].x,\n\t\t\t\t\"top\": sprite.frames[ i ].y,\n\t\t\t\t\"right\": sprite.frames[ i ].right,\n\t\t\t\t\"bottom\": sprite.frames[ i ].bottom\n\t\t\t} );\n\t\t}\n\n\t\treturn spriteData;\n\t}\n\n\t// GETIMAGE - Capture image from screen region\n\tpi._.addCommand( \"getImage\", getImage, false, true, [ \"name\", \"x1\", \"y1\", \"x2\", \"y2\" ] );\n\n\tfunction getImage( screenData, args ) {\n\t\tlet name = args[ 0 ];\n\t\tconst x1 = Math.round( args[ 1 ] );\n\t\tconst y1 = Math.round( args[ 2 ] );\n\t\tconst x2 = Math.round( args[ 3 ] );\n\t\tconst y2 = Math.round( args[ 4 ] );\n\n\t\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\t\tconst error = new TypeError( \"getImage: parameters x1, x2, y1, y2 must be integers.\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tname = \"\" + piData.imageCount;\n\t\t\tpiData.imageCount += 1;\n\t\t} else if( piData.images[ name ] ) {\n\t\t\tconst error = new Error(\n\t\t\t\t`getImage: name ${name} is already used; name must be unique.`\n\t\t\t);\n\t\t\terror.code = \"DUPLICATE_IMAGE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst canvas = document.createElement( \"canvas\" );\n\t\tconst context = canvas.getContext( \"2d\" );\n\t\tconst width = Math.abs( x1 - x2 );\n\t\tconst height = Math.abs( y1 - y2 );\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tscreenData.screenObj.render();\n\t\tcontext.drawImage( screenData.screenObj.canvas(), x1, y1, width, height, 0, 0, width, height );\n\n\t\tpiData.images[ name ] = {\n\t\t\t\"image\": canvas,\n\t\t\t\"type\": \"image\"\n\t\t};\n\n\t\treturn name;\n\t}\n\n\t// REMOVEIMAGE - Remove loaded image from cache\n\tpi._.addCommand( \"removeImage\", removeImage, false, false, [ \"name\" ] );\n\n\tfunction removeImage( args ) {\n\t\tconst name = args[ 0 ];\n\n\t\tif( typeof name !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"removeImage: name must be a string.\" );\n\t\t\terror.code = \"INVALID_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tdelete piData.images[ name ];\n\t}\n\n\t// DRAWIMAGE - Draw image to screen\n\tpi._.addCommand( \"drawImage\", drawImage, false, true,\n\t\t[ \"name\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\", \"alpha\", \"scaleX\", \"scaleY\" ]\n\t);\n\n\tfunction drawImage( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\t\tconst x = args[ 1 ];\n\t\tconst y = args[ 2 ];\n\t\tconst angle = args[ 3 ];\n\t\tconst anchorX = args[ 4 ];\n\t\tconst anchorY = args[ 5 ];\n\t\tconst alpha = args[ 6 ];\n\t\tconst scaleX = args[ 7 ];\n\t\tconst scaleY = args[ 8 ];\n\n\t\tlet img;\n\n\t\tif( typeof name === \"string\" ) {\n\t\t\tif( !piData.images[ name ] ) {\n\t\t\t\tconst error = new Error( \"drawImage: invalid image name\" );\n\t\t\t\terror.code = \"INVALID_IMAGE_NAME\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\timg = piData.images[ name ].image;\n\t\t} else {\n\t\t\tif( !name || ( !name.canvas && !name.getContext ) ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"drawImage: image source object type must be an image \" +\n\t\t\t\t\t\"already loaded by the loadImage command or a screen.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_IMAGE_SOURCE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tif( pi.util.isFunction( name.canvas ) ) {\n\t\t\t\timg = name.canvas();\n\t\t\t} else {\n\t\t\t\timg = name;\n\t\t\t}\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"drawImage: parameters x and y must be numbers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tdrawItem( screenData, img, x, y, angle, anchorX, anchorY, alpha, null, scaleX, scaleY );\n\t}\n\n\t// DRAWSPRITE - Draw sprite frame to screen\n\tpi._.addCommand( \"drawSprite\", drawSprite, false, true,\n\t\t[\n\t\t\t\"name\", \"frame\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\",\n\t\t\t\"alpha\", \"scaleX\", \"scaleY\"\n\t\t]\n\t);\n\n\tfunction drawSprite( screenData, args ) {\n\t\tconst name = args[ 0 ];\n\t\tconst frame = args[ 1 ];\n\t\tconst x = args[ 2 ];\n\t\tconst y = args[ 3 ];\n\t\tconst angle = args[ 4 ];\n\t\tconst anchorX = args[ 5 ];\n\t\tconst anchorY = args[ 6 ];\n\t\tconst alpha = args[ 7 ];\n\t\tconst scaleX = args[ 8 ];\n\t\tconst scaleY = args[ 9 ];\n\n\t\t// Validate name\n\t\tif( !piData.images[ name ] ) {\n\t\t\tconst error = new Error( \"drawSprite: invalid sprite name\" );\n\t\t\terror.code = \"INVALID_SPRITE_NAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate frame\n\t\tif(\n\t\t\t!pi.util.isInteger( frame ) ||\n\t\t\tframe >= piData.images[ name ].frames.length ||\n\t\t\tframe < 0\n\t\t) {\n\t\t\tconst error = new RangeError( \"drawSprite: frame number is not valid\" );\n\t\t\terror.code = \"INVALID_FRAME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( x ) || isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"drawSprite: parameters x and y must be numbers\" );\n\t\t\terror.code = \"INVALID_COORDINATES\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst img = piData.images[ name ].image;\n\n\t\tdrawItem(\n\t\t\tscreenData, img, x, y, angle, anchorX, anchorY, alpha,\n\t\t\tpiData.images[ name ].frames[ frame ], scaleX, scaleY\n\t\t);\n\t}\n\n\t// Helper: Draw image or sprite with transformations\n\tfunction drawItem(\n\t\tscreenData, img, x, y, angle, anchorX, anchorY, alpha, spriteData, scaleX, scaleY\n\t) {\n\t\tif( scaleX == null || isNaN( Number( scaleX ) ) ) {\n\t\t\tscaleX = 1;\n\t\t}\n\n\t\tif( scaleY == null || isNaN( Number( scaleY ) ) ) {\n\t\t\tscaleY = 1;\n\t\t}\n\n\t\tif( angle == null ) {\n\t\t\tangle = 0;\n\t\t}\n\n\t\t// Convert the angle from degrees to radian\n\t\tangle = pi.util.degreesToRadian( angle );\n\n\t\tif( !anchorX ) {\n\t\t\tanchorX = 0;\n\t\t}\n\t\tif( !anchorY ) {\n\t\t\tanchorY = 0;\n\t\t}\n\n\t\tif( !alpha && alpha !== 0 ) {\n\t\t\talpha = 255;\n\t\t}\n\n\t\tif( spriteData ) {\n\t\t\tanchorX = Math.round( spriteData.width * anchorX );\n\t\t\tanchorY = Math.round( spriteData.height * anchorY );\n\t\t} else {\n\t\t\tanchorX = Math.round( img.width * anchorX );\n\t\t\tanchorY = Math.round( img.height * anchorY );\n\t\t}\n\n\t\tconst context = screenData.context;\n\t\tconst oldAlpha = context.globalAlpha;\n\t\tcontext.globalAlpha = ( alpha / 255 );\n\n\t\tscreenData.screenObj.render();\n\n\t\tcontext.translate( x, y );\n\t\tcontext.rotate( angle );\n\t\tcontext.scale( scaleX, scaleY );\n\n\t\tif( spriteData == null ) {\n\t\t\tcontext.drawImage( img, -anchorX, -anchorY );\n\t\t} else {\n\t\t\tcontext.drawImage(\n\t\t\t\timg,\n\t\t\t\tspriteData.x, spriteData.y, spriteData.width, spriteData.height,\n\t\t\t\t-anchorX, -anchorY, spriteData.width, spriteData.height\n\t\t\t);\n\t\t}\n\n\t\tcontext.scale( 1 / scaleX, 1 / scaleY );\n\t\tcontext.rotate( -angle );\n\t\tcontext.translate( -x, -y );\n\t\tcontext.globalAlpha = oldAlpha;\n\n\t\tpiData.commands.resetImageData( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Font Module\n * \n * Font loading and management, including base32-encoded pixel fonts.\n * \n * @module modules/font\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\n\t// LOADFONT - Load font from image or encoded data\n\tpi._.addCommand( \"loadFont\", loadFont, false, false,\n\t\t[ \"fontSrc\", \"width\", \"height\", \"charSet\", \"isEncoded\" ]\n\t);\n\n\tfunction loadFont( args ) {\n\t\tconst fontSrc = args[ 0 ];\n\t\tconst width = Math.round( args[ 1 ] );\n\t\tconst height = Math.round( args[ 2 ] );\n\t\tlet charSet = args[ 3 ];\n\t\tconst isEncoded = !!args[ 4 ];\n\n\t\tif( isNaN( width ) || isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"loadFont: width and height must be integers.\" );\n\t\t\terror.code = \"INVALID_FONT_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Default charset to 0 to 255\n\t\tif( !charSet ) {\n\t\t\tcharSet = [];\n\t\t\tfor( let i = 0; i < 256; i += 1 ) {\n\t\t\t\tcharSet.push( i );\n\t\t\t}\n\t\t}\n\n\t\tif( !( pi.util.isArray( charSet ) || typeof charSet === \"string\" ) ) {\n\t\t\tconst error = new TypeError( \"loadFont: charSet must be an array or a string.\" );\n\t\t\terror.code = \"INVALID_CHARSET\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Convert charSet to array of integers\n\t\tif( typeof charSet === \"string\" ) {\n\t\t\tconst temp = [];\n\t\t\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\t\t\ttemp.push( charSet.charCodeAt( i ) );\n\t\t\t}\n\t\t\tcharSet = temp;\n\t\t}\n\n\t\t// Load the chars\n\t\tconst chars = {};\n\t\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\t\tchars[ charSet[ i ] ] = i;\n\t\t}\n\n\t\t// Set the font data\n\t\tconst font = {\n\t\t\t\"id\": piData.nextFontId,\n\t\t\t\"width\": width,\n\t\t\t\"height\": height,\n\t\t\t\"data\": [],\n\t\t\t\"chars\": chars,\n\t\t\t\"charSet\": charSet,\n\t\t\t\"colorCount\": 2,\n\t\t\t\"mode\": \"pixel\",\n\t\t\t\"printFunction\": piData.commands.piPrint,\n\t\t\t\"calcWidth\": piData.commands.piCalcWidth,\n\t\t\t\"image\": null,\n\t\t\t\"sWidth\": width,\n\t\t\t\"sHeight\": height\n\t\t};\n\n\t\tif( !isEncoded ) {\n\t\t\tfont.mode = \"bitmap\";\n\t\t\tfont.printFunction = piData.commands.bitmapPrint;\n\t\t}\n\n\t\t// Add this to the font data\n\t\tpiData.fonts[ font.id ] = font;\n\n\t\t// Increment the next font id\n\t\tpiData.nextFontId += 1;\n\n\t\tif( isEncoded ) {\n\t\t\tloadFontFromBase32Encoded( fontSrc, width, height, font );\n\t\t} else {\n\t\t\tloadFontFromImg( fontSrc, font );\n\t\t}\n\n\t\treturn font.id;\n\t}\n\n\tfunction loadFontFromBase32Encoded( fontSrc, width, height, font ) {\n\t\tfont.data = decompressFont( fontSrc, width, height );\n\t}\n\n\tfunction decompressFont( numStr, width, height ) {\n\t\tconst size = 32;\n\t\tconst base = 32;\n\t\tlet bin = \"\";\n\t\tconst data = [];\n\n\t\tnumStr = \"\" + numStr;\n\t\tconst nums = numStr.split( \",\" );\n\n\t\t// Loop through all the nums\n\t\tfor( let i = 0; i < nums.length; i++ ) {\n\n\t\t\t// Convert the string to base number then to binary string\n\t\t\tlet num = parseInt( nums[ i ], base ).toString( 2 );\n\n\t\t\t// Pad the front with 0's so that num has length of size\n\t\t\tfor( let j = num.length; j < size; j++ ) {\n\t\t\t\tnum = \"0\" + num;\n\t\t\t}\n\n\t\t\t// Add to the bin\n\t\t\tbin += num;\n\t\t}\n\n\t\t// Loop through all the bits\n\t\tlet i = 0;\n\t\tif( bin.length % size > 0 ) {\n\t\t\tconsole.warn( \"loadFont: Invalid font data.\" );\n\t\t\treturn data;\n\t\t}\n\n\t\twhile( i < bin.length ) {\n\n\t\t\t// Push a new character onto data\n\t\t\tdata.push( [] );\n\n\t\t\t// Store the index of the font character\n\t\t\tconst index = data.length - 1;\n\n\t\t\t// Loop through all the rows\n\t\t\tfor( let y = 0; y < height; y += 1 ) {\n\n\t\t\t\t// Push a new row onto the character data\n\t\t\t\tdata[ index ].push( [] );\n\n\t\t\t\t// Loop through a row\n\t\t\t\tfor( let x = 0; x < width; x += 1 ) {\n\n\t\t\t\t\tlet num;\n\t\t\t\t\tif( i >= bin.length ) {\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnum = parseInt( bin[ i ] );\n\t\t\t\t\t\tif( isNaN( num ) ) {\n\t\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Push the bit onto the character\n\t\t\t\t\tdata[ index ][ y ].push( num );\n\n\t\t\t\t\t// Increment the bit\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction loadFontFromImg( fontSrc, font ) {\n\t\tlet img;\n\n\t\tif( typeof fontSrc === \"string\" ) {\n\t\t\t// Create a new image\n\t\t\timg = new Image();\n\n\t\t\t// Set the source\n\t\t\timg.src = fontSrc;\n\t\t} else if( fontSrc instanceof HTMLImageElement ) {\n\t\t\timg = fontSrc;\n\t\t} else {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"loadFont: fontSrc must be a string, image or canvas.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_FONT_SOURCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !img.complete ) {\n\t\t\t// Signal pijs to wait\n\t\t\tm_piWait();\n\n\t\t\t// Need to wait until the image is loaded\n\t\t\timg.onload = function() {\n\t\t\t\tfont.image = img;\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t\timg.onerror = function( err ) {\n\t\t\t\tconsole.warn( \"loadFont: unable to load image for font.\" );\n\t\t\t\tm_piResume();\n\t\t\t};\n\t\t} else {\n\t\t\tfont.image = img;\n\t\t}\n\t}\n\n\t// SETDEFAULTFONT - Set default font for new screens\n\tpi._.addCommand( \"setDefaultFont\", setDefaultFont, false, false, [ \"fontId\" ] );\n\tpi._.addSetting( \"defaultFont\", setDefaultFont, false, [ \"fontId\" ] );\n\n\tfunction setDefaultFont( args ) {\n\t\tconst fontId = parseInt( args[ 0 ] );\n\n\t\tif( isNaN( fontId ) || fontId < 0 || !piData.fonts[ fontId ] ) {\n\t\t\tconst error = new Error( \"setDefaultFont: invalid fontId\" );\n\t\t\terror.code = \"INVALID_FONT_ID\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.defaultFont = piData.fonts[ fontId ];\n\t}\n\n\t// SETFONT - Set font for current screen\n\tpi._.addCommand( \"setFont\", setFont, false, true, [ \"fontId\" ] );\n\tpi._.addSetting( \"font\", setFont, true, [ \"fontId\" ] );\n\n\tfunction setFont( screenData, args ) {\n\t\tconst fontId = args[ 0 ];\n\n\t\t// Check if this is a valid font\n\t\tif( piData.fonts[ fontId ] ) {\n\n\t\t\t// Set the font data for the current print cursor\n\t\t\tconst font = piData.fonts[ fontId ];\n\t\t\tscreenData.printCursor.font = font;\n\n\t\t\t// Set the rows and cols\n\t\t\tscreenData.printCursor.cols = Math.floor( screenData.width / font.width );\n\t\t\tscreenData.printCursor.rows = Math.floor( screenData.height / font.height );\n\t\t} else if( typeof fontId === \"string\" ) {\n\n\t\t\t// Set the context font\n\t\t\tscreenData.context.font = fontId;\n\t\t\tscreenData.context.textBaseline = \"top\";\n\n\t\t\t// Set the font dimensions\n\t\t\tconst size = calcFontSize( screenData.context );\n\n\t\t\t// Set the font data\n\t\t\tscreenData.printCursor.font = {\n\t\t\t\t\"name\": screenData.context.font,\n\t\t\t\t\"width\": size.width,\n\t\t\t\t\"height\": size.height,\n\t\t\t\t\"mode\": \"canvas\",\n\t\t\t\t\"printFunction\": piData.commands.canvasPrint,\n\t\t\t\t\"calcWidth\": piData.commands.canvasCalcWidth\n\t\t\t};\n\n\t\t\t// Set the rows and cols\n\t\t\tscreenData.printCursor.cols = Math.floor( screenData.width / size.width );\n\t\t\tscreenData.printCursor.rows = Math.floor( screenData.height / size.height );\n\t\t}\n\t}\n\n\tfunction calcFontSize( context ) {\n\t\tlet px = context.measureText( \"M\" ).width;\n\n\t\t// Add some padding to px just in case\n\t\tpx = Math.round( px * 1.5 );\n\n\t\t// Create a temporary canvas the size of the font px\n\t\tconst tCanvas = document.createElement( \"canvas\" );\n\t\ttCanvas.width = px;\n\t\ttCanvas.height = px;\n\n\t\t// Create a temporary canvas\n\t\tconst tContext = tCanvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\t\ttContext.font = context.font;\n\t\ttContext.textBaseline = \"top\";\n\t\ttContext.fillStyle = \"#FF0000\";\n\n\t\t// Set a blank size object\n\t\tconst size = {\n\t\t\t\"height\": 0,\n\t\t\t\"width\": 0\n\t\t};\n\n\t\t// Fill the M character to get the font size\n\t\ttContext.fillText( \"M\", 0, 0 );\n\n\t\t// Get the pixel data\n\t\tconst data = tContext.getImageData( 0, 0, px, px ).data;\n\n\t\t// Loop through all the pixels to find the width and height\n\t\tfor( let y = 0; y < px; y++ ) {\n\t\t\tfor( let x = 0; x < px; x++ ) {\n\t\t\t\tconst i = ( y * px + x ) * 4;\n\n\t\t\t\tif( data[ i + 3 ] > 0 ) {\n\t\t\t\t\tif( x > size.width ) {\n\t\t\t\t\t\tsize.width = x;\n\t\t\t\t\t}\n\t\t\t\t\tif( y > size.height ) {\n\t\t\t\t\t\tsize.height = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsize.width += 1;\n\t\tsize.height += 1;\n\n\t\treturn size;\n\t}\n\n\t// CANVASPRINT - Print using canvas font\n\tpi._.addCommand( \"canvasPrint\", canvasPrint, true, false );\n\n\tfunction canvasPrint( screenData, msg, x, y ) {\n\t\tscreenData.context.fillStyle = screenData.fColor.s;\n\t\tscreenData.context.fillText( msg, x, y );\n\t}\n\n\t// BITMAPPRINT - Print using bitmap font\n\tpi._.addCommand( \"bitmapPrint\", bitmapPrint, true, false );\n\n\tfunction bitmapPrint( screenData, msg, x, y ) {\n\t\tscreenData.screenObj.render();\n\t\tconst font = screenData.printCursor.font;\n\t\tconst width = font.image.width;\n\t\tconst columns = Math.floor( width / font.sWidth );\n\n\t\tfor( let i = 0; i < msg.length; i++ ) {\n\t\t\tconst charIndex = font.chars[ msg.charCodeAt( i ) ];\n\t\t\t\n\t\t\t// Get the source x & y coordinates\n\t\t\tconst sx = ( charIndex % columns ) * font.sWidth;\n\t\t\tconst sy = Math.floor( charIndex / columns ) * font.sHeight;\n\n\t\t\t// Draw the character on the screen\n\t\t\tscreenData.context.drawImage(\n\t\t\t\tfont.image, sx, sy, font.sWidth, font.sHeight,\n\t\t\t\tx + font.width * i, y, font.width, font.height\n\t\t\t);\n\t\t}\n\t}\n\n\t// GETAVAILABLEFONTS - Get list of loaded fonts\n\tpi._.addCommand( \"getAvailableFonts\", getAvailableFonts, false, false, [] );\n\n\tfunction getAvailableFonts() {\n\t\tconst data = [];\n\t\tfor( const i in piData.fonts ) {\n\t\t\tdata.push( {\n\t\t\t\t\"id\": piData.fonts[ i ].id,\n\t\t\t\t\"width\": piData.fonts[ i ].width,\n\t\t\t\t\"height\": piData.fonts[ i ].height\n\t\t\t} );\n\t\t}\n\t\treturn data;\n\t}\n\n\t// SETFONTSIZE - Set canvas font size\n\tpi._.addCommand( \"setFontSize\", setFontSize, false, true, [ \"width\", \"height\" ] );\n\tpi._.addSetting( \"fontSize\", setFontSize, true, [ \"width\", \"height\" ] );\n\n\tfunction setFontSize( screenData, args ) {\n\t\tconst width = args[ 0 ];\n\t\tconst height = args[ 1 ];\n\n\t\tif( isNaN( width ) ) {\n\t\t\tconst error = new TypeError( \"setFontSize: width must be a number\" );\n\t\t\terror.code = \"INVALID_WIDTH\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isNaN( height ) ) {\n\t\t\tconst error = new TypeError( \"setFontSize: height must be a number\" );\n\t\t\terror.code = \"INVALID_HEIGHT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( screenData.printCursor.font.mode !== \"bitmap\" ) {\n\t\t\tconsole.warn( \"setFontSize: only bitmap fonts can change sizes\" );\n\t\t\treturn;\n\t\t}\n\n\t\tscreenData.printCursor.font.width = width;\n\t\tscreenData.printCursor.font.height = height;\n\n\t\t// Update rows and cols\n\t\tscreenData.printCursor.cols = Math.floor( screenData.width / width );\n\t\tscreenData.printCursor.rows = Math.floor( screenData.height / height );\n\t}\n\n\t// SETCHAR - Set custom character data for pixel font\n\tpi._.addCommand( \"setChar\", setChar, false, true, [ \"code\", \"data\" ] );\n\tpi._.addSetting( \"char\", setChar, true, [ \"code\", \"data\" ] );\n\n\tfunction setChar( screenData, args ) {\n\t\tlet code = args[ 0 ];\n\t\tlet data = args[ 1 ];\n\n\t\tif( screenData.printCursor.font.mode !== \"pixel\" ) {\n\t\t\tconsole.warn( \"setChar: only pixel fonts can change characters\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif( typeof code === \"string\" ) {\n\t\t\tcode = code.charCodeAt( 0 );\n\t\t} else {\n\t\t\tcode = Math.round( code );\n\t\t}\n\n\t\tif( isNaN( code ) ) {\n\t\t\tconst error = new TypeError( \"setChar: code must be an integer or a string\" );\n\t\t\terror.code = \"INVALID_CODE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate data\n\t\tif( typeof data === \"string\" ) {\n\t\t\tdata = pi.util.hexToData(\n\t\t\t\tdata,\n\t\t\t\tscreenData.printCursor.font.width,\n\t\t\t\tscreenData.printCursor.font.height\n\t\t\t);\n\t\t} else if( pi.util.isArray( data ) ) {\n\t\t\tif( data.length !== screenData.printCursor.font.height ) {\n\t\t\t\tconst error = new RangeError( \"setChar: data array is the wrong length\" );\n\t\t\t\terror.code = \"INVALID_DATA_LENGTH\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tfor( let i = 0; i < data.length; i++ ) {\n\t\t\t\tif( data[ i ].length !== screenData.printCursor.font.width ) {\n\t\t\t\t\tconst error = new RangeError( \"setChar: data array row is the wrong length\" );\n\t\t\t\t\terror.code = \"INVALID_DATA_WIDTH\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tfor( let j = 0; j < data[ i ].length; j++ ) {\n\t\t\t\t\tif( !pi.util.isInteger( data[ i ][ j ] ) ) {\n\t\t\t\t\t\tconst error = new TypeError( \"setChar: data array contains invalid data\" );\n\t\t\t\t\t\terror.code = \"INVALID_DATA_VALUE\";\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst error = new TypeError( \"setChar: data must be a string or an array\" );\n\t\t\terror.code = \"INVALID_DATA_TYPE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Set font data\n\t\tscreenData.printCursor.font.data[ code ] = data;\n\t}\n}\n\n", "/**\n * Pi.js - Print/Text Module\n * \n * Text rendering with cursor management, word wrapping, and centering.\n * \n * @module modules/print\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// PRINT - Print text to screen\n\tpi._.addCommand( \"print\", print, false, true, [ \"msg\", \"inLine\", \"isCentered\" ] );\n\n\tfunction print( screenData, args ) {\n\t\tlet msg = args[ 0 ];\n\t\tconst inLine = args[ 1 ];\n\t\tconst isCentered = args[ 2 ];\n\n\t\t// Bail if not possible to print an entire line on a screen\n\t\tif( screenData.printCursor.font.height > screenData.height ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( msg === undefined ) {\n\t\t\tmsg = \"\";\n\t\t} else if( typeof msg !== \"string\" ) {\n\t\t\tmsg = \"\" + msg;\n\t\t}\n\n\t\t// Add tabs\n\t\tmsg = msg.replace( /\\t/g, \"    \" );\n\n\t\t// Split messages by \\n\n\t\tconst parts = msg.split( /\\n/ );\n\t\tfor( let i = 0; i < parts.length; i++ ) {\n\t\t\tstartPrint( screenData, parts[ i ], inLine, isCentered );\n\t\t}\n\t}\n\n\tfunction startPrint( screenData, msg, inLine, isCentered ) {\n\t\tconst printCursor = screenData.printCursor;\n\n\t\t// Adjust if the text is too wide for the screen\n\t\tlet width = printCursor.font.calcWidth( screenData, msg );\n\n\t\tif( isCentered ) {\n\t\t\tprintCursor.x = Math.floor(\n\t\t\t\t( printCursor.cols - msg.length ) / 2\n\t\t\t) * screenData.printCursor.font.width;\n\t\t}\n\n\t\tif(\n\t\t\t!inLine &&\n\t\t\t!isCentered &&\n\t\t\twidth + printCursor.x > screenData.width &&\n\t\t\tmsg.length > 1\n\t\t) {\n\t\t\tconst overlap = ( width + printCursor.x ) - screenData.width;\n\t\t\tconst onScreen = width - overlap;\n\t\t\tconst onScreenPct = onScreen / width;\n\t\t\tlet msgSplit = Math.floor( msg.length * onScreenPct );\n\t\t\tlet msg1 = msg.substring( 0, msgSplit );\n\t\t\tlet msg2 = msg.substring( msgSplit, msg.length );\n\n\t\t\tif( printCursor.breakWord ) {\n\t\t\t\tconst index = msg1.lastIndexOf( \" \" );\n\t\t\t\tif( index > -1 ) {\n\t\t\t\t\tmsg2 = msg1.substring( index ).trim() + msg2;\n\t\t\t\t\tmsg1 = msg1.substring( 0, index );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstartPrint( screenData, msg1, inLine, isCentered );\n\t\t\tstartPrint( screenData, msg2, inLine, isCentered );\n\t\t\treturn;\n\t\t}\n\n\t\t// Adjust if the text is too tall for the screen\n\t\tif( printCursor.y + printCursor.font.height > screenData.height ) {\n\n\t\t\tif( printCursor.font.mode === \"canvas\" ) {\n\t\t\t\tscreenData.screenObj.render();\n\t\t\t}\n\n\t\t\t// Shift image up by the vertical size of the font\n\t\t\tshiftImageUp( screenData, printCursor.font.height );\n\n\t\t\t// Backup the print_cursor\n\t\t\tprintCursor.y -= printCursor.font.height;\n\t\t}\n\n\t\tprintCursor.font.printFunction( screenData, msg, printCursor.x, printCursor.y );\n\n\t\t// If it's not in_line print the advance to next line\n\t\tif( !inLine ) {\n\t\t\tprintCursor.y += printCursor.font.height;\n\t\t\tprintCursor.x = 0;\n\t\t} else {\n\t\t\tprintCursor.x += printCursor.font.width * msg.length;\n\t\t\tif( printCursor.x > screenData.width - printCursor.font.width ) {\n\t\t\t\tprintCursor.x = 0;\n\t\t\t\tprintCursor.y += printCursor.font.height;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction shiftImageUp( screenData, yOffset ) {\n\t\tif( yOffset <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the image data\n\t\tpiData.commands.getImageData( screenData );\n\n\t\tlet y = yOffset;\n\n\t\t// Loop through all the pixels after the yOffset\n\t\tfor( ; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\n\t\t\t\t// Get the index of the source pixel\n\t\t\t\tconst iDest = ( ( screenData.width * y ) + x ) * 4;\n\n\t\t\t\t// Get the index of the destination pixel\n\t\t\t\tconst iSrc = ( ( screenData.width * ( y - yOffset ) ) + x ) * 4;\n\n\t\t\t\t// Move the pixel up\n\t\t\t\tconst data = screenData.imageData.data;\n\t\t\t\tscreenData.imageData.data[ iSrc ] = data[ iDest ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 1 ] = data[ iDest + 1 ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 2 ] = data[ iDest + 2 ];\n\t\t\t\tscreenData.imageData.data[ iSrc + 3 ] = data[ iDest + 3 ];\n\t\t\t}\n\t\t}\n\n\t\t// Clear the bottom pixels\n\t\tfor( y = screenData.height - yOffset; y < screenData.height; y++ ) {\n\t\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\t\tconst iSrc = ( ( screenData.width * y ) + x ) * 4;\n\t\t\t\tscreenData.imageData.data[ iSrc ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 1 ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 2 ] = 0;\n\t\t\t\tscreenData.imageData.data[ iSrc + 3 ] = 0;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setImageDirty( screenData );\n\t}\n\n\t// PICALCWIDTH - Calculate pixel font width\n\tpi._.addCommand( \"piCalcWidth\", piCalcWidth, true, false );\n\n\tfunction piCalcWidth( screenData, msg ) {\n\t\treturn screenData.printCursor.font.width * msg.length;\n\t}\n\n\t// CANVASCALCWIDTH - Calculate canvas font width\n\tpi._.addCommand( \"canvasCalcWidth\", canvasCalcWidth, true, false );\n\n\tfunction canvasCalcWidth( screenData, msg ) {\n\t\treturn screenData.context.measureText( msg ).width;\n\t}\n\n\t// SETWORDBREAK - Enable/disable word wrapping\n\tpi._.addCommand( \"setWordBreak\", setWordBreak, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"wordBreak\", setWordBreak, true, [ \"isEnabled\" ] );\n\n\tfunction setWordBreak( screenData, args ) {\n\t\tscreenData.printCursor.breakWord = !!args[ 0 ];\n\t}\n\n\t// PIPRINT - Print using pixel font\n\tpi._.addCommand( \"piPrint\", piPrint, true, false );\n\n\tfunction piPrint( screenData, msg, x, y ) {\n\t\tconst printCursor = screenData.printCursor;\n\n\t\t// Setup a temporary palette with the fore color and back color\n\t\tconst defaultPal = screenData.pal;\n\t\tscreenData.pal = [ screenData.pal[ 0 ], screenData.fColor ];\n\n\t\t// Loop through each character in the message and put it on the screen\n\t\tfor( let i = 0; i < msg.length; i++ ) {\n\n\t\t\t// Get the character index for the character data\n\t\t\tconst charIndex = printCursor.font.chars[ msg.charCodeAt( i ) ];\n\n\t\t\t// Draw the character on the screen\n\t\t\tif( charIndex !== undefined && printCursor.font.data[ charIndex ] ) {\n\t\t\t\tscreenData.screenObj.put(\n\t\t\t\t\tprintCursor.font.data[ charIndex ],\n\t\t\t\t\tx + ( i * printCursor.font.width ),\n\t\t\t\t\ty,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Reset the palette\n\t\tscreenData.pal = defaultPal;\n\t}\n\n\t// SETPOS - Set cursor position by column and row\n\tpi._.addCommand( \"setPos\", setPos, false, true, [ \"col\", \"row\" ] );\n\tpi._.addSetting( \"pos\", setPos, true, [ \"col\", \"row\" ] );\n\n\tfunction setPos( screenData, args ) {\n\t\tconst col = args[ 0 ];\n\t\tconst row = args[ 1 ];\n\n\t\t// Set the x value\n\t\tif( col != null ) {\n\t\t\tif( isNaN( col ) ) {\n\t\t\t\tconst error = new TypeError( \"setPos: parameter col must be a number\" );\n\t\t\t\terror.code = \"INVALID_COL\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tlet x = Math.floor( col * screenData.printCursor.font.width );\n\t\t\tif( x > screenData.width ) {\n\t\t\t\tx = screenData.width - screenData.printCursor.font.width;\n\t\t\t}\n\t\t\tscreenData.printCursor.x = x;\n\t\t}\n\n\t\t// Set the y value\n\t\tif( row != null ) {\n\t\t\tif( isNaN( row ) ) {\n\t\t\t\tconst error = new TypeError( \"setPos: parameter row must be a number\" );\n\t\t\t\terror.code = \"INVALID_ROW\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tlet y = Math.floor( row * screenData.printCursor.font.height );\n\t\t\tif( y > screenData.height ) {\n\t\t\t\ty = screenData.height - screenData.printCursor.font.height;\n\t\t\t}\n\t\t\tscreenData.printCursor.y = y;\n\t\t}\n\t}\n\n\t// SETPOSPX - Set cursor position by pixels\n\tpi._.addCommand( \"setPosPx\", setPosPx, false, true, [ \"x\", \"y\" ] );\n\tpi._.addSetting( \"posPx\", setPosPx, true, [ \"x\", \"y\" ] );\n\n\tfunction setPosPx( screenData, args ) {\n\t\tconst x = args[ 0 ];\n\t\tconst y = args[ 1 ];\n\n\t\tif( x != null ) {\n\t\t\tif( isNaN( x ) ) {\n\t\t\t\tconst error = new TypeError( \"setPosPx: parameter x must be an integer\" );\n\t\t\t\terror.code = \"INVALID_X\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData.printCursor.x = Math.round( x );\n\t\t}\n\n\t\tif( y != null ) {\n\t\t\tif( isNaN( y ) ) {\n\t\t\t\tconst error = new TypeError( \"setPosPx: parameter y must be an integer\" );\n\t\t\t\terror.code = \"INVALID_Y\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tscreenData.printCursor.y = Math.round( y );\n\t\t}\n\t}\n\n\t// GETPOS - Get cursor position in columns and rows\n\tpi._.addCommand( \"getPos\", getPos, false, true, [] );\n\n\tfunction getPos( screenData ) {\n\t\treturn {\n\t\t\t\"col\": Math.floor(\n\t\t\t\tscreenData.printCursor.x / screenData.printCursor.font.width\n\t\t\t),\n\t\t\t\"row\": Math.floor(\n\t\t\t\tscreenData.printCursor.y / screenData.printCursor.font.height\n\t\t\t)\n\t\t};\n\t}\n\n\t// GETCOLS - Get screen width in columns\n\tpi._.addCommand( \"getCols\", getCols, false, true, [] );\n\n\tfunction getCols( screenData ) {\n\t\treturn screenData.printCursor.cols;\n\t}\n\n\t// GETROWS - Get screen height in rows\n\tpi._.addCommand( \"getRows\", getRows, false, true, [] );\n\n\tfunction getRows( screenData ) {\n\t\treturn screenData.printCursor.rows;\n\t}\n\n\t// GETPOSPX - Get cursor position in pixels\n\tpi._.addCommand( \"getPosPx\", getPosPx, false, true, [] );\n\n\tfunction getPosPx( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.printCursor.x,\n\t\t\t\"y\": screenData.printCursor.y\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Table Formatting Module\n * \n * Formats and renders tables with ASCII box-drawing characters.\n * \n * @module modules/table\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\tconst m_borderStyles = {\n\t\t\"single\": [\n\t\t\t[ 218, 196, 194, 191 ],\n\t\t\t[ 195, 196, 197, 180 ],\n\t\t\t[ 192, 196, 193, 217 ],\n\t\t\t[ 179, 32, 179 ]\n\t\t],\n\t\t\"double\": [\n\t\t\t[ 201, 205, 203, 187 ],\n\t\t\t[ 204, 205, 206, 185 ],\n\t\t\t[ 200, 205, 202, 188 ],\n\t\t\t[ 186, 32, 186 ]\n\t\t],\n\t\t\"singleDouble\": [\n\t\t\t[ 213, 205, 209, 184 ],\n\t\t\t[ 198, 205, 216, 181 ],\n\t\t\t[ 212, 205, 207, 190 ],\n\t\t\t[ 179, 32, 179 ]\n\t\t],\n\t\t\"doubleSingle\": [\n\t\t\t[ 214, 196, 210, 183 ],\n\t\t\t[ 199, 196, 215, 182 ],\n\t\t\t[ 211, 196, 208, 189 ],\n\t\t\t[ 186, 32, 186 ]\n\t\t],\n\t\t\"thick\": [\n\t\t\t[ 219, 223, 219, 219 ],\n\t\t\t[ 219, 223, 219, 219 ],\n\t\t\t[ 223, 223, 223, 223 ],\n\t\t\t[ 219, 32, 219 ]\n\t\t]\n\t};\n\n\t// PRINTTABLE - Render table with ASCII box drawing\n\tpi._.addCommand( \"printTable\", printTable, false, true,\n\t\t[ \"items\", \"tableFormat\", \"borderStyle\", \"isCentered\" ]\n\t);\n\n\tfunction printTable( screenData, args ) {\n\t\tconst items = args[ 0 ];\n\t\tlet tableFormat = args[ 1 ];\n\t\tlet borderStyle = args[ 2 ];\n\t\tconst isCentered = !!args[ 3 ];\n\n\t\tif( !pi.util.isArray( items ) ) {\n\t\t\tconst error = new TypeError( \"printTable: items must be an array\" );\n\t\t\terror.code = \"INVALID_ITEMS\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !borderStyle ) {\n\t\t\tborderStyle = m_borderStyles[ \"single\" ];\n\t\t}\n\n\t\tlet isFormatted;\n\t\tif( tableFormat == null ) {\n\t\t\tisFormatted = false;\n\t\t} else if( pi.util.isArray( tableFormat ) ) {\n\t\t\tfor( let i = 0; i < tableFormat.length; i++ ) {\n\t\t\t\tif( typeof tableFormat[ i ] !== \"string\" ) {\n\t\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\t\"printTable: tableFormat must be an array of strings\"\n\t\t\t\t\t);\n\t\t\t\t\terror.code = \"INVALID_FORMAT\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tisFormatted = true;\n\t\t} else {\n\t\t\tconst error = new TypeError( \"printTable: tableFormat must be an array\" );\n\t\t\terror.code = \"INVALID_FORMAT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( typeof borderStyle === \"string\" && m_borderStyles[ borderStyle ] ) {\n\t\t\tborderStyle = m_borderStyles[ borderStyle ];\n\t\t} else if( !pi.util.isArray( borderStyle ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"printTable: borderStyle must be an integer or array\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_BORDER_STYLE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( isFormatted ) {\n\t\t\treturn buildFormatedTable(\n\t\t\t\tscreenData, items, borderStyle, tableFormat, isCentered\n\t\t\t);\n\t\t} else {\n\t\t\tconst width = piData.commands.getCols( screenData );\n\t\t\treturn buildStandardTable( screenData, items, width, borderStyle );\n\t\t}\n\t}\n\n\tfunction buildStandardTable( screenData, items, width, borders ) {\n\t\tlet msg = \"\";\n\t\tconst boxes = [];\n\t\tconst font = screenData.printCursor.font;\n\t\tconst startPos = piData.commands.getPos( screenData );\n\t\tconst cellHeight = 2;\n\n\t\tfor( let row = 0; row < items.length; row += 1 ) {\n\n\t\t\t// Calculate the cellWidth\n\t\t\tlet cellWidth = Math.floor( width / items[ row ].length );\n\t\t\tif( cellWidth < 3 ) {\n\t\t\t\tcellWidth = 3;\n\t\t\t}\n\n\t\t\tconst rowWidth = ( cellWidth - 2 ) * items[ row ].length +\n\t\t\t\titems[ row ].length + 1;\n\t\t\tconst rowPad = Math.round( ( width - rowWidth ) / 2 );\n\t\t\tlet msgTop = pi.util.padL( \"\", rowPad, \" \" );\n\t\t\tlet msgMid = msgTop;\n\t\t\tlet msgBot = msgTop;\n\n\t\t\t// Format all the cells\n\t\t\tfor( let col = 0; col < items[ row ].length; col += 1 ) {\n\n\t\t\t\tcreateBox(\n\t\t\t\t\t( col * ( cellWidth - 1 ) ) + rowPad,\n\t\t\t\t\t( row * 2 ) + startPos.row, boxes, font\n\t\t\t\t);\n\t\t\t\tconst box = boxes[ boxes.length - 1 ];\n\t\t\t\tbox.pos.width = cellWidth - 1;\n\t\t\t\tbox.pos.height = 2;\n\t\t\t\tbox.pixels.width = box.pos.width * font.width;\n\t\t\t\tbox.pixels.height = box.pos.height * font.height;\n\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tbox.pixels.width += 1;\n\t\t\t\t}\n\n\t\t\t\tif( row === items.length - 1 ) {\n\t\t\t\t\tbox.pixels.height += 1;\n\t\t\t\t}\n\n\t\t\t\t// Middle cell\n\t\t\t\tmsgMid += String.fromCharCode( borders[ 3 ][ 0 ] ) +\n\t\t\t\t\tpi.util.pad(\n\t\t\t\t\t\titems[ row ][ col ],\n\t\t\t\t\t\tcellWidth - 2,\n\t\t\t\t\t\tString.fromCharCode( borders[ 3 ][ 1 ] )\n\t\t\t\t\t);\n\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tmsgMid += String.fromCharCode( borders[ 3 ][ 2 ] );\n\t\t\t\t}\n\n\t\t\t\t// Top Row\n\t\t\t\tif( row === 0 ) {\n\n\t\t\t\t\t// Top left corner\n\t\t\t\t\tif( col === 0 ) {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 0 ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 2 ] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top center line\n\t\t\t\t\tmsgTop += pi.util.pad( \"\", cellWidth - 2,\n\t\t\t\t\t\tString.fromCharCode( borders[ 0 ][ 1 ] )\n\t\t\t\t\t);\n\n\t\t\t\t\t// Top Right corner\n\t\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\t\tmsgTop += String.fromCharCode( borders[ 0 ][ 3 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Bottom Row\n\t\t\t\tlet bottomRow;\n\t\t\t\tif( row === items.length - 1 ) {\n\t\t\t\t\tbottomRow = 2;\n\t\t\t\t} else {\n\t\t\t\t\tbottomRow = 1;\n\t\t\t\t}\n\n\t\t\t\t// Bottom Left Corner\n\t\t\t\tif( col === 0 ) {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 0 ] );\n\t\t\t\t} else {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 2 ] );\n\t\t\t\t}\n\n\t\t\t\t// Bottom center line\n\t\t\t\tmsgBot += pi.util.pad( \"\", cellWidth - 2, String.fromCharCode(\n\t\t\t\t\tborders[ bottomRow ][ 1 ] )\n\t\t\t\t);\n\n\t\t\t\t// Bottom Right corner\n\t\t\t\tif( col === items[ row ].length - 1 ) {\n\t\t\t\t\tmsgBot += String.fromCharCode( borders[ bottomRow ][ 3 ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move to the next row\n\t\t\tif( row === 0 ) {\n\t\t\t\tmsg += msgTop + \"\\n\";\n\t\t\t}\n\t\t\tmsg += msgMid + \"\\n\";\n\t\t\tmsg += msgBot + \"\\n\";\n\t\t}\n\n\t\tmsg = msg.substr( 0, msg.length - 1 );\n\t\tpiData.commands.print( screenData, [ msg ] );\n\n\t\treturn boxes;\n\t}\n\n\tfunction buildFormatedTable(\n\t\tscreenData, items, borders, tableFormat, isCentered\n\t) {\n\t\tlet msg = \"\";\n\t\tconst boxes = [];\n\t\tlet pos = piData.commands.getPos( screenData );\n\t\tconst font = screenData.printCursor.font;\n\n\t\t// Set padding for centered table\n\t\tif( isCentered ) {\n\t\t\tpos.col = Math.floor( ( piData.commands.getCols( screenData ) -\n\t\t\t\ttableFormat[ 0 ].length ) / 2\n\t\t\t);\n\t\t}\n\n\t\t// Create the padding\n\t\tconst padding = pi.util.pad( \"\", pos.col, \" \" );\n\t\tpiData.commands.setPos( screenData, [ 0, pos.row ] );\n\n\t\tfor( let row = 0; row < tableFormat.length; row += 1 ) {\n\t\t\tmsg += padding;\n\t\t\tfor( let col = 0; col < tableFormat[ row ].length; col += 1 ) {\n\t\t\t\tconst cell = tableFormat[ row ].charAt( col );\n\n\t\t\t\t// Table Intersection\n\t\t\t\tif( cell === \"*\" ) {\n\n\t\t\t\t\tconst cellDirs = \"\" +\n\t\t\t\t\t\tlookCell( col, row, \"left\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"right\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"up\", tableFormat ) +\n\t\t\t\t\t\tlookCell( col, row, \"down\", tableFormat );\n\n\t\t\t\t\tif( cellDirs === \" - |\" ) {\n\t\t\t\t\t\t// Top Left Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 0 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"-- |\" ) {\n\t\t\t\t\t\t// Top Middle Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 2 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"-  |\" ) {\n\t\t\t\t\t\t// Top Right Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 3 ] );\n\t\t\t\t\t} else if( cellDirs === \" -||\" ) {\n\t\t\t\t\t\t// Middle Left Section\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 0 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"--||\" ) {\n\t\t\t\t\t\t// Middle Middle\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 2 ] );\n\t\t\t\t\t\tcreateBox( pos.col + col, pos.row + row, boxes, font );\n\t\t\t\t\t} else if( cellDirs === \"- ||\" ) {\n\t\t\t\t\t\t// Middle Right\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 1 ][ 3 ] );\n\t\t\t\t\t} else if( cellDirs === \" -| \" ) {\n\t\t\t\t\t\t// Bottom Left\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 0 ] );\n\t\t\t\t\t} else if( cellDirs === \"--| \" ) {\n\t\t\t\t\t\t// Bottom Middle\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 2 ] );\n\t\t\t\t\t} else if( cellDirs === \"- | \" ) {\n\t\t\t\t\t\t// Bottom Right\n\t\t\t\t\t\tmsg += String.fromCharCode( borders[ 2 ][ 3 ] );\n\t\t\t\t\t}\n\t\t\t\t} else if( cell === \"-\" ) {\n\t\t\t\t\tmsg += String.fromCharCode( borders[ 0 ][ 1 ] );\n\t\t\t\t} else if( cell === \"|\" ) {\n\t\t\t\t\tmsg += String.fromCharCode( borders[ 3 ][ 0 ] );\n\t\t\t\t} else {\n\t\t\t\t\tmsg += \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t\tmsg += \"\\n\";\n\t\t}\n\n\t\tconst posAfter = piData.commands.getPos( screenData );\n\t\tcompleteBoxes( boxes, tableFormat, font, pos );\n\n\t\tmsg = msg.substr( 0, msg.length - 1 );\n\t\tpiData.commands.print( screenData, [ msg ] );\n\n\t\tlet i = 0;\n\t\tfor( let row = 0; row < items.length; row += 1 ) {\n\t\t\tif( pi.util.isArray( items[ row ] ) ) {\n\t\t\t\tfor( let col = 0; col < items[ row ].length; col += 1 ) {\n\t\t\t\t\tif( i < boxes.length ) {\n\t\t\t\t\t\tprintItem(\n\t\t\t\t\t\t\tscreenData, boxes[ i ], items[ row ][ col ],\n\t\t\t\t\t\t\tpos.col\n\t\t\t\t\t\t);\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprintItem( screenData, boxes[ i ], items[ row ], pos.col );\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\n\t\tpiData.commands.setPos( screenData,\n\t\t\t[ 0, posAfter.row + tableFormat.length ]\n\t\t);\n\n\t\treturn boxes;\n\t}\n\n\tfunction printItem( screenData, box, msg ) {\n\t\tif( !box ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmsg = \"\" + msg;\n\n\t\t// Calculate dimensions\n\t\tconst width = box.pos.width;\n\t\tconst height = box.pos.height;\n\n\t\tconst isVertical = box.format.toLowerCase() === \"v\";\n\n\t\tif( isVertical ) {\n\t\t\tif( msg.length > height ) {\n\t\t\t\tmsg = msg.substr( 0, height );\n\t\t\t}\n\t\t} else {\n\t\t\tif( msg.length > width ) {\n\t\t\t\tmsg = msg.substr( 0, width );\n\t\t\t}\n\t\t}\n\n\t\tconst pos = piData.commands.getPos( screenData );\n\n\t\tif( isVertical ) {\n\t\t\tlet index = 0;\n\t\t\tconst col = box.pos.col + Math.round( width / 2 );\n\t\t\tconst startRow = box.pos.row + 1 +\n\t\t\t\tMath.floor( ( height - msg.length ) / 2 );\n\t\t\tfor( let row = startRow; row <= height + startRow; row += 1 ) {\n\t\t\t\tpiData.commands.setPos( screenData, [ col, row ] );\n\t\t\t\tpiData.commands.print( screenData,\n\t\t\t\t\t[ msg.charAt( index ), true ]\n\t\t\t\t);\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tconst col = box.pos.col + 1 + Math.floor( ( width - msg.length ) / 2 );\n\t\t\tconst row = box.pos.row + Math.round( height / 2 );\n\t\t\tpiData.commands.setPos( screenData, [ col, row ] );\n\t\t\tpiData.commands.print( screenData, [ msg, true ] );\n\t\t}\n\n\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row ] );\n\t}\n\n\tfunction createBox( col, row, boxes, font ) {\n\t\tboxes.push( {\n\t\t\t\"pos\": {\n\t\t\t\t\"col\": col,\n\t\t\t\t\"row\": row,\n\t\t\t\t\"width\": null,\n\t\t\t\t\"height\": null\n\t\t\t},\n\t\t\t\"pixels\": {\n\t\t\t\t\"x\": ( col * font.width ) + Math.round( font.width / 2 ) - 1,\n\t\t\t\t\"y\": ( row * font.height ) + Math.round( font.height / 2 ),\n\t\t\t\t\"width\": null,\n\t\t\t\t\"height\": null\n\t\t\t},\n\t\t\t\"format\": \" \"\n\t\t} );\n\t}\n\n\tfunction completeBoxes( boxes, tableFormat, font, pos ) {\n\t\tfor( let i = 0; i < boxes.length; i += 1 ) {\n\t\t\tconst box = boxes[ i ];\n\n\t\t\t// Compute table coordinates for formatting character\n\t\t\tlet xt = box.pos.col + 1 - pos.col;\n\t\t\tlet yt = box.pos.row + 1 - pos.row;\n\n\t\t\t// Find the formatting character\n\t\t\tif( yt < tableFormat.length && xt < tableFormat[ yt ].length ) {\n\t\t\t\tbox.format = tableFormat[ yt ].charAt( xt );\n\t\t\t}\n\n\t\t\t// Compute table coordinates\n\t\t\txt = box.pos.col - pos.col;\n\t\t\tyt = box.pos.row - pos.row;\n\n\t\t\t// Find box.width\n\t\t\twhile( xt < tableFormat[ yt ].length - 1 ) {\n\t\t\t\txt += 1;\n\t\t\t\tif( tableFormat[ yt ].charAt( xt ) === \"*\" ) {\n\t\t\t\t\tconst cell = lookCell( xt, yt, \"down\", tableFormat );\n\t\t\t\t\tif( cell === \"|\" ) {\n\t\t\t\t\t\tbox.pos.width = ( pos.col + ( xt - 1 ) ) - box.pos.col;\n\t\t\t\t\t\tbox.pixels.width = ( box.pos.width + 1 ) * font.width;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Box ends at table end\n\t\t\tif( box.pos.width === null ) {\n\t\t\t\tbox.pos.width = ( pos.col + ( xt - 1 ) ) - box.pos.col;\n\t\t\t\tbox.pixels.width = ( box.pos.width + 1 ) * font.width + 1;\n\t\t\t}\n\n\t\t\t// Find box.height\n\t\t\twhile( yt < tableFormat.length - 1 ) {\n\t\t\t\tyt += 1;\n\t\t\t\tif( tableFormat[ yt ].charAt( xt ) === \"*\" ) {\n\t\t\t\t\tconst cell = lookCell( xt, yt, \"left\", tableFormat );\n\t\t\t\t\tif( cell === \"-\" ) {\n\t\t\t\t\t\tbox.pos.height = ( pos.row + ( yt - 1 ) ) - box.pos.row;\n\t\t\t\t\t\tbox.pixels.height = ( box.pos.height + 1 ) * font.height;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Box ends at table end\n\t\t\tif( box.pos.height === null ) {\n\t\t\t\tbox.pos.height = ( pos.row + ( yt - 1 ) ) - box.pos.row;\n\t\t\t\tbox.pixels.height = ( box.pos.height + 1 ) * font.height + 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction lookCell( x, y, dir, tableFormat ) {\n\t\tif( dir === \"left\" ) {\n\t\t\tx -= 1;\n\t\t} else if( dir === \"right\" ) {\n\t\t\tx += 1;\n\t\t} else if( dir === \"up\" ) {\n\t\t\ty -= 1;\n\t\t} else if( dir === \"down\" ) {\n\t\t\ty += 1;\n\t\t}\n\n\t\tif( y >= tableFormat.length || y < 0 || x < 0 ) {\n\t\t\treturn \" \";\n\t\t}\n\n\t\tif( x >= tableFormat[ y ].length ) {\n\t\t\treturn \" \";\n\t\t}\n\n\t\tif(\n\t\t\ttableFormat[ y ].charAt( x ) === \"*\" &&\n\t\t\t( dir === \"left\" || dir === \"right\" )\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\n\t\tif(\n\t\t\ttableFormat[ y ].charAt( x ) === \"*\" &&\n\t\t\t( dir === \"up\" || dir === \"down\" )\n\t\t) {\n\t\t\treturn \"|\";\n\t\t}\n\n\t\treturn tableFormat[ y ].charAt( x );\n\t}\n}\n\n", "/**\n * Pi.js - Keyboard Input Module\n * \n * Handles keyboard events, key state tracking, input buffer, and event listeners.\n * \n * @module modules/keyboard\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Keyboard state\n\tlet m_inKeys = {};  // Key by character\n\tlet m_inKeyCodes = {};  // Key by .key property\n\tlet m_inCodes = {};  // Key by .code property\n\tlet m_inputs = [];  // Input buffer\n\tlet m_inputIndex = 0;\n\tlet m_onKeyEventListeners = {};\n\tlet m_anyKeyEventListeners = {};\n\tlet m_onKeyCombos = {};  // Key combination listeners\n\tlet m_isKeyEventsActive = false;\n\tlet m_inputFocus = null;\n\tlet m_preventKeys = {};\n\n\t// Input command state\n\tlet m_inputQueue = [];  // Queue of active input requests\n\tlet m_inputQueueIndex = 0;\n\tlet m_promptInterval = null;\n\tlet m_promptBlink = false;\n\tlet m_promptLastTime = 0;\n\tlet m_promptBackground = null;\n\tlet m_promptBackgroundWidth = 0;\n\n\t// Keyboard started flag\n\tlet m_keyboardStarted = false;\n\n\t// STARTKEYBOARD - Start keyboard event listeners\n\tpi._.addCommand( \"startKeyboard\", startKeyboard, false, false, [] );\n\n\tfunction startKeyboard() {\n\t\tif( m_keyboardStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = m_inputFocus || piData.defaultInputFocus || window;\n\n\t\tif( !target ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget.addEventListener( \"keydown\", onKeyDown );\n\t\ttarget.addEventListener( \"keyup\", onKeyUp );\n\t\ttarget.addEventListener( \"blur\", clearPressedKeys );\n\n\t\tm_keyboardStarted = true;\n\t}\n\n\t// STOPKEYBOARD - Stop keyboard event listeners\n\tpi._.addCommand( \"stopKeyboard\", stopKeyboard, false, false, [] );\n\n\tfunction stopKeyboard() {\n\n\t\t// Clear all keyboard state\n\t\tm_inKeys = {};\n\t\tm_inKeyCodes = {};\n\t\tm_inCodes = {};\n\t\tm_inputs = [];\n\t\tm_onkeyListeners = {};\n\t\tm_onKeyCombos = {};\n\n\t\tif( !m_keyboardStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = m_inputFocus || piData.defaultInputFocus || window;\n\n\t\tif( target ) {\n\t\t\ttarget.removeEventListener( \"keydown\", onKeyDown );\n\t\t\ttarget.removeEventListener( \"keyup\", onKeyUp );\n\t\t\ttarget.removeEventListener( \"blur\", clearPressedKeys );\n\t\t}\n\n\t\tm_keyboardStarted = false;\n\t}\n\n\tfunction onKeyDown( e ) {\n\t\tconst key = e.key;\n\t\tconst code = e.code;\n\t\tconst keyCode = e.keyCode;\n\t\tconst keyData = {\n\t\t\t\"key\": e.key,\n\t\t\t\"location\": e.location,\n\t\t\t\"code\": e.code,\n\t\t\t\"keyCode\": e.keyCode\n\t\t};\n\n\t\t// Track key state\n\t\tm_inKeys[ key ] = keyData;\n\t\tm_inKeyCodes[ keyCode ] = keyData;\n\t\tm_inCodes[ code ] = keyData;\n\n\t\tm_inputs.push( keyData );\n\n\t\t// Prevent default for registered keys\n\t\tif( m_preventKeys[ key ] || m_preventKeys[ code ] || m_preventKeys[ keyCode ] ) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t// Trigger event listeners\n\t\tif( m_isKeyEventsActive ) {\n\t\t\ttriggerKeyEventListeners( \"down\", key, code );\n\t\t}\n\t}\n\n\tfunction onKeyUp( e ) {\n\t\tconst key = e.key;\n\t\tconst code = e.code;\n\t\tconst keyCode = e.keyCode;\n\n\t\t// Clear key state\n\t\tm_inKeys[ key ] = false;\n\t\tm_inCodes[ code ] = false;\n\t\tm_inKeyCodes[ keyCode ] = false;\n\n\t\t// Trigger event listeners\n\t\tif( m_isKeyEventsActive ) {\n\t\t\ttriggerKeyEventListeners( \"up\", key, code );\n\t\t}\n\t}\n\n\tfunction clearPressedKeys() {\n\t\tfor( const i in m_inKeys ) {\n\t\t\tm_inKeys[ i ] = false;\n\t\t}\n\t\tfor( const i in m_inKeyCodes ) {\n\t\t\tm_inKeyCodes[ i ] = false;\n\t\t}\n\t\tfor( const i in m_inCodes ) {\n\t\t\tm_inCodes[ i ] = false;\n\t\t}\n\t}\n\n\tfunction triggerKeyEventListeners( mode, key, code ) {\n\t\t\n\t\t// Trigger listeners registered for the key character (e.g., \"a\", \";\")\n\t\tconst keyListeners = m_onKeyEventListeners[ key ];\n\t\tif( keyListeners && keyListeners[ mode ] ) {\n\t\t\tfor( let i = keyListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = keyListeners[ mode ][ i ];\n\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tkeyListeners[ mode ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger listeners registered for the code (e.g., \"KeyA\", \"Semicolon\")\n\t\tif( code && code !== key ) {\n\t\t\tconst codeListeners = m_onKeyEventListeners[ code ];\n\t\t\tif( codeListeners && codeListeners[ mode ] ) {\n\t\t\t\tfor( let i = codeListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\t\tconst listener = codeListeners[ mode ][ i ];\n\t\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\t\tif( listener.once ) {\n\t\t\t\t\t\tcodeListeners[ mode ].splice( i, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger \"any key\" listeners\n\t\tif( m_anyKeyEventListeners[ mode ] ) {\n\t\t\tfor( let i = m_anyKeyEventListeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = m_anyKeyEventListeners[ mode ][ i ];\n\t\t\t\tlistener.fn( { \"key\": key, \"code\": code, \"mode\": mode } );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// INKEY - Get key state or input buffer\n\tpi._.addCommand( \"inkey\", inkey, false, false, [ \"key\" ] );\n\n\tfunction inkey( args ) {\n\t\tconst key = args[ 0 ];\n\n\t\t// Activate key events\n\t\tstartKeyboard();\n\n\t\t// If the key is provided then return the key status\n\t\tif( key != null ) {\n\n\t\t\t// Check by character first (e.g., \"a\", \";\", \":\")\n\t\t\tif( m_inKeys[ key ] ) {\n\t\t\t\treturn m_inKeys[ key ];\n\t\t\t}\n\n\t\t\t// Then check by .key property\n\t\t\tif( m_inKeyCodes[ key ] ) {\n\t\t\t\treturn m_inKeyCodes[ key ];\n\t\t\t}\n\n\t\t\t// Finally check by .code property (e.g., \"KeyA\", \"Semicolon\")\n\t\t\treturn m_inCodes[ key ] || false;\n\t\t}\n\n\t\t// If no key is provided then return all keys pressed status\n\t\tconst keysReturn = {};\n\t\tfor( const i in m_inCodes ) {\n\t\t\tif( m_inCodes[ i ] ) {\n\t\t\t\tkeysReturn[ i ] = m_inCodes[ i ];\n\t\t\t}\n\t\t}\n\t\treturn keysReturn;\n\t}\n\n\t// ONKEY - Register key event listener\n\tpi._.addCommand( \"onkey\", onkey, false, false, [ \"key\", \"mode\", \"fn\", \"once\" ] );\n\n\tfunction onkey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst mode = args[ 1 ] || \"down\";\n\t\tconst fn = args[ 2 ];\n\t\tconst once = !!args[ 3 ];\n\n\t\tstartKeyboard();\n\t\tm_isKeyEventsActive = true;\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onkey: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Handle \"any key\" listeners\n\t\tif( key == null || key === \"*\" ) {\n\t\t\tif( !m_anyKeyEventListeners[ mode ] ) {\n\t\t\t\tm_anyKeyEventListeners[ mode ] = [];\n\t\t\t}\n\t\t\tm_anyKeyEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\t\treturn;\n\t\t}\n\n\t\t// Use key directly - can be a character (\"a\", \";\") or code (\"KeyA\", \"Semicolon\")\n\t\t// Register under the key value provided\n\t\tif( !m_onKeyEventListeners[ key ] ) {\n\t\t\tm_onKeyEventListeners[ key ] = {};\n\t\t}\n\t\tif( !m_onKeyEventListeners[ key ][ mode ] ) {\n\t\t\tm_onKeyEventListeners[ key ][ mode ] = [];\n\t\t}\n\n\t\tm_onKeyEventListeners[ key ][ mode ].push( { \"fn\": fn, \"once\": once } );\n\t}\n\n\t// OFFKEY - Remove key event listener\n\tpi._.addCommand( \"offkey\", offkey, false, false, [ \"key\", \"mode\", \"fn\" ] );\n\n\tfunction offkey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst mode = args[ 1 ] || \"down\";\n\t\tconst fn = args[ 2 ];\n\n\t\t// Remove \"any key\" listeners\n\t\tif( key == null || key === \"*\" ) {\n\t\t\tif( m_anyKeyEventListeners[ mode ] ) {\n\t\t\t\tif( fn ) {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ] = m_anyKeyEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tm_anyKeyEventListeners[ mode ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove listener registered under this key\n\t\tif( m_onKeyEventListeners[ key ] && m_onKeyEventListeners[ key ][ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tm_onKeyEventListeners[ key ][ mode ] = \n\t\t\t\t\tm_onKeyEventListeners[ key ][ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_onKeyEventListeners[ key ][ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// PREVENTKEY - Prevent default browser behavior for key\n\tpi._.addCommand( \"preventKey\", preventKey, false, false, [ \"key\", \"isPrevent\" ] );\n\n\tfunction preventKey( args ) {\n\t\tconst key = args[ 0 ];\n\t\tconst isPrevent = args[ 1 ] !== false;\n\n\t\tif( isPrevent ) {\n\t\t\tm_preventKeys[ key ] = true;\n\t\t} else {\n\t\t\tdelete m_preventKeys[ key ];\n\t\t}\n\t}\n\n\t// CLEARKEYS - Clear all key states\n\tpi._.addCommand( \"clearKeys\", clearKeys, false, false, [] );\n\n\tfunction clearKeys() {\n\t\tm_inKeys = {};\n\t\tm_inKeyCodes = {};\n\t\tm_inCodes = {};\n\t\tm_inputs = [];\n\t\tm_inputIndex = 0;\n\t}\n\n\t// REINIT KEYBOARD - Reinitialize keyboard with new focus element\n\tpi._.addCommand( \"reinitKeyboard\", reinitKeyboard, true, false );\n\n\tfunction reinitKeyboard() {\n\t\tif( m_keyboardStarted ) {\n\t\t\tstopKeyboard();\n\t\t\tm_inputFocus = piData.defaultInputFocus;\n\t\t\tstartKeyboard();\n\t\t}\n\t}\n\n\t// SETINPUTFOCUS - Set input focus element\n\tpi._.addCommand( \"setInputFocus\", setInputFocus, false, true, [ \"element\" ] );\n\n\tfunction setInputFocus( screenData, args ) {\n\t\tlet element = args[ 0 ];\n\n\t\tif( typeof element === \"string\" ) {\n\t\t\telement = document.getElementById( element );\n\t\t}\n\n\t\tif( !element || !pi.util.canAddEventListeners( element ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setInputFocus: Invalid element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ELEMENT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tm_inputFocus = element;\n\n\t\t// Reinitialize keyboard if already started\n\t\tif( m_keyboardStarted ) {\n\t\t\tstopKeyboard();\n\t\t\tstartKeyboard();\n\t\t}\n\t}\n\n\t// ONKEYCOMBO - Register key combination listener\n\tpi._.addCommand( \"onkeyCombo\", onkeyCombo, false, false, [ \"keys\", \"fn\", \"once\" ] );\n\n\tfunction onkeyCombo( args ) {\n\t\tconst keys = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tif( !pi.util.isArray( keys ) || keys.length === 0 ) {\n\t\t\tconst error = new TypeError( \"onkeyCombo: keys must be a non-empty array\" );\n\t\t\terror.code = \"INVALID_KEYS\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onkeyCombo: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst comboId = keys.join( \"+\" );\n\t\tconst allKeys = [];\n\n\t\tconst comboData = {\n\t\t\t\"keys\": keys.slice(),\n\t\t\t\"keyData\": [],\n\t\t\t\"fn\": fn,\n\t\t\t\"allKeys\": allKeys,\n\t\t\t\"once\": once\n\t\t};\n\n\t\t// If the key combo doesn't exist add it\n\t\tif( !m_onKeyCombos[ comboId ] ) {\n\t\t\tm_onKeyCombos[ comboId ] = [];\n\t\t}\n\t\tm_onKeyCombos[ comboId ].push( comboData );\n\n\t\tfor( let i = 0; i < keys.length; i++ ) {\n\t\t\taddKeyCombo( keys[ i ], i, allKeys, fn, once, comboData );\n\t\t}\n\t}\n\n\tfunction addKeyCombo( key, i, allKeys, fn, once, comboData ) {\n\n\t\t// Store the functions so we can run offkeyCombo later\n\t\tcomboData.keyData.push( {\n\t\t\t\"key\": key,\n\t\t\t\"keyComboDown\": keyComboDown,\n\t\t\t\"keyComboUp\": keyComboUp\n\t\t} );\n\n\t\t// Default state is not pressed\n\t\tallKeys.push( false );\n\n\t\t// On key down\n\t\tonkey( [ key, \"down\", keyComboDown, false ] );\n\n\t\t// On key up\n\t\tonkey( [ key, \"up\", keyComboUp, false ] );\n\n\t\tfunction keyComboDown( e ) {\n\t\t\tallKeys[ i ] = true;\n\t\t\tif( allKeys.indexOf( false ) === -1 ) {\n\t\t\t\tif( once ) {\n\t\t\t\t\toffkey( [ key, \"down\", keyComboDown ] );\n\t\t\t\t\toffkey( [ key, \"up\", keyComboUp ] );\n\t\t\t\t}\n\t\t\t\tfn( e );\n\t\t\t}\n\t\t}\n\n\t\tfunction keyComboUp( e ) {\n\t\t\tallKeys[ i ] = false;\n\t\t}\n\t}\n\n\t// OFFKEYCOMBO - Remove key combination listener\n\tpi._.addCommand( \"offkeyCombo\", offkeyCombo, false, false, [ \"keys\", \"fn\" ] );\n\n\tfunction offkeyCombo( args ) {\n\t\tconst keys = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\n\t\tif( !pi.util.isArray( keys ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst comboId = keys.join( \"+\" );\n\n\t\tif( !m_onKeyCombos[ comboId ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor( let i = m_onKeyCombos[ comboId ].length - 1; i >= 0; i-- ) {\n\t\t\tconst combo = m_onKeyCombos[ comboId ][ i ];\n\n\t\t\tif( !fn || combo.fn === fn ) {\n\n\t\t\t\t// Remove all individual key listeners for this combo\n\t\t\t\tfor( let j = 0; j < combo.keyData.length; j++ ) {\n\t\t\t\t\tconst kd = combo.keyData[ j ];\n\t\t\t\t\toffkey( [ kd.key, \"down\", kd.keyComboDown ] );\n\t\t\t\t\toffkey( [ kd.key, \"up\", kd.keyComboUp ] );\n\t\t\t\t}\n\n\t\t\t\tm_onKeyCombos[ comboId ].splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\tif( m_onKeyCombos[ comboId ].length === 0 ) {\n\t\t\tdelete m_onKeyCombos[ comboId ];\n\t\t}\n\t}\n\n\t// INPUT - Get user text input with prompt\n\tpi._.addCommand( \"input\", input, false, true, [\n\t\t\"prompt\", \"callback\", \"isNumber\", \"isInteger\", \"allowNegative\"\n\t] );\n\n\tfunction input( screenData, args ) {\n\t\tconst prompt = args[ 0 ] || \"\";\n\t\tconst callback = args[ 1 ];\n\t\tconst isNumber = !!args[ 2 ];\n\t\tconst isInteger = !!args[ 3 ];\n\t\tconst allowNegative = args[ 4 ] !== false;\n\n\t\tif( typeof prompt !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"input: prompt must be a string\" );\n\t\t\terror.code = \"INVALID_PROMPT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( callback != null && !pi.util.isFunction( callback ) ) {\n\t\t\tconst error = new TypeError( \"input: callback must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Create promise for async/await support\n\t\tlet resolvePromise, rejectPromise;\n\t\tconst promise = new Promise( ( resolve, reject ) => {\n\t\t\tresolvePromise = resolve;\n\t\t\trejectPromise = reject;\n\t\t} );\n\n\t\tconst inputData = {\n\t\t\t\"prompt\": prompt,\n\t\t\t\"isNumber\": isNumber,\n\t\t\t\"isInteger\": isInteger,\n\t\t\t\"allowNegative\": allowNegative,\n\t\t\t\"val\": \"\",\n\t\t\t\"callback\": callback,\n\t\t\t\"resolve\": resolvePromise,\n\t\t\t\"reject\": rejectPromise,\n\t\t\t\"screenData\": screenData\n\t\t};\n\n\t\tm_inputQueue.push( inputData );\n\n\t\t// Start input collection if this is the first input\n\t\tif( m_inputQueue.length === 1 ) {\n\t\t\tstartInputCollection();\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tfunction startInputCollection() {\n\t\tstartKeyboard();\n\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tif( !input ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset blinking cursor state\n\t\tm_promptLastTime = Date.now();\n\t\tm_promptBackground = null;\n\t\tm_promptBackgroundWidth = 0;\n\n\t\t// Start blinking cursor interval\n\t\tif( !m_promptInterval ) {\n\t\t\tm_promptInterval = setInterval( showPrompt, 100 );\n\t\t}\n\n\t\t// Listen for keyboard input\n\t\tonkey( [ null, \"down\", collectInput, false ] );\n\t}\n\n\tfunction collectInput( event ) {\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tif( !input ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet removeLastChar = false;\n\n\t\tif( event.key === \"Enter\" ) {\n\n\t\t\t// Enter key pressed - finish input\n\t\t\tfinishInput( input );\n\n\t\t} else if( event.key === \"Backspace\" ) {\n\n\t\t\t// Backspace - remove last character\n\t\t\tif( input.val.length > 0 ) {\n\t\t\t\tinput.val = input.val.substring( 0, input.val.length - 1 );\n\t\t\t}\n\n\t\t} else if( event.key && event.key.length === 1 ) {\n\n\t\t\t// Handle +/- for numbers\n\t\t\tif( input.isNumber && input.allowNegative ) {\n\t\t\t\tif( event.key === \"-\" && input.val.length === 0 ) {\n\t\t\t\t\tinput.val = \"-\";\n\t\t\t\t\treturn;\n\t\t\t\t} else if( event.key === \"+\" && input.val.charAt( 0 ) === \"-\" ) {\n\t\t\t\t\tinput.val = input.val.substring( 1 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add character\n\t\t\tinput.val += event.key;\n\n\t\t\t// Validate number input\n\t\t\tif( input.isNumber ) {\n\t\t\t\tif( isNaN( Number( input.val ) ) ) {\n\t\t\t\t\tremoveLastChar = true;\n\t\t\t\t} else if( input.isInteger && event.key === \".\" ) {\n\t\t\t\t\tremoveLastChar = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove invalid character\n\t\tif( removeLastChar ) {\n\t\t\tinput.val = input.val.substring( 0, input.val.length - 1 );\n\t\t}\n\n\t\t// Update display\n\t\tshowPrompt();\n\t}\n\n\tfunction showPrompt( hideCursor ) {\n\t\tif( m_inputQueue.length === 0 || m_inputQueueIndex >= m_inputQueue.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst input = m_inputQueue[ m_inputQueueIndex ];\n\t\tconst screenData = input.screenData;\n\n\t\t// Build message\n\t\tlet msg = input.prompt + input.val;\n\n\t\t// Blink cursor every half second\n\t\tconst now = Date.now();\n\t\tif( now - m_promptLastTime > 500 ) {\n\t\t\tm_promptBlink = !m_promptBlink;\n\t\t\tm_promptLastTime = now;\n\t\t}\n\n\t\tif( m_promptBlink && !hideCursor ) {\n\t\t\tmsg += screenData.printCursor.prompt;\n\t\t}\n\n\t\t// Check if need to scroll first\n\t\tlet pos = piData.commands.getPos( screenData );\n\t\tif( pos.row >= piData.commands.getRows( screenData ) ) {\n\t\t\tpiData.commands.print( screenData, [ \"\", false ] );\n\t\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row - 1 ] );\n\t\t\tpos = piData.commands.getPos( screenData );\n\t\t}\n\n\t\t// Get the background pixels\n\t\tconst posPx = piData.commands.getPosPx( screenData );\n\t\tconst width = ( msg.length + 1 ) * screenData.printCursor.font.width;\n\t\tconst height = screenData.printCursor.font.height;\n\n\t\t// If there is no background, save it\n\t\tif( !m_promptBackground ) {\n\t\t\tm_promptBackground = piData.commands.get( screenData,\n\t\t\t\t[ posPx.x, posPx.y, posPx.x + width, posPx.y + height ]\n\t\t\t);\n\t\t} else if( m_promptBackgroundWidth < width ) {\n\n\t\t\t// We have a background but we need a bigger background\n\t\t\tpiData.commands.put( screenData,\n\t\t\t\t[ m_promptBackground, posPx.x, posPx.y, true ]\n\t\t\t);\n\t\t\tm_promptBackground = piData.commands.get( screenData,\n\t\t\t\t[ posPx.x, posPx.y, posPx.x + width, posPx.y + height ]\n\t\t\t);\n\t\t} else {\n\n\t\t\t// Restore the background\n\t\t\tpiData.commands.put( screenData,\n\t\t\t\t[ m_promptBackground, posPx.x, posPx.y, true ]\n\t\t\t);\n\t\t}\n\n\t\t// Store the background width for later use\n\t\tm_promptBackgroundWidth = width;\n\n\t\t// Print the prompt + input + cursor\n\t\tpiData.commands.print( screenData, [ msg, true ] );\n\n\t\t// Reset cursor position\n\t\tpiData.commands.setPos( screenData, [ pos.col, pos.row ] );\n\n\t\tpiData.commands.render( screenData );\n\t}\n\n\tfunction finishInput( input ) {\n\n\t\t// Show prompt one last time without cursor\n\t\tshowPrompt( true );\n\n\t\t// Stop blinking cursor\n\t\tif( m_promptInterval ) {\n\t\t\tclearInterval( m_promptInterval );\n\t\t\tm_promptInterval = null;\n\t\t}\n\n\t\t// Clear background\n\t\tm_promptBackground = null;\n\t\tm_promptBackgroundWidth = 0;\n\n\t\t// Remove input listener\n\t\toffkey( [ null, \"down\", collectInput ] );\n\n\t\t// Process and validate input\n\t\tprocessInputValue( input );\n\n\t\t// Print newline\n\t\tpiData.commands.print( input.screenData, [ \"\" ] );\n\n\t\t// Call callback if provided\n\t\tif( input.callback ) {\n\t\t\tinput.callback( input.val );\n\t\t}\n\n\t\t// Resolve promise\n\t\tinput.resolve( input.val );\n\n\t\t// Move to next input in queue\n\t\tm_inputQueueIndex++;\n\t\tif( m_inputQueueIndex >= m_inputQueue.length ) {\n\t\t\tm_inputQueue = [];\n\t\t\tm_inputQueueIndex = 0;\n\t\t} else {\n\t\t\tstartInputCollection();\n\t\t}\n\t}\n\n\tfunction processInputValue( input ) {\n\t\tif( input.isNumber ) {\n\t\t\tif( input.val === \"\" || input.val === \"-\" ) {\n\t\t\t\tinput.val = 0;\n\t\t\t} else {\n\t\t\t\tinput.val = Number( input.val );\n\t\t\t\tif( input.isInteger ) {\n\t\t\t\t\tinput.val = Math.floor( input.val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// CANCELINPUT - Cancel active input request\n\tpi._.addCommand( \"cancelInput\", cancelInput, false, true, [] );\n\n\tfunction cancelInput( screenData ) {\n\n\t\t// Clear all inputs\n\t\tfor( let i = m_inputQueue.length - 1; i >= 0; i-- ) {\n\t\t\tif( m_inputQueue[ i ].screenData === screenData ) {\n\t\t\t\tm_inputQueue[ i ].reject( new Error( \"Input cancelled\" ) );\n\t\t\t\tm_inputQueue.splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\t// Stop prompt interval\n\t\tif( m_promptInterval ) {\n\t\t\tclearInterval( m_promptInterval );\n\t\t\tm_promptInterval = null;\n\t\t}\n\n\t\t// Remove input listener\n\t\toffkey( [ null, \"down\", collectInput ] );\n\n\t\tm_inputQueueIndex = 0;\n\t}\n\n\t// SETINPUTCURSOR - Set the cursor character for input prompt\n\tpi._.addCommand( \"setInputCursor\", setInputCursor, false, true, [ \"cursor\" ] );\n\tpi._.addSetting( \"inputCursor\", setInputCursor, true, [ \"cursor\" ] );\n\n\tfunction setInputCursor( screenData, args ) {\n\t\tlet cursor = args[ 0 ];\n\n\t\tif( pi.util.isInteger( cursor ) ) {\n\t\t\tcursor = String.fromCharCode( cursor );\n\t\t}\n\n\t\tif( typeof cursor !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"setInputCursor: cursor must be a string or integer\" );\n\t\t\terror.code = \"INVALID_CURSOR\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst font = screenData.printCursor.font;\n\n\t\tif( font.mode === \"pixel\" ) {\n\t\t\t// Check if character exists in pixel font charset\n\t\t\tif( font.charset ) {\n\t\t\t\tlet badChar = true;\n\t\t\t\tfor( let i = 0; i < font.charset.length; i++ ) {\n\t\t\t\t\tif( font.charset.charAt( i ) === cursor ) {\n\t\t\t\t\t\tbadChar = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( badChar ) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`setInputCursor: cursor \"${cursor}\" not found in current font charset`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tscreenData.printCursor.prompt = cursor;\n\t}\n}\n\n", "/**\n * Pi.js - Mouse Input Module\n * \n * Handles mouse events, position tracking, button states, and event listeners.\n * \n * @module modules/mouse\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// STARTMOUSE - Start mouse event tracking\n\tpi._.addCommand( \"startMouse\", startMouse, false, true, [] );\n\n\tfunction startMouse( screenData ) {\n\t\tif( !screenData.mouseStarted ) {\n\t\t\tscreenData.canvas.addEventListener( \"mousemove\", mouseMove );\n\t\t\tscreenData.canvas.addEventListener( \"mousedown\", mouseDown );\n\t\t\tscreenData.canvas.addEventListener( \"mouseup\", mouseUp );\n\t\t\tscreenData.canvas.addEventListener( \"contextmenu\", onContextMenu );\n\t\t\tscreenData.mouseStarted = true;\n\t\t}\n\t}\n\n\t// STOPMOUSE - Stop mouse event tracking\n\tpi._.addCommand( \"stopMouse\", stopMouse, false, true, [] );\n\n\tfunction stopMouse( screenData ) {\n\t\tif( screenData.mouseStarted ) {\n\t\t\tscreenData.canvas.removeEventListener( \"mousemove\", mouseMove );\n\t\t\tscreenData.canvas.removeEventListener( \"mousedown\", mouseDown );\n\t\t\tscreenData.canvas.removeEventListener( \"mouseup\", mouseUp );\n\t\t\tscreenData.canvas.removeEventListener( \"contextmenu\", onContextMenu );\n\t\t\tscreenData.mouseStarted = false;\n\t\t}\n\t}\n\n\tfunction mouseMove( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"move\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction mouseDown( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"down\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\", getMouse( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"down\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction mouseUp( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) return;\n\n\t\tupdateMouse( screenData, e, \"up\" );\n\n\t\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\", getMouse( screenData ),\n\t\t\t\tscreenData.onMouseEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\", getMouse( screenData ),\n\t\t\t\tscreenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\", getMouse( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"up\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction onContextMenu( e ) {\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n\n\tfunction updateMouse( screenData, e, eventType ) {\n\t\tconst rect = screenData.canvas.getBoundingClientRect();\n\t\tconst scaleX = screenData.width / rect.width;\n\t\tconst scaleY = screenData.height / rect.height;\n\n\t\tscreenData.mouse.x = Math.floor( ( e.clientX - rect.left ) * scaleX );\n\t\tscreenData.mouse.y = Math.floor( ( e.clientY - rect.top ) * scaleY );\n\t\tscreenData.mouse.offsetX = e.offsetX;\n\t\tscreenData.mouse.offsetY = e.offsetY;\n\t\tscreenData.mouse.button = e.button;\n\t\tscreenData.mouse.buttons = e.buttons;\n\t\tscreenData.mouse.eventType = eventType;\n\n\t\tscreenData.lastEvent = \"mouse\";\n\t}\n\n\tfunction getMouse( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.mouse.x,\n\t\t\t\"y\": screenData.mouse.y,\n\t\t\t\"offsetX\": screenData.mouse.offsetX,\n\t\t\t\"offsetY\": screenData.mouse.offsetY,\n\t\t\t\"button\": screenData.mouse.button,\n\t\t\t\"buttons\": screenData.mouse.buttons,\n\t\t\t\"eventType\": screenData.mouse.eventType\n\t\t};\n\t}\n\n\t// INMOUSE - Get mouse state\n\tpi._.addCommand( \"inmouse\", inmouse, false, true, [] );\n\n\tfunction inmouse( screenData ) {\n\t\tpiData.commands.startMouse( screenData );\n\t\treturn getMouse( screenData );\n\t}\n\n\t// ONMOUSE - Register mouse event listener\n\tpi._.addCommand( \"onmouse\", onmouse, false, true, [ \"mode\", \"fn\", \"once\" ] );\n\n\tfunction onmouse( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"down\";\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tpiData.commands.startMouse( screenData );\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"onmouse: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !screenData.onMouseEventListeners ) {\n\t\t\tscreenData.onMouseEventListeners = {};\n\t\t\tscreenData.mouseEventListenersActive = 0;\n\t\t}\n\n\t\tif( !screenData.onMouseEventListeners[ mode ] ) {\n\t\t\tscreenData.onMouseEventListeners[ mode ] = [];\n\t\t}\n\n\t\tscreenData.onMouseEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\tscreenData.mouseEventListenersActive++;\n\t}\n\n\t// OFFMOUSE - Remove mouse event listener\n\tpi._.addCommand( \"offmouse\", offmouse, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offmouse( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"down\";\n\t\tconst fn = args[ 1 ];\n\n\t\tif( screenData.onMouseEventListeners && screenData.onMouseEventListeners[ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tconst beforeLen = screenData.onMouseEventListeners[ mode ].length;\n\t\t\t\tscreenData.onMouseEventListeners[ mode ] = \n\t\t\t\t\tscreenData.onMouseEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\tscreenData.mouseEventListenersActive -= \n\t\t\t\t\tbeforeLen - screenData.onMouseEventListeners[ mode ].length;\n\t\t\t} else {\n\t\t\t\tscreenData.mouseEventListenersActive -= \n\t\t\t\t\tscreenData.onMouseEventListeners[ mode ].length;\n\t\t\t\tscreenData.onMouseEventListeners[ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// TRIGGEREVENTI STENERS - Helper to trigger event listeners\n\tpi._.addCommand( \"triggerEventListeners\", triggerEventListeners, true, false );\n\n\tfunction triggerEventListeners( mode, data, listeners, extraMode ) {\n\t\tif( !listeners || !listeners[ mode ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor( let i = listeners[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\tconst listener = listeners[ mode ][ i ];\n\t\t\tlistener.fn( data, extraMode );\n\t\t\tif( listener.once ) {\n\t\t\t\tlisteners[ mode ].splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t// GETMOUSE - Get mouse state (internal helper)\n\tpi._.addCommand( \"getMouse\", getMouse, true, true, [] );\n\n\tfunction getMouse( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.mouse.x,\n\t\t\t\"y\": screenData.mouse.y,\n\t\t\t\"lastX\": screenData.mouse.lastX,\n\t\t\t\"lastY\": screenData.mouse.lastY,\n\t\t\t\"buttons\": screenData.mouse.buttons,\n\t\t\t\"action\": screenData.mouse.eventType,\n\t\t\t\"type\": \"mouse\"\n\t\t};\n\t}\n\n\t// INPRESS - Get press state (mouse or touch)\n\tpi._.addCommand( \"inpress\", inpress, false, true, [] );\n\n\tfunction inpress( screenData ) {\n\n\t\t// Activate the mouse and touch event listeners\n\t\tpiData.commands.startMouse( screenData );\n\t\tpiData.commands.startTouch( screenData );\n\n\t\tif( screenData.lastEvent === \"touch\" ) {\n\t\t\treturn piData.commands.getTouchPress( screenData );\n\t\t}\n\n\t\treturn piData.commands.getMouse( screenData );\n\t}\n\n\t// ONPRESS - Register press event listener\n\tpi._.addCommand( \"onpress\", onpress, false, true,\n\t\t[ \"mode\", \"fn\", \"once\", \"hitBox\", \"customData\" ]\n\t);\n\n\tfunction onpress( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\t\tconst once = args[ 2 ];\n\t\tconst hitBox = args[ 3 ];\n\t\tconst customData = args[ 4 ];\n\n\t\tconst isValid = piData.commands.onevent(\n\t\t\tmode, fn, once, hitBox, [ \"down\", \"up\", \"move\" ], \"onpress\",\n\t\t\tscreenData.onPressEventListeners, null, null, customData\n\t\t);\n\n\t\t// Activate the mouse and touch event listeners\n\t\tif( isValid ) {\n\t\t\tpiData.commands.startMouse( screenData );\n\t\t\tpiData.commands.startTouch( screenData );\n\t\t\tscreenData.pressEventListenersActive += 1;\n\t\t}\n\t}\n\n\t// OFFPRESS - Remove press event listener\n\tpi._.addCommand( \"offpress\", offpress, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offpress( screenData, args ) {\n\t\tconst mode = args[ 0 ];\n\t\tconst fn = args[ 1 ];\n\n\t\tconst isValid = piData.commands.offevent(\n\t\t\tmode, fn, [ \"down\", \"up\", \"move\" ], \"offpress\",\n\t\t\tscreenData.onPressEventListeners\n\t\t);\n\n\t\tif( isValid ) {\n\t\t\tif( fn == null ) {\n\t\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t\t} else {\n\t\t\t\tscreenData.pressEventListenersActive -= 1;\n\t\t\t\tif( screenData.pressEventListenersActive < 0 ) {\n\t\t\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ONCLICK - Register click event listener\n\tpi._.addCommand( \"onclick\", onclick, false, true,\n\t\t[ \"fn\", \"once\", \"hitBox\", \"customData\" ]\n\t);\n\n\tfunction onclick( screenData, args ) {\n\t\tconst fn = args[ 0 ];\n\t\tconst once = args[ 1 ];\n\t\tlet hitBox = args[ 2 ];\n\t\tconst customData = args[ 3 ];\n\n\t\tif( hitBox == null ) {\n\t\t\thitBox = {\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0,\n\t\t\t\t\"width\": piData.commands.width( screenData ),\n\t\t\t\t\"height\": piData.commands.height( screenData )\n\t\t\t};\n\t\t}\n\n\t\tconst isValid = piData.commands.onevent(\n\t\t\t\"click\", fn, once, hitBox, [ \"click\" ], \"onclick\",\n\t\t\tscreenData.onClickEventListeners, null, null, customData\n\t\t);\n\n\t\t// Activate the mouse and touch event listeners\n\t\tif( isValid ) {\n\t\t\tpiData.commands.startMouse( screenData );\n\t\t\tpiData.commands.startTouch( screenData );\n\t\t\tscreenData.clickEventListenersActive += 1;\n\t\t}\n\t}\n\n\t// OFFCLICK - Remove click event listener\n\tpi._.addCommand( \"offclick\", offclick, false, true, [ \"fn\" ] );\n\n\tfunction offclick( screenData, args ) {\n\t\tconst fn = args[ 0 ];\n\n\t\tconst isValid = piData.commands.offevent(\n\t\t\t\"click\", fn, [ \"click\" ], \"offclick\",\n\t\t\tscreenData.onClickEventListeners\n\t\t);\n\n\t\tif( isValid ) {\n\t\t\tif( fn == null ) {\n\t\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t\t} else {\n\t\t\t\tscreenData.clickEventListenersActive -= 1;\n\t\t\t\tif( screenData.clickEventListenersActive < 0 ) {\n\t\t\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// SETENABLECONTEXTMENU - Enable/disable right-click context menu\n\tpi._.addCommand( \"setEnableContextMenu\", setEnableContextMenu, false, true, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"enableContextMenu\", setEnableContextMenu, true, [ \"isEnabled\" ] );\n\n\tfunction setEnableContextMenu( screenData, args ) {\n\t\tscreenData.isContextMenuEnabled = !!args[ 0 ];\n\n\t\t// Activate the mouse event listeners\n\t\tstartMouse( screenData );\n\t}\n}\n\n", "/**\n * Pi.js - Touch Input Module\n * \n * Handles touch events, multi-touch support, and event listeners.\n * \n * @module modules/touch\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// STARTTOUCH - Start touch event tracking\n\tpi._.addCommand( \"startTouch\", startTouch, false, true, [] );\n\n\tfunction startTouch( screenData ) {\n\t\tif( !screenData.touchStarted ) {\n\t\t\tscreenData.canvas.addEventListener( \"touchstart\", touchStart );\n\t\t\tscreenData.canvas.addEventListener( \"touchmove\", touchMove );\n\t\t\tscreenData.canvas.addEventListener( \"touchend\", touchEnd );\n\t\t\tscreenData.canvas.addEventListener( \"touchcancel\", touchEnd );\n\t\t\tscreenData.touchStarted = true;\n\t\t}\n\t}\n\n\t// STOPTOUCH - Stop touch event tracking\n\tpi._.addCommand( \"stopTouch\", stopTouch, false, true, [] );\n\n\tfunction stopTouch( screenData ) {\n\t\tif( screenData.touchStarted ) {\n\t\t\tscreenData.canvas.removeEventListener( \"touchstart\", touchStart );\n\t\t\tscreenData.canvas.removeEventListener( \"touchmove\", touchMove );\n\t\t\tscreenData.canvas.removeEventListener( \"touchend\", touchEnd );\n\t\t\tscreenData.canvas.removeEventListener( \"touchcancel\", touchEnd );\n\t\t\tscreenData.touchStarted = false;\n\t\t}\n\t}\n\n\tfunction touchStart( e ) {\n\t\tpiData.isTouchScreen = true;\n\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"start\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"start\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"down\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\n\t\t\t// This will prevent mouse down event from firing\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\",\n\t\t\t\tgetTouchPress( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"down\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction touchMove( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"move\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"move\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\tfunction touchEnd( e ) {\n\t\tconst screenData = piData.screens[ e.target.dataset.screenId ];\n\t\tif( !screenData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateTouch( screenData, e, \"end\" );\n\n\t\tif( screenData.touchEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"end\",\n\t\t\t\tgetTouch( screenData ), screenData.onTouchEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.pressEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"up\",\n\t\t\t\tgetTouchPress( screenData ), screenData.onPressEventListeners\n\t\t\t);\n\t\t}\n\n\t\tif( screenData.clickEventListenersActive > 0 ) {\n\t\t\tpiData.commands.triggerEventListeners( \"click\",\n\t\t\t\tgetTouchPress( screenData ),\n\t\t\t\tscreenData.onClickEventListeners, \"up\"\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction updateTouch( screenData, e, eventType ) {\n\t\tconst rect = screenData.canvas.getBoundingClientRect();\n\t\tconst scaleX = screenData.width / rect.width;\n\t\tconst scaleY = screenData.height / rect.height;\n\n\t\tscreenData.touch.eventType = eventType;\n\t\tscreenData.touch.count = e.touches.length;\n\t\tscreenData.touch.touches = [];\n\n\t\tfor( let i = 0; i < e.touches.length; i++ ) {\n\t\t\tconst touch = e.touches[ i ];\n\t\t\tscreenData.touch.touches.push( {\n\t\t\t\t\"x\": Math.floor( ( touch.clientX - rect.left ) * scaleX ),\n\t\t\t\t\"y\": Math.floor( ( touch.clientY - rect.top ) * scaleY ),\n\t\t\t\t\"identifier\": touch.identifier\n\t\t\t} );\n\t\t}\n\n\t\t// Update primary touch (first touch)\n\t\tif( screenData.touch.touches.length > 0 ) {\n\t\t\tscreenData.touch.x = screenData.touch.touches[ 0 ].x;\n\t\t\tscreenData.touch.y = screenData.touch.touches[ 0 ].y;\n\t\t}\n\n\t\tscreenData.lastEvent = \"touch\";\n\t}\n\n\tfunction getTouch( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.touch.x,\n\t\t\t\"y\": screenData.touch.y,\n\t\t\t\"count\": screenData.touch.count,\n\t\t\t\"touches\": screenData.touch.touches.slice(),\n\t\t\t\"eventType\": screenData.touch.eventType\n\t\t};\n\t}\n\n\tfunction getTouchPress( screenData ) {\n\t\treturn {\n\t\t\t\"x\": screenData.touch.x,\n\t\t\t\"y\": screenData.touch.y,\n\t\t\t\"eventType\": screenData.touch.eventType,\n\t\t\t\"inputType\": \"touch\"\n\t\t};\n\t}\n\n\t// INTOUCH - Get touch state\n\tpi._.addCommand( \"intouch\", intouch, false, true, [] );\n\n\tfunction intouch( screenData ) {\n\t\tpiData.commands.startTouch( screenData );\n\t\treturn getTouch( screenData );\n\t}\n\n\t// ONTOUCH - Register touch event listener\n\tpi._.addCommand( \"ontouch\", ontouch, false, true, [ \"mode\", \"fn\", \"once\" ] );\n\n\tfunction ontouch( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"start\";\n\t\tconst fn = args[ 1 ];\n\t\tconst once = !!args[ 2 ];\n\n\t\tpiData.commands.startTouch( screenData );\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"ontouch: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !screenData.onTouchEventListeners ) {\n\t\t\tscreenData.onTouchEventListeners = {};\n\t\t\tscreenData.touchEventListenersActive = 0;\n\t\t}\n\n\t\tif( !screenData.onTouchEventListeners[ mode ] ) {\n\t\t\tscreenData.onTouchEventListeners[ mode ] = [];\n\t\t}\n\n\t\tscreenData.onTouchEventListeners[ mode ].push( { \"fn\": fn, \"once\": once } );\n\t\tscreenData.touchEventListenersActive++;\n\t}\n\n\t// OFFTOUCH - Remove touch event listener\n\tpi._.addCommand( \"offtouch\", offtouch, false, true, [ \"mode\", \"fn\" ] );\n\n\tfunction offtouch( screenData, args ) {\n\t\tconst mode = args[ 0 ] || \"start\";\n\t\tconst fn = args[ 1 ];\n\n\t\tif( screenData.onTouchEventListeners && screenData.onTouchEventListeners[ mode ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tconst beforeLen = screenData.onTouchEventListeners[ mode ].length;\n\t\t\t\tscreenData.onTouchEventListeners[ mode ] = \n\t\t\t\t\tscreenData.onTouchEventListeners[ mode ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t\tscreenData.touchEventListenersActive -= \n\t\t\t\t\tbeforeLen - screenData.onTouchEventListeners[ mode ].length;\n\t\t\t} else {\n\t\t\t\tscreenData.touchEventListenersActive -= \n\t\t\t\t\tscreenData.onTouchEventListeners[ mode ].length;\n\t\t\t\tscreenData.onTouchEventListeners[ mode ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t// GETTOUCHPRESS - Get touch press state (internal helper)\n\tpi._.addCommand( \"getTouchPress\", getTouchPress, true, true, [] );\n\n\tfunction getTouchPress( screenData ) {\n\t\tfunction copyTouches( touches, touchArr, action ) {\n\t\t\tfor( const i in touches ) {\n\t\t\t\tconst touch = touches[ i ];\n\t\t\t\tconst touchData = {\n\t\t\t\t\t\"x\": touch.x,\n\t\t\t\t\t\"y\": touch.y,\n\t\t\t\t\t\"id\": touch.id,\n\t\t\t\t\t\"lastX\": touch.lastX,\n\t\t\t\t\t\"lastY\": touch.lastY,\n\t\t\t\t\t\"action\": touch.action,\n\t\t\t\t\t\"type\": \"touch\"\n\t\t\t\t};\n\n\t\t\t\tif( action !== undefined ) {\n\t\t\t\t\ttouch.action = action;\n\t\t\t\t}\n\n\t\t\t\ttouchArr.push( touchData );\n\t\t\t}\n\t\t}\n\n\t\tconst touchArr = [];\n\n\t\tcopyTouches( screenData.touches, touchArr );\n\n\t\tif( touchArr.length === 0 ) {\n\t\t\tcopyTouches( screenData.lastTouches, touchArr, \"up\" );\n\t\t}\n\n\t\tif( touchArr.length > 0 ) {\n\t\t\tconst touchData = touchArr[ 0 ];\n\t\t\tif( touchData.action === \"up\" ) {\n\t\t\t\ttouchData.buttons = 0;\n\t\t\t} else {\n\t\t\t\ttouchData.buttons = 1;\n\t\t\t}\n\n\t\t\ttouchData.touches = touchArr;\n\t\t\treturn touchData;\n\t\t}\n\n\t\treturn {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"id\": -1,\n\t\t\t\"lastX\": -1,\n\t\t\t\"lastY\": -1,\n\t\t\t\"action\": \"none\",\n\t\t\t\"buttons\": 0,\n\t\t\t\"type\": \"touch\"\n\t\t};\n\t}\n\n\t// SETPINCHZOOM - Enable/disable pinch zoom\n\tpi._.addCommand( \"setPinchZoom\", setPinchZoom, false, false, [ \"isEnabled\" ] );\n\tpi._.addSetting( \"pinchZoom\", setPinchZoom, false, [ \"isEnabled\" ] );\n\n\tfunction setPinchZoom( args ) {\n\t\tconst isEnabled = !!args[ 0 ];\n\n\t\tif( isEnabled ) {\n\t\t\tdocument.body.style.touchAction = \"\";\n\t\t} else {\n\t\t\tdocument.body.style.touchAction = \"none\";\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - Gamepad Input Module\n * \n * Handles gamepad/controller input using the Gamepad API.\n * \n * @module modules/gamepad\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Gamepad state\n\tlet m_controllers = {};\n\tlet m_controllerArr = [];\n\tlet m_events = {};\n\tlet m_gamepadLoopId = null;\n\tconst m_Modes = [\n\t\t\"connect\",\n\t\t\"disconnect\",\n\t\t\"axis\",\n\t\t\"pressed\",\n\t\t\"touched\",\n\t\t\"pressReleased\",\n\t\t\"touchReleased\"\n\t];\n\tlet m_isLooping = false;\n\tconst m_loopInterval = 8;\n\tlet m_axesSensitivity = 0.2;\n\tlet m_init = false;\n\n\tfunction initGamepads() {\n\t\twindow.addEventListener( \"gamepadconnected\", gamepadConnected );\n\t\twindow.addEventListener( \"gamepaddisconnected\", gamepadDisconnected );\n\t\tm_init = true;\n\t}\n\n\tfunction gamepadConnected( e ) {\n\t\tm_controllers[ e.gamepad.index ] = e.gamepad;\n\t\te.gamepad.controllerIndex = m_controllerArr.length;\n\t\tm_controllerArr.push( e.gamepad );\n\t\tupdateController( e.gamepad );\n\n\t\t// Trigger connect event\n\t\ttriggerGamepadEvent( \"connect\", e.gamepad.index );\n\t}\n\n\tfunction gamepadDisconnected( e ) {\n\t\t// Trigger disconnect event\n\t\ttriggerGamepadEvent( \"disconnect\", e.gamepad.index );\n\n\t\tm_controllerArr.splice(\n\t\t\tm_controllers[ e.gamepad.index ].controllerIndex, 1\n\t\t);\n\t\tdelete m_controllers[ e.gamepad.index ];\n\t}\n\n\tfunction updateControllers() {\n\t\tconst gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n\t\tfor( let i = 0; i < gamepads.length; i++ ) {\n\t\t\tif( gamepads[ i ] && m_controllers[ i ] ) {\n\t\t\t\tupdateController( gamepads[ i ] );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateController( gamepad ) {\n\t\tconst oldGamepad = m_controllers[ gamepad.index ];\n\n\t\t// Track button states\n\t\tif( !oldGamepad.buttons ) {\n\t\t\toldGamepad.buttons = [];\n\t\t}\n\t\tif( !oldGamepad.axes ) {\n\t\t\toldGamepad.axes = [];\n\t\t}\n\n\t\t// Check buttons\n\t\tfor( let i = 0; i < gamepad.buttons.length; i++ ) {\n\t\t\tconst button = gamepad.buttons[ i ];\n\t\t\tconst oldButton = oldGamepad.buttons[ i ] || { \"pressed\": false, \"touched\": false };\n\n\t\t\tif( button.pressed && !oldButton.pressed ) {\n\t\t\t\ttriggerGamepadEvent( \"pressed\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( !button.pressed && oldButton.pressed ) {\n\t\t\t\ttriggerGamepadEvent( \"pressReleased\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( button.touched && !oldButton.touched ) {\n\t\t\t\ttriggerGamepadEvent( \"touched\", gamepad.index, i );\n\t\t\t}\n\t\t\tif( !button.touched && oldButton.touched ) {\n\t\t\t\ttriggerGamepadEvent( \"touchReleased\", gamepad.index, i );\n\t\t\t}\n\n\t\t\toldGamepad.buttons[ i ] = {\n\t\t\t\t\"pressed\": button.pressed,\n\t\t\t\t\"touched\": button.touched,\n\t\t\t\t\"value\": button.value\n\t\t\t};\n\t\t}\n\n\t\t// Check axes\n\t\tfor( let i = 0; i < gamepad.axes.length; i++ ) {\n\t\t\tconst axisValue = gamepad.axes[ i ];\n\t\t\tconst oldValue = oldGamepad.axes[ i ] || 0;\n\n\t\t\tif( Math.abs( axisValue - oldValue ) > m_axesSensitivity ) {\n\t\t\t\ttriggerGamepadEvent( \"axis\", gamepad.index, i, axisValue );\n\t\t\t}\n\n\t\t\toldGamepad.axes[ i ] = axisValue;\n\t\t}\n\n\t\tm_controllers[ gamepad.index ] = oldGamepad;\n\t}\n\n\tfunction triggerGamepadEvent( mode, gamepadIndex, item, value ) {\n\t\tif( !m_events[ gamepadIndex ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modeEvents = m_events[ gamepadIndex ][ mode ];\n\t\tif( !modeEvents ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Trigger item-specific listeners\n\t\tif( item !== undefined && modeEvents[ item ] ) {\n\t\t\tfor( let i = modeEvents[ item ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = modeEvents[ item ][ i ];\n\t\t\t\tlistener.fn( {\n\t\t\t\t\t\"gamepadIndex\": gamepadIndex,\n\t\t\t\t\t\"mode\": mode,\n\t\t\t\t\t\"item\": item,\n\t\t\t\t\t\"value\": value,\n\t\t\t\t\t\"customData\": listener.customData\n\t\t\t\t} );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tmodeEvents[ item ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Trigger \"any item\" listeners (*)\n\t\tif( modeEvents[ \"*\" ] ) {\n\t\t\tfor( let i = modeEvents[ \"*\" ].length - 1; i >= 0; i-- ) {\n\t\t\t\tconst listener = modeEvents[ \"*\" ][ i ];\n\t\t\t\tlistener.fn( {\n\t\t\t\t\t\"gamepadIndex\": gamepadIndex,\n\t\t\t\t\t\"mode\": mode,\n\t\t\t\t\t\"item\": item,\n\t\t\t\t\t\"value\": value,\n\t\t\t\t\t\"customData\": listener.customData\n\t\t\t\t} );\n\t\t\t\tif( listener.once ) {\n\t\t\t\t\tmodeEvents[ \"*\" ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// INGAMEPADS - Get all connected gamepads\n\tpi._.addCommand( \"ingamepads\", ingamepads, false, false, [] );\n\n\tfunction ingamepads() {\n\t\tif( !m_init ) {\n\t\t\tinitGamepads();\n\t\t}\n\t\tif( m_controllers ) {\n\t\t\tupdateControllers();\n\t\t}\n\t\treturn m_controllerArr;\n\t}\n\n\t// ONGAMEPAD - Register gamepad event listener\n\tpi._.addCommand( \"ongamepad\", ongamepad, false, false,\n\t\t[ \"gamepadIndex\", \"mode\", \"item\", \"fn\", \"once\", \"customData\" ]\n\t);\n\n\tfunction ongamepad( args ) {\n\t\tif( !m_init ) {\n\t\t\tinitGamepads();\n\t\t}\n\n\t\tconst gamepadIndex = args[ 0 ];\n\t\tconst mode = args[ 1 ];\n\t\tconst item = args[ 2 ];\n\t\tconst fn = args[ 3 ];\n\t\tconst once = !!args[ 4 ];\n\t\tconst customData = args[ 5 ];\n\n\t\tif( !pi.util.isFunction( fn ) ) {\n\t\t\tconst error = new TypeError( \"ongamepad: fn must be a function\" );\n\t\t\terror.code = \"INVALID_CALLBACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( gamepadIndex == null ) {\n\t\t\tconst error = new TypeError( \"ongamepad: gamepadIndex is required\" );\n\t\t\terror.code = \"MISSING_GAMEPAD_INDEX\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !m_events[ gamepadIndex ] ) {\n\t\t\tm_events[ gamepadIndex ] = {};\n\t\t}\n\t\tif( !m_events[ gamepadIndex ][ mode ] ) {\n\t\t\tm_events[ gamepadIndex ][ mode ] = {};\n\t\t}\n\n\t\tconst itemKey = item !== undefined ? item : \"*\";\n\n\t\tif( !m_events[ gamepadIndex ][ mode ][ itemKey ] ) {\n\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = [];\n\t\t}\n\n\t\tm_events[ gamepadIndex ][ mode ][ itemKey ].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"once\": once,\n\t\t\t\"customData\": customData\n\t\t} );\n\n\t\t// Start polling if not already\n\t\tif( !m_isLooping ) {\n\t\t\tstartGamepadLoop();\n\t\t}\n\t}\n\n\t// OFFGAMEPAD - Remove gamepad event listener\n\tpi._.addCommand( \"offgamepad\", offgamepad, false, false,\n\t\t[ \"gamepadIndex\", \"mode\", \"item\", \"fn\" ]\n\t);\n\n\tfunction offgamepad( args ) {\n\t\tconst gamepadIndex = args[ 0 ];\n\t\tconst mode = args[ 1 ];\n\t\tconst item = args[ 2 ];\n\t\tconst fn = args[ 3 ];\n\n\t\tif( !m_events[ gamepadIndex ] || !m_events[ gamepadIndex ][ mode ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemKey = item !== undefined ? item : \"*\";\n\n\t\tif( m_events[ gamepadIndex ][ mode ][ itemKey ] ) {\n\t\t\tif( fn ) {\n\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = \n\t\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ].filter(\n\t\t\t\t\t\tlistener => listener.fn !== fn\n\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_events[ gamepadIndex ][ mode ][ itemKey ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction startGamepadLoop() {\n\t\tif( m_isLooping ) {\n\t\t\treturn;\n\t\t}\n\n\t\tm_isLooping = true;\n\n\t\tfunction loop() {\n\t\t\tif( !m_isLooping ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdateControllers();\n\t\t\tm_gamepadLoopId = setTimeout( loop, m_loopInterval );\n\t\t}\n\n\t\tloop();\n\t}\n\n\tfunction stopGamepadLoop() {\n\t\tm_isLooping = false;\n\t\tif( m_gamepadLoopId ) {\n\t\t\tclearTimeout( m_gamepadLoopId );\n\t\t\tm_gamepadLoopId = null;\n\t\t}\n\t}\n\n\t// SETGAMEPADSENSITIVITY - Set axes sensitivity threshold\n\tpi._.addCommand( \"setGamepadSensitivity\", setGamepadSensitivity, false, false,\n\t\t[ \"sensitivity\" ]\n\t);\n\n\tfunction setGamepadSensitivity( args ) {\n\t\tconst sensitivity = args[ 0 ];\n\n\t\tif( isNaN( sensitivity ) || sensitivity < 0 || sensitivity > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setGamepadSensitivity: sensitivity must be between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_SENSITIVITY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tm_axesSensitivity = sensitivity;\n\t}\n}\n\n", "/**\n * Pi.js - Sound Module\n * \n * WebAudio-based sound system for loading/playing sound files and generating tones.\n * \n * @module modules/sound\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\tconst m_piWait = pi._.wait;\n\tconst m_piResume = pi._.resume;\n\n\t// Sound state\n\tlet m_audioPools = {};\n\tlet m_nextAudioId = 0;\n\tlet m_audioContext = null;\n\tlet m_soundPool = {};\n\tlet m_nextSoundId = 0;\n\n\t// CREATEAUDIOPOOL - Create pool of HTML5 Audio elements for sound playback\n\tpi._.addCommand( \"createAudioPool\", createAudioPool, false, false,\n\t\t[ \"src\", \"poolSize\" ]\n\t);\n\n\tfunction createAudioPool( args ) {\n\t\tconst src = args[ 0 ];\n\t\tlet poolSize = args[ 1 ];\n\n\t\t// Validate parameters\n\t\tif( !src ) {\n\t\t\tconst error = new TypeError( \"createAudioPool: No sound source provided\" );\n\t\t\terror.code = \"NO_SOURCE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( poolSize == null ) {\n\t\t\tpoolSize = 1;\n\t\t}\n\n\t\tpoolSize = Math.round( poolSize );\n\t\tif( isNaN( poolSize ) || poolSize < 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"createAudioPool: parameter poolSize must be an integer greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_POOL_SIZE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Create the audio item\n\t\tconst audioItem = {\n\t\t\t\"pool\": [],\n\t\t\t\"index\": 0\n\t\t};\n\n\t\t// Create the audio pool\n\t\tfor( let i = 0; i < poolSize; i++ ) {\n\n\t\t\t// Create the audio item\n\t\t\tconst audio = new Audio( src );\n\n\t\t\tloadAudio( audioItem, audio );\n\t\t}\n\n\t\t// Add the audio item to the global object\n\t\tconst audioId = \"audioPool_\" + m_nextAudioId;\n\t\tm_audioPools[ audioId ] = audioItem;\n\n\t\t// Increment the last audio id\n\t\tm_nextAudioId += 1;\n\n\t\t// Return the id\n\t\treturn audioId;\n\t}\n\n\tfunction loadAudio( audioItem, audio, retryCount ) {\n\t\tif( retryCount == null ) {\n\t\t\tretryCount = 3;\n\t\t}\n\n\t\tfunction audioReady() {\n\t\t\taudioItem.pool.push( {\n\t\t\t\t\"audio\": audio,\n\t\t\t\t\"timeout\": 0,\n\t\t\t\t\"volume\": 1\n\t\t\t} );\n\t\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\t\tm_piResume();\n\t\t}\n\n\t\tfunction audioError() {\n\t\t\tconst errors = [\n\t\t\t\t\"MEDIA_ERR_ABORTED - fetching process aborted by user\",\n\t\t\t\t\"MEDIA_ERR_NETWORK - error occurred when downloading\",\n\t\t\t\t\"MEDIA_ERR_DECODE - error occurred when decoding\",\n\t\t\t\t\"MEDIA_ERR_SRC_NOT_SUPPORTED - audio/video not supported\"\n\t\t\t];\n\n\t\t\tconst errorCode = audio.error.code;\n\t\t\tconst index = errorCode - 1;\n\n\t\t\tif( index >= 0 && index < errors.length ) {\n\t\t\t\tconsole.warn( `createAudioPool: ${errors[ index ]}` );\n\n\t\t\t\t// Retry loading the audio if allowed\n\t\t\t\tif( retryCount > 0 ) {\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\t\t\t\t\taudio.removeEventListener( \"error\", audioError );\n\t\t\t\t\t\tconst newAudio = new Audio( audio.src );\n\t\t\t\t\t\tloadAudio( audioItem, newAudio, retryCount - 1 );\n\t\t\t\t\t}, 100 );\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn( `createAudioPool: Max retries exceeded for ${audio.src}` );\n\t\t\t\t\tm_piResume();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn( `createAudioPool: unknown error - ${errorCode}` );\n\t\t\t\tm_piResume();\n\t\t\t}\n\t\t}\n\n\t\t// Wait until audio item is loaded\n\t\tif( retryCount === 3 ) {\n\t\t\tm_piWait();\n\t\t}\n\n\t\t// Wait until audio can play\n\t\taudio.addEventListener( \"canplay\", audioReady );\n\n\t\t// If audio has an error\n\t\taudio.addEventListener( \"error\", audioError );\n\t}\n\n\t// DELETEAUDIOPOOL - Delete audio pool and free resources\n\tpi._.addCommand( \"deleteAudioPool\", deleteAudioPool, false, false, [ \"audioId\" ] );\n\n\tfunction deleteAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `deleteAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop and cleanup all audio in pool\n\t\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\t\tconst poolItem = m_audioPools[ audioId ].pool[ i ];\n\t\t\tpoolItem.audio.pause();\n\t\t\tpoolItem.audio.src = \"\";\n\t\t\tclearTimeout( poolItem.timeout );\n\t\t}\n\n\t\tdelete m_audioPools[ audioId ];\n\t}\n\n\t// PLAYAUDIOPOOL - Play sound from audio pool\n\tpi._.addCommand( \"playAudioPool\", playAudioPool, false, false,\n\t\t[ \"audioId\", \"volume\", \"startTime\", \"duration\" ]\n\t);\n\n\tfunction playAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\t\tlet volume = args[ 1 ];\n\t\tlet startTime = args[ 2 ];\n\t\tlet duration = args[ 3 ];\n\n\t\t// Validate audioId\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `playAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\tconst audioItem = m_audioPools[ audioId ];\n\n\t\t// Validate volume\n\t\tif( volume == null ) {\n\t\t\tvolume = 1;\n\t\t}\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: volume needs to be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate startTime\n\t\tif( startTime == null ) {\n\t\t\tstartTime = 0;\n\t\t}\n\n\t\tif( isNaN( startTime ) || startTime < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: startTime needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_START_TIME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate duration\n\t\tif( duration == null ) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tif( isNaN( duration ) || duration < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"playAudioPool: duration needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DURATION\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Get the audio player\n\t\tconst poolItem = audioItem.pool[ audioItem.index ];\n\t\tconst audio = poolItem.audio;\n\n\t\t// Set the volume\n\t\taudio.volume = piData.volume * volume;\n\t\tpoolItem.volume = volume;\n\n\t\t// Set the start time of the audio\n\t\taudio.currentTime = startTime;\n\n\t\t// Stop the audio if duration specified\n\t\tif( duration > 0 ) {\n\t\t\tclearTimeout( poolItem.timeout );\n\t\t\tpoolItem.timeout = setTimeout( () => {\n\t\t\t\taudio.pause();\n\t\t\t\taudio.currentTime = 0;\n\t\t\t}, duration * 1000 );\n\t\t}\n\n\t\t// Play the sound\n\t\taudio.play();\n\n\t\t// Increment to next sound in the pool\n\t\taudioItem.index += 1;\n\t\tif( audioItem.index >= audioItem.pool.length ) {\n\t\t\taudioItem.index = 0;\n\t\t}\n\t}\n\n\t// STOPAUDIOPOOL - Stop audio pool playback\n\tpi._.addCommand( \"stopAudioPool\", stopAudioPool, false, false, [ \"audioId\" ] );\n\n\tfunction stopAudioPool( args ) {\n\t\tconst audioId = args[ 0 ];\n\n\t\t// If audioId not provided then stop all audio pools\n\t\tif( audioId == null ) {\n\t\t\tfor( const i in m_audioPools ) {\n\t\t\t\tfor( let j = 0; j < m_audioPools[ i ].pool.length; j++ ) {\n\t\t\t\t\tm_audioPools[ i ].pool[ j ].audio.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate audioId\n\t\tif( !m_audioPools[ audioId ] ) {\n\t\t\tconsole.warn( `stopAudioPool: audio ID ${audioId} not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop current audio pool\n\t\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\t\tm_audioPools[ audioId ].pool[ i ].audio.pause();\n\t\t}\n\t}\n\n\t// SOUND - Play tone by frequency using WebAudio\n\tpi._.addCommand( \"sound\", sound, false, false, [\n\t\t\"frequency\", \"duration\", \"volume\", \"oType\", \"delay\", \"attack\", \"decay\"\n\t] );\n\n\tfunction sound( args ) {\n\t\tlet frequency = Math.round( args[ 0 ] );\n\t\tlet duration = args[ 1 ];\n\t\tlet volume = args[ 2 ];\n\t\tlet oType = args[ 3 ];\n\t\tlet delay = args[ 4 ];\n\t\tlet attack = args[ 5 ];\n\t\tlet decay = args[ 6 ];\n\n\t\t// Validate frequency\n\t\tif( isNaN( frequency ) ) {\n\t\t\tconst error = new TypeError( \"sound: frequency needs to be an integer\" );\n\t\t\terror.code = \"INVALID_FREQUENCY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate duration\n\t\tif( duration == null ) {\n\t\t\tduration = 1;\n\t\t}\n\n\t\tif( isNaN( duration ) || duration < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: duration needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DURATION\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate volume\n\t\tif( volume == null ) {\n\t\t\tvolume = 1;\n\t\t}\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError( \"sound: volume needs to be a number between 0 and 1\" );\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate attack\n\t\tif( attack == null ) {\n\t\t\tattack = 0;\n\t\t}\n\n\t\tif( isNaN( attack ) || attack < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: attack needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ATTACK\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate delay\n\t\tif( delay == null ) {\n\t\t\tdelay = 0;\n\t\t}\n\n\t\tif( isNaN( delay ) || delay < 0 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"sound: delay needs to be a number equal to or greater than 0\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_DELAY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate decay\n\t\tif( decay == null ) {\n\t\t\tdecay = 0.1;\n\t\t}\n\n\t\tif( isNaN( decay ) ) {\n\t\t\tconst error = new TypeError( \"sound: decay needs to be a number\" );\n\t\t\terror.code = \"INVALID_DECAY\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Validate oType\n\t\tif( oType == null ) {\n\t\t\toType = \"triangle\";\n\t\t}\n\n\t\tlet waveTables = null;\n\n\t\t// Check for custom oType\n\t\tif( pi.util.isArray( oType ) ) {\n\t\t\tif(\n\t\t\t\toType.length !== 2 ||\n\t\t\t\toType[ 0 ].length === 0 ||\n\t\t\t\toType[ 1 ].length === 0 ||\n\t\t\t\toType[ 0 ].length !== oType[ 1 ].length\n\t\t\t) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"sound: oType array must be an array with two non empty \" +\n\t\t\t\t\t\"arrays of equal length\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_WAVE_TABLE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\twaveTables = [];\n\n\t\t\t// Look for invalid waveTable values\n\t\t\tfor( let i = 0; i < oType.length; i++ ) {\n\t\t\t\tfor( let j = 0; j < oType[ i ].length; j++ ) {\n\t\t\t\t\tif( isNaN( oType[ i ][ j ] ) ) {\n\t\t\t\t\t\tconst error = new TypeError( \"sound: oType array must only contain numbers\" );\n\t\t\t\t\t\terror.code = \"INVALID_WAVE_VALUE\";\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twaveTables.push( new Float32Array( oType[ i ] ) );\n\t\t\t}\n\n\t\t\toType = \"custom\";\n\t\t} else {\n\n\t\t\tif( typeof oType !== \"string\" ) {\n\t\t\t\tconst error = new TypeError( \"sound: oType needs to be a string or an array\" );\n\t\t\t\terror.code = \"INVALID_TYPE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// Non-custom types\n\t\t\tconst types = [ \"triangle\", \"sine\", \"square\", \"sawtooth\" ];\n\n\t\t\tif( types.indexOf( oType ) === -1 ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"sound: oType is not a valid type. oType must be \" +\n\t\t\t\t\t\"one of the following: triangle, sine, square, sawtooth\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_OSCILLATOR_TYPE\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Create an audio context if none exist\n\t\tif( !m_audioContext ) {\n\t\t\tconst context = window.AudioContext || window.webkitAudioContext;\n\t\t\tm_audioContext = new context();\n\t\t}\n\n\t\t// Calculate the stopTime\n\t\tconst stopTime = attack + duration + decay;\n\n\t\treturn piData.commands.createSound(\n\t\t\t\"sound\", m_audioContext, frequency, volume, attack, duration,\n\t\t\tdecay, stopTime, oType, waveTables, delay\n\t\t);\n\t}\n\n\t// CREATESOUND - Internal command to create WebAudio oscillator\n\tpi._.addCommand( \"createSound\", createSound, true, false, [] );\n\n\tfunction createSound(\n\t\tcmdName, audioContext, frequency, volume, attackTime, sustainTime,\n\t\tdecayTime, stopTime, oType, waveTables, delay\n\t) {\n\t\tconst oscillator = audioContext.createOscillator();\n\t\tconst envelope = audioContext.createGain();\n\t\tconst master = audioContext.createGain();\n\n\t\tmaster.gain.value = piData.volume;\n\n\t\toscillator.frequency.value = frequency;\n\t\tif( oType === \"custom\" ) {\n\t\t\tconst real = waveTables[ 0 ];\n\t\t\tconst imag = waveTables[ 1 ];\n\t\t\tconst wave = audioContext.createPeriodicWave( real, imag );\n\t\t\toscillator.setPeriodicWave( wave );\n\t\t} else {\n\t\t\toscillator.type = oType;\n\t\t}\n\n\t\tif( attackTime === 0 ) {\n\t\t\tenvelope.gain.value = volume;\n\t\t} else {\n\t\t\tenvelope.gain.value = 0;\n\t\t}\n\n\t\toscillator.connect( envelope );\n\t\tenvelope.connect( master );\n\t\tmaster.connect( audioContext.destination );\n\n\t\tconst currentTime = audioContext.currentTime + delay;\n\n\t\t// Set the attack\n\t\tif( attackTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ 0, volume ] ),\n\t\t\t\tcurrentTime,\n\t\t\t\tattackTime\n\t\t\t);\n\t\t}\n\n\t\t// Set the sustain\n\t\tif( sustainTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ volume, 0.8 * volume ] ),\n\t\t\t\tcurrentTime + attackTime,\n\t\t\t\tsustainTime\n\t\t\t);\n\t\t}\n\n\t\t// Set the decay\n\t\tif( decayTime > 0 ) {\n\t\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\t\tnew Float32Array( [ 0.8 * volume, 0.1 * volume, 0 ] ),\n\t\t\t\tcurrentTime + attackTime + sustainTime,\n\t\t\t\tdecayTime\n\t\t\t);\n\t\t}\n\n\t\toscillator.start( currentTime );\n\t\toscillator.stop( currentTime + stopTime );\n\n\t\tconst soundId = \"sound_\" + m_nextSoundId;\n\t\tm_nextSoundId += 1;\n\t\tm_soundPool[ soundId ] = {\n\t\t\t\"oscillator\": oscillator,\n\t\t\t\"master\": master,\n\t\t\t\"audioContext\": audioContext\n\t\t};\n\n\t\t// Delete sound when done\n\t\tsetTimeout( () => {\n\t\t\tdelete m_soundPool[ soundId ];\n\t\t}, ( currentTime + stopTime ) * 1000 );\n\n\t\treturn soundId;\n\t}\n\n\t// STOPSOUND - Stop WebAudio oscillator sound\n\tpi._.addCommand( \"stopSound\", stopSound, false, false, [ \"soundId\" ] );\n\n\tfunction stopSound( args ) {\n\t\tconst soundId = args[ 0 ];\n\n\t\t// If soundId not provided then stop all sounds\n\t\tif( soundId == null ) {\n\t\t\tfor( const i in m_soundPool ) {\n\t\t\t\tm_soundPool[ i ].oscillator.stop( 0 );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate soundId\n\t\tif( !m_soundPool[ soundId ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop current sound\n\t\tm_soundPool[ soundId ].oscillator.stop( 0 );\n\t}\n\n\t// SETVOLUME - Set global volume\n\tpi._.addCommand( \"setVolume\", setVolume, false, false, [ \"volume\" ] );\n\tpi._.addSetting( \"volume\", setVolume, false, [ \"volume\" ] );\n\n\tfunction setVolume( args ) {\n\t\tconst volume = args[ 0 ];\n\n\t\tif( isNaN( volume ) || volume < 0 || volume > 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setVolume: volume needs to be a number between 0 and 1\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_VOLUME\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.volume = volume;\n\n\t\t// Update all active sounds\n\t\tfor( const i in m_soundPool ) {\n\t\t\tif( volume === 0 ) {\n\n\t\t\t\t// Set to near zero exponentially\n\t\t\t\tm_soundPool[ i ].master.gain.exponentialRampToValueAtTime(\n\t\t\t\t\t0.01, m_soundPool[ i ].audioContext.currentTime + 0.1\n\t\t\t\t);\n\n\t\t\t\t// Set to zero one millisecond later\n\t\t\t\tm_soundPool[ i ].master.gain.setValueAtTime(\n\t\t\t\t\t0, m_soundPool[ i ].audioContext.currentTime + 0.11\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tm_soundPool[ i ].master.gain.exponentialRampToValueAtTime(\n\t\t\t\t\tvolume, m_soundPool[ i ].audioContext.currentTime + 0.1\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Update all audio pools\n\t\tfor( const i in m_audioPools ) {\n\t\t\tfor( const j in m_audioPools[ i ].pool ) {\n\t\t\t\tconst poolItem = m_audioPools[ i ].pool[ j ];\n\t\t\t\tpoolItem.audio.volume = piData.volume * poolItem.volume;\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - PLAY Module\n * \n * QBasic-style PLAY command for music notation.\n * Parses PLAY strings and generates notes using WebAudio.\n * \n * @module modules/play\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Note frequencies (A0-G#9)\n\tconst m_notesData = {\n\t\t\"A\": [ 27.50, 55.00, 110, 220, 440, 880, 1760, 3520, 7040, 14080 ],\n\t\t\"A#\": [ 29.14, 58.27, 116.541, 233.082, 466.164, 932.328, 1864.655, \n\t\t\t3729.31, 7458.62, 14917.24 ],\n\t\t\"B\": [ 30.87, 61.74, 123.471, 246.942, 493.883, 987.767, 1975.533, \n\t\t\t3951.066, 7902.132, 15804.264 ],\n\t\t\"C\": [ 16.35, 32.70, 65.41, 130.813, 261.626, 523.251, 1046.502, \n\t\t\t2093.005, 4186.009, 8372.018 ],\n\t\t\"C#\": [ 17.32, 34.65, 69.296, 138.591, 277.183, 554.365, 1108.731, \n\t\t\t2217.461, 4434.922, 8869.844 ],\n\t\t\"D\": [ 18.35, 36.71, 73.416, 146.832, 293.665, 587.33, 1174.659, \n\t\t\t2349.318, 4698.636, 9397.272 ],\n\t\t\"D#\": [ 19.45, 38.89, 77.782, 155.563, 311.127, 622.254, 1244.508, \n\t\t\t2489.016, 4978.032, 9956.064 ],\n\t\t\"E\": [ 20.60, 41.20, 82.407, 164.814, 329.628, 659.255, 1318.51, \n\t\t\t2637.021, 5274.042, 10548.084 ],\n\t\t\"F\": [ 21.83, 43.65, 87.307, 174.614, 349.228, 698.456, 1396.913, \n\t\t\t2793.826, 5587.652, 11175.304 ],\n\t\t\"F#\": [ 23.12, 46.25, 92.499, 184.997, 369.994, 739.989, 1479.978, \n\t\t\t2959.955, 5919.91, 11839.82 ],\n\t\t\"G\": [ 24.50, 49.00, 97.999, 195.998, 391.995, 783.991, 1567.982, \n\t\t\t3135.964, 6271.928, 12543.856 ],\n\t\t\"G#\": [ 25.96, 51.91, 103.826, 207.652, 415.305, 830.609, 1661.219, \n\t\t\t3322.438, 6644.876, 13289.752 ]\n\t};\n\n\t// Tracks storage\n\tlet m_tracks = {};\n\tlet m_allTracks = [];\n\tlet m_lastTrackId = 0;\n\tlet m_playData = [];\n\n\t// PLAY - Parse and play PLAY string\n\tpi._.addCommand( \"play\", play, false, false, [ \"playString\" ] );\n\n\tfunction play( args ) {\n\t\tlet playString = args[ 0 ];\n\n\t\tif( typeof playString !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"play: playString needs to be a string\" );\n\t\t\terror.code = \"INVALID_PLAY_STRING\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst trackId = createTrack( playString );\n\t\tif( !trackId ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tm_playData = [];\n\t\tplayTrack( trackId );\n\n\t\tm_playData.sort( ( a, b ) => a.time - b.time );\n\n\t\tconst AudioContextClass = window.AudioContext || window.webkitAudioContext;\n\t\tconst audioContext = new AudioContextClass();\n\t\t\n\t\tfor( let i = 0; i < m_playData.length; i++ ) {\n\t\t\tconst playData = m_playData[ i ];\n\t\t\tplayData.track.sounds.push(\n\t\t\t\tpiData.commands.createSound(\n\t\t\t\t\t\"play\", audioContext, playData.frequency, playData.volume,\n\t\t\t\t\tplayData.attackTime, playData.sustainTime, playData.decayTime,\n\t\t\t\t\tplayData.stopTime, playData.oType, playData.waveTables, playData.time\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction createTrack( playString ) {\n\n\t\t// Convert to uppercase and remove spaces\n\t\tplayString = playString.split( /\\s+/ ).join( \"\" ).toUpperCase();\n\n\t\tconst trackId = \"track_\" + m_lastTrackId;\n\t\tm_lastTrackId += 1;\n\n\t\t// Initialize track\n\t\tconst track = {\n\t\t\t\"id\": trackId,\n\t\t\t\"notes\": [],\n\t\t\t\"noteId\": 0,\n\t\t\t\"attackRate\": 0.1,\n\t\t\t\"decayRate\": 0.2,\n\t\t\t\"sustainRate\": 0.65,\n\t\t\t\"fullNote\": false,\n\t\t\t\"tempo\": 60 / 120,\n\t\t\t\"noteLength\": 0.25,\n\t\t\t\"pace\": 0.875,\n\t\t\t\"octave\": 4,\n\t\t\t\"volume\": 1,\n\t\t\t\"type\": \"triangle\",\n\t\t\t\"waveTables\": null,\n\t\t\t\"sounds\": []\n\t\t};\n\n\t\tm_tracks[ trackId ] = track;\n\t\tm_allTracks.push( { \"id\": trackId } );\n\n\t\t// Parse the play string and create notes in one pass\n\t\tlet i = 0;\n\n\t\twhile( i < playString.length ) {\n\t\t\tconst char = playString.charAt( i );\n\n\t\t\t// Notes (A-G with optional sharp/flat and length and dots)\n\t\t\tif( \"ABCDEFG\".indexOf( char ) !== -1 ) {\n\t\t\t\tlet note = char;\n\t\t\t\tlet length = null;\n\t\t\t\tlet dots = 0;\n\t\t\t\ti++;\n\n\t\t\t\t// Check for sharp or flat\n\t\t\t\tif( i < playString.length && \"#+- \".indexOf( playString.charAt( i ) ) !== -1 ) {\n\t\t\t\t\tif( playString.charAt( i ) !== \" \" ) {\n\t\t\t\t\t\tnote += playString.charAt( i );\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t// Check for length number\n\t\t\t\tlet lengthStr = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tlengthStr += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif( lengthStr ) {\n\t\t\t\t\tlength = parseFloat( lengthStr );\n\t\t\t\t}\n\n\t\t\t\t// Check for dots (dotted notes)\n\t\t\t\twhile( i < playString.length && playString.charAt( i ) === \".\" ) {\n\t\t\t\t\tdots++;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"note\",\n\t\t\t\t\t\"note\": note,\n\t\t\t\t\t\"length\": length,\n\t\t\t\t\t\"dots\": dots\n\t\t\t\t} );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Pause or Note by number\n\t\t\tif( \"PN\".indexOf( char ) !== -1 ) {\n\t\t\t\tconst cmd = char;\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\"type\": cmd === \"P\" ? \"pause\" : \"noteNum\",\n\t\t\t\t\t\t\"value\": parseInt( value )\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Music commands (M + subcommand)\n\t\t\tif( char === \"M\" ) {\n\t\t\t\ti++;\n\n\t\t\t\tif( i < playString.length ) {\n\t\t\t\t\tconst subCmd = playString.charAt( i );\n\n\t\t\t\t\t// ML, MN, MS, MF\n\t\t\t\t\tif( \"LNSF\".indexOf( subCmd ) !== -1 ) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tif( subCmd === \"L\" || subCmd === \"N\" || subCmd === \"S\" ) {\n\n\t\t\t\t\t\t\t// Music style\n\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\"type\": \"musicStyle\",\n\t\t\t\t\t\t\t\t\"value\": subCmd\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else if( subCmd === \"F\" ) {\n\n\t\t\t\t\t\t\t// Full note mode\n\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\"type\": \"fullNote\"\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// MA, MT, MD with number\n\t\t\t\t\tif( \"ATD\".indexOf( subCmd ) !== -1 ) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tlet value = \"\";\n\t\t\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( value ) {\n\t\t\t\t\t\t\tconst numValue = parseInt( value );\n\t\t\t\t\t\t\tif( numValue >= 0 && numValue <= 100 ) {\n\n\t\t\t\t\t\t\t\tlet noteType;\n\t\t\t\t\t\t\t\tif( subCmd === \"A\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"attackRate\";\n\t\t\t\t\t\t\t\t} else if( subCmd === \"T\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"sustainRate\";\n\t\t\t\t\t\t\t\t} else if( subCmd === \"D\" ) {\n\t\t\t\t\t\t\t\t\tnoteType = \"decayRate\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\t\t\"type\": noteType,\n\t\t\t\t\t\t\t\t\t\"value\": numValue / 100\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Octave, Length, Tempo (with numbers)\n\t\t\tif( \"OLT\".indexOf( char ) !== -1 ) {\n\t\t\t\tconst cmd = char;\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\tconst numValue = parseFloat( value );\n\n\t\t\t\t\tif( cmd === \"O\" && numValue >= 0 && numValue <= 7 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"octave\",\n\t\t\t\t\t\t\t\"value\": parseInt( numValue )\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else if( cmd === \"L\" && numValue > 0 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"length\",\n\t\t\t\t\t\t\t\"value\": numValue\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else if( cmd === \"T\" && numValue >= 32 && numValue <= 255 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"tempo\",\n\t\t\t\t\t\t\t\"value\": parseInt( numValue )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Volume\n\t\t\tif( char === \"V\" ) {\n\t\t\t\ti++;\n\n\t\t\t\tlet value = \"\";\n\t\t\t\twhile( i < playString.length && /\\d/.test( playString.charAt( i ) ) ) {\n\t\t\t\t\tvalue += playString.charAt( i );\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\tconst numValue = parseInt( value );\n\t\t\t\t\tif( numValue >= 0 && numValue <= 100 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"volume\",\n\t\t\t\t\t\t\t\"value\": numValue / 100\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Octave shortcuts\n\t\t\tif( char === \"<\" ) {\n\t\t\t\ttrack.notes.push( { \"type\": \"octaveDown\" } );\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( char === \">\" ) {\n\t\t\t\ttrack.notes.push( { \"type\": \"octaveUp\" } );\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Waveform types\n\t\t\tif( i + 6 <= playString.length && playString.substring( i, i + 6 ) === \"SQUARE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"square\"\n\t\t\t\t} );\n\t\t\t\ti += 6;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 4 <= playString.length && playString.substring( i, i + 4 ) === \"SINE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"sine\"\n\t\t\t\t} );\n\t\t\t\ti += 4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 8 <= playString.length && playString.substring( i, i + 8 ) === \"TRIANGLE\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"triangle\"\n\t\t\t\t} );\n\t\t\t\ti += 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif( i + 8 <= playString.length && playString.substring( i, i + 8 ) === \"SAWTOOTH\" ) {\n\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\"type\": \"waveform\",\n\t\t\t\t\t\"value\": \"sawtooth\"\n\t\t\t\t} );\n\t\t\t\ti += 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Custom wavetables [[n,n],[n,n]]\n\t\t\tif( char === \"[\" ) {\n\t\t\t\tlet token = \"\";\n\t\t\t\tlet depth = 0;\n\n\t\t\t\twhile( i < playString.length ) {\n\t\t\t\t\ttoken += playString.charAt( i );\n\t\t\t\t\tif( playString.charAt( i ) === \"[\" ) {\n\t\t\t\t\t\tdepth++;\n\t\t\t\t\t} else if( playString.charAt( i ) === \"]\" ) {\n\t\t\t\t\t\tdepth--;\n\t\t\t\t\t\tif( depth === 0 ) {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t// Parse wavetable\n\t\t\t\ttry {\n\t\t\t\t\tconst waveData = JSON.parse( token );\n\t\t\t\t\tif( pi.util.isArray( waveData ) && waveData.length === 2 ) {\n\t\t\t\t\t\ttrack.notes.push( {\n\t\t\t\t\t\t\t\"type\": \"wavetable\",\n\t\t\t\t\t\t\t\"value\": waveData\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} catch( e ) {\n\t\t\t\t\tconsole.warn( `play: Invalid wavetable format: ${token}` );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip spaces and unknown characters\n\t\t\ti++;\n\t\t}\n\n\t\treturn trackId;\n\t}\n\n\tfunction playTrack( trackId ) {\n\t\tconst track = m_tracks[ trackId ];\n\t\tif( !track || track.noteId >= track.notes.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet time = 0;\n\n\t\twhile( track.noteId < track.notes.length ) {\n\t\t\tconst cmd = track.notes[ track.noteId ];\n\n\t\t\tswitch( cmd.type ) {\n\t\t\t\tcase \"note\":\n\t\t\t\t\tconst frequency = getNoteFrequency( track, cmd.note );\n\t\t\t\t\tif( frequency > 0 ) {\n\t\t\t\t\t\tconst duration = getNoteDuration( track, cmd.length, cmd.dots );\n\t\t\t\t\t\tplayNote( track, frequency, time );\n\t\t\t\t\t\ttime += duration;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noteNum\":\n\n\t\t\t\t\t// Note by number (N0-N84)\n\t\t\t\t\tif( cmd.value > 0 && cmd.value < 85 ) {\n\t\t\t\t\t\tconst freq = m_allNotes[ cmd.value ];\n\t\t\t\t\t\tconst duration = getNoteDuration( track, null, 0 );\n\t\t\t\t\t\tplayNote( track, freq, time );\n\t\t\t\t\t\ttime += duration;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pause\":\n\n\t\t\t\t\t// Pause (P1-P64)\n\t\t\t\t\tconst pauseDuration = ( 4 / cmd.value ) * track.tempo;\n\t\t\t\t\ttime += pauseDuration;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octave\":\n\t\t\t\t\ttrack.octave = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octaveUp\":\n\t\t\t\t\tif( track.octave < 7 ) {\n\t\t\t\t\t\ttrack.octave++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"octaveDown\":\n\t\t\t\t\tif( track.octave > 0 ) {\n\t\t\t\t\t\ttrack.octave--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"length\":\n\t\t\t\t\ttrack.noteLength = 4 / cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tempo\":\n\t\t\t\t\ttrack.tempo = 60 / cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"volume\":\n\t\t\t\t\ttrack.volume = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"attackRate\":\n\t\t\t\t\ttrack.attackRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sustainRate\":\n\t\t\t\t\ttrack.sustainRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"decayRate\":\n\t\t\t\t\ttrack.decayRate = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fullNote\":\n\t\t\t\t\ttrack.fullNote = true;\n\t\t\t\t\ttrack.pace = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"waveform\":\n\t\t\t\t\ttrack.type = cmd.value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wavetable\":\n\n\t\t\t\t\t// Custom wavetable [[real],[imag]]\n\t\t\t\t\ttrack.waveTables = [\n\t\t\t\t\t\tnew Float32Array( cmd.value[ 0 ] ),\n\t\t\t\t\t\tnew Float32Array( cmd.value[ 1 ] )\n\t\t\t\t\t];\n\t\t\t\t\ttrack.type = \"custom\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"musicStyle\":\n\n\t\t\t\t\t// ML = legato (full note), MN = normal, MS = staccato (3/4 note)\n\t\t\t\t\tif( cmd.value === \"L\" ) {\n\t\t\t\t\t\ttrack.pace = 1;\n\t\t\t\t\t\ttrack.fullNote = true;\n\t\t\t\t\t} else if( cmd.value === \"N\" ) {\n\t\t\t\t\t\ttrack.pace = 0.875;\n\t\t\t\t\t\ttrack.fullNote = false;\n\t\t\t\t\t} else if( cmd.value === \"S\" ) {\n\t\t\t\t\t\ttrack.pace = 0.75;\n\t\t\t\t\t\ttrack.fullNote = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttrack.noteId++;\n\t\t}\n\t}\n\n\tfunction getNoteFrequency( track, note ) {\n\n\t\t// Handle sharp/flat\n\t\tnote = note.replace( /\\+/g, \"#\" );\n\t\tnote = note.replace( \"C-\", \"B\" );\n\t\tnote = note.replace( \"D-\", \"C#\" );\n\t\tnote = note.replace( \"E-\", \"D#\" );\n\t\tnote = note.replace( \"F-\", \"E\" );\n\t\tnote = note.replace( \"G-\", \"F#\" );\n\t\tnote = note.replace( \"A-\", \"G#\" );\n\t\tnote = note.replace( \"B-\", \"A#\" );\n\n\t\tconst noteData = m_notesData[ note ];\n\t\tif( !noteData ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst octave = track.octave;\n\t\tif( octave < 0 || octave >= noteData.length ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn noteData[ octave ];\n\t}\n\n\tfunction getNoteDuration( track, length, dots ) {\n\t\tif( length == null ) {\n\t\t\tlength = track.noteLength;\n\t\t} else {\n\t\t\tlength = 4 / length;\n\t\t}\n\n\t\tlet duration = length * track.tempo * track.pace;\n\n\t\t// Apply dotted note multipliers\n\t\tif( dots === 1 ) {\n\n\t\t\t// Single dot = 1.5x duration\n\t\t\tduration = duration * 1.5;\n\t\t} else if( dots === 2 ) {\n\n\t\t\t// Double dot = 1.75x duration\n\t\t\tduration = duration * 1.75;\n\t\t} else if( dots > 2 ) {\n\n\t\t\t// Multiple dots (each adds half of previous addition)\n\t\t\tlet multiplier = 1;\n\t\t\tlet addition = 0.5;\n\t\t\tfor( let i = 0; i < dots; i++ ) {\n\t\t\t\tmultiplier += addition;\n\t\t\t\taddition = addition / 2;\n\t\t\t}\n\t\t\tduration = duration * multiplier;\n\t\t}\n\n\t\treturn duration;\n\t}\n\n\tfunction playNote( track, frequency, time ) {\n\t\tconst volume = track.volume;\n\t\tconst interval = getNoteDuration( track, null, 0 );\n\t\tconst attackTime = interval * track.attackRate;\n\t\tconst sustainTime = interval * track.sustainRate;\n\t\tconst decayTime = interval * track.decayRate;\n\n\t\tlet stopTime;\n\t\tif( track.fullNote && attackTime + sustainTime + decayTime > interval ) {\n\t\t\tstopTime = interval;\n\t\t} else {\n\t\t\tstopTime = attackTime + sustainTime + decayTime;\n\t\t}\n\n\t\tconst soundData = {\n\t\t\t\"frequency\": frequency,\n\t\t\t\"volume\": volume,\n\t\t\t\"attackTime\": attackTime,\n\t\t\t\"sustainTime\": sustainTime,\n\t\t\t\"decayTime\": decayTime,\n\t\t\t\"stopTime\": stopTime,\n\t\t\t\"oType\": track.type,\n\t\t\t\"waveTables\": track.waveTables,\n\t\t\t\"time\": time,\n\t\t\t\"track\": track\n\t\t};\n\n\t\tm_playData.push( soundData );\n\t}\n\n\t// All note frequencies (N0-N84)\n\tconst m_allNotes = [\n\t\t0, 16.35, 17.32, 18.35, 19.45, 20.60, 21.83, 23.12, 24.50, 25.96, 27.50,\n\t\t29.14, 30.87, 32.70, 34.65, 36.71, 38.89, 41.20, 43.65, 46.25, 49.00,\n\t\t51.91, 55.00, 58.27, 61.74,\n\t\t65.406, 69.296, 73.416, 77.782, 82.407, 87.307, 92.499, 97.999,\n\t\t103.826, 110, 116.541, 123.471, 130.813, 138.591, 146.832, 155.563,\n\t\t164.814, 174.614, 184.997, 195.998, 207.652, 220, 233.082, 246.942,\n\t\t261.626, 277.183, 293.665, 311.127, 329.628, 349.228, 369.994, 391.995,\n\t\t415.305, 440, 466.164, 493.883, 523.251, 554.365, 587.33, 622.254,\n\t\t659.255, 698.456, 739.989, 783.991, 830.609, 880, 932.328, 987.767,\n\t\t1046.502, 1108.731, 1174.659, 1244.508, 1318.51, 1396.913, 1479.978,\n\t\t1567.982, 1661.219, 1760, 1864.655, 1975.533, 2093.005, 2217.461,\n\t\t2349.318, 2489.016, 2637.021, 2793.826, 2959.955, 3135.964, 3322.438,\n\t\t3520, 3729.31, 3951.066, 4186.009, 4434.922, 4698.636, 4978.032,\n\t\t5274.042, 5587.652, 5919.91, 6271.928, 6644.876, 7040, 7458.62,\n\t\t7902.132, 8372.018, 8869.844, 9397.272, 9956.064, 10548.084, 11175.304,\n\t\t11839.82, 13289.752, 14080, 14917.24, 15804.264\n\t];\n\n\t// STOPPLAY - Stop playing music\n\tpi._.addCommand( \"stopPlay\", stopPlay, false, false, [ \"trackId\" ] );\n\n\tfunction stopPlay( args ) {\n\t\tconst trackId = args[ 0 ];\n\n\t\t// Stop all tracks\n\t\tif( trackId === null || trackId === undefined ) {\n\t\t\tfor( let i = 0; i < m_allTracks.length; i++ ) {\n\t\t\t\tconst track = m_tracks[ m_allTracks[ i ].id ];\n\t\t\t\tif( track ) {\n\t\t\t\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\t\t\t\tconst sound = track.sounds[ j ];\n\t\t\t\t\t\tpiData.commands.stopSound( [ sound ] );\n\t\t\t\t\t}\n\t\t\t\t\tdelete m_tracks[ m_allTracks[ i ].id ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tm_allTracks = [];\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop specific track\n\t\tif( m_tracks[ trackId ] ) {\n\t\t\tconst track = m_tracks[ trackId ];\n\t\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\t\tconst sound = track.sounds[ j ];\n\t\t\t\tpiData.commands.stopSound( [ sound ] );\n\t\t\t}\n\t\t\tremoveTrack( trackId );\n\t\t}\n\t}\n\n\tfunction removeTrack( trackId ) {\n\t\tfor( let i = 0; i < m_allTracks.length; i++ ) {\n\t\t\tif( m_allTracks[ i ].id === trackId ) {\n\t\t\t\tm_allTracks.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tdelete m_tracks[ trackId ];\n\t}\n}\n\n", "/**\n * Pi.js - DRAW Command Module\n * \n * QBasic-style turtle graphics using draw strings\n * Commands: U/D/L/R (directions), E/F/G/H (diagonals), C (color),\n *           M (move), T (turn), B (blind), N (return), P/S (paint), A (arc)\n * \n * @module modules/draw\n */\n\n\"use strict\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// DRAW - QBasic-style turtle graphics\n\tpi._.addCommand( \"draw\", draw, false, true, [ \"drawString\" ] );\n\n\tfunction draw( screenData, args ) {\n\t\tlet drawString = args[ 0 ];\n\n\t\tif( typeof drawString !== \"string\" ) {\n\t\t\tconst error = new TypeError( \"draw: drawString must be a string\" );\n\t\t\terror.code = \"INVALID_DRAW_STRING\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Convert to uppercase\n\t\tdrawString = drawString.toUpperCase();\n\n\t\t// Extract colors (e.g., C#FF0000)\n\t\tconst tempColors = drawString.match( /(#[A-Z0-9]+)/g );\n\t\tif( tempColors ) {\n\t\t\tfor( let i = 0; i < tempColors.length; i++ ) {\n\t\t\t\tdrawString = drawString.replace( \"C\" + tempColors[ i ], \"O\" + i );\n\t\t\t}\n\t\t}\n\n\t\t// Convert TA to T\n\t\tdrawString = drawString.replace( /(TA)/gi, \"T\" );\n\n\t\t// Remove spaces\n\t\tdrawString = drawString.split( /\\s+/ ).join( \"\" );\n\n\t\t// Regular expression for the draw commands\n\t\tconst reg = /(?=C|C#|R|B|F|G|L|A|T|D|G|H|U|E|N|M|P|S)/;\n\n\t\t// Split into separate commands\n\t\tconst parts = drawString.split( reg );\n\n\t\t// This triggers a move back after drawing the next command\n\t\tlet isReturn = false;\n\n\t\t// Store the last cursor\n\t\tlet lastCursor = {\n\t\t\t\"x\": screenData.x,\n\t\t\t\"y\": screenData.y,\n\t\t\t\"angle\": 0\n\t\t};\n\n\t\t// Move without drawing\n\t\tlet isBlind = false;\n\n\t\t// Arc mode\n\t\tlet isArc = false;\n\n\t\tfor( let i = 0; i < parts.length; i++ ) {\n\t\t\tconst drawArgs = parts[ i ].split( /(\\d+)/ );\n\n\t\t\tswitch( drawArgs[ 0 ] ) {\n\n\t\t\t\t// C - Change Color\n\t\t\t\tcase \"C\":\n\t\t\t\t\tconst color = Number( drawArgs[ 1 ] );\n\t\t\t\t\tscreenData.screenObj.setColor( color );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"O\":\n\t\t\t\t\tconst colorStr = tempColors[ drawArgs[ 1 ] ];\n\t\t\t\t\tscreenData.screenObj.setColor( colorStr );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// D - Down\n\t\t\t\tcase \"D\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 90 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// E - Up and Right\n\t\t\t\tcase \"E\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 315 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// F - Down and Right\n\t\t\t\tcase \"F\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 45 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// G - Down and Left\n\t\t\t\tcase \"G\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 135 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// H - Up and Left\n\t\t\t\tcase \"H\": {\n\t\t\t\t\tlet len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 225 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// L - Left\n\t\t\t\tcase \"L\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 180 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// R - Right\n\t\t\t\tcase \"R\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 0 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// U - Up\n\t\t\t\tcase \"U\": {\n\t\t\t\t\tconst len = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle = pi.util.degreesToRadian( 270 ) + screenData.angle;\n\t\t\t\t\tscreenData.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\t\tscreenData.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// P - Paint\n\t\t\t\t// S - Paint with boundary color\n\t\t\t\tcase \"P\":\n\t\t\t\tcase \"S\": {\n\t\t\t\t\tconst color1 = pi.util.getInt( drawArgs[ 1 ], 0 );\n\t\t\t\t\tscreenData.screenObj.paint(\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y,\n\t\t\t\t\t\tcolor1,\n\t\t\t\t\t\tdrawArgs[ 0 ] === \"S\"\n\t\t\t\t\t);\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// A - Arc Line\n\t\t\t\tcase \"A\": {\n\t\t\t\t\tconst radius = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tconst angle1 = pi.util.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\t\tconst angle2 = pi.util.getInt( drawArgs[ 5 ], 1 );\n\t\t\t\t\tisArc = true;\n\n\t\t\t\t\t// Store arc parameters for next draw\n\t\t\t\t\tscreenData._arcParams = { radius, angle1, angle2 };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// TA/T - Turn Angle\n\t\t\t\tcase \"T\":\n\t\t\t\t\tscreenData.angle = pi.util.degreesToRadian(\n\t\t\t\t\t\tpi.util.getInt( drawArgs[ 1 ], 1 )\n\t\t\t\t\t);\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// M - Move to absolute position\n\t\t\t\tcase \"M\":\n\t\t\t\t\tscreenData.x = pi.util.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\t\tscreenData.y = pi.util.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\t\tisBlind = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tisBlind = true;\n\t\t\t}\n\n\t\t\t// Draw line or arc from last position to current position\n\t\t\tif( !isBlind ) {\n\t\t\t\tif( isArc && screenData._arcParams ) {\n\t\t\t\t\tconst arc = screenData._arcParams;\n\t\t\t\t\tscreenData.screenObj.arc(\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y,\n\t\t\t\t\t\tarc.radius,\n\t\t\t\t\t\tarc.angle1,\n\t\t\t\t\t\tarc.angle2\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tscreenData.screenObj.line(\n\t\t\t\t\t\tlastCursor.x,\n\t\t\t\t\t\tlastCursor.y,\n\t\t\t\t\t\tscreenData.x,\n\t\t\t\t\t\tscreenData.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tisBlind = false;\n\t\t\tisArc = false;\n\n\t\t\t// Handle return (N command)\n\t\t\tif( isReturn ) {\n\t\t\t\tisReturn = false;\n\t\t\t\tscreenData.x = lastCursor.x;\n\t\t\t\tscreenData.y = lastCursor.y;\n\t\t\t\tscreenData.angle = lastCursor.angle;\n\t\t\t}\n\n\t\t\t// Check for N (return after next command)\n\t\t\tif( drawArgs[ 0 ] === \"N\" ) {\n\t\t\t\tisReturn = true;\n\t\t\t} else {\n\t\t\t\tlastCursor = {\n\t\t\t\t\t\"x\": screenData.x,\n\t\t\t\t\t\"y\": screenData.y,\n\t\t\t\t\t\"angle\": screenData.angle\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// B command triggers blind mode for next move\n\t\t\tif( drawArgs[ 0 ] === \"B\" ) {\n\t\t\t\tisBlind = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "/**\r\n * Pi.js - Built-in Font Data\r\n * \r\n * Base32-encoded pixel fonts for retro-style text rendering.\r\n * \r\n * @module assets/font-data\r\n */\r\n\r\n\"use strict\";\r\n\r\nexport function loadBuiltInFonts( pi ) {\r\n\t// Font 0: 6x6\r\n\tpi.loadFont(\r\n\t\t\"0,14004,2602800,oidnrt,3po8cff,3vnhgs4,1uv77og,3hpuv70,73g00,3vjgoef,3o00000,0,71ji,k9o000,1sg,1ogoc3p,jp4ir8,19fvt51,31ovfn3,cevfh,31vrooc,1tv52h8,2g0kula,2d2hcsp,8r2jg0,3vvvj,f33opv,8efh0g,3ho84fj,2200idv,2c40237,3r4g000,87000i,3vv901h,3jptvvv,3vnjpsc,0,g8420,22h800,57p9,3p80ea7,237000i,889019,111cc02,0,88420g,g4211,28oc,140011o,1000000,11000,1s00000,400,3333100,sjam9o,1g8423,203i888,1s060ho,hg0654,2fgg1sg,1o2e01p,3p4e07,211hgg0,oi64hg,1h4e13,31g0c,o00100,gg444,41000v,v0010,1088803,2110080,sqb41o,1h4if4,20729oi,1o07421,1o0s94,19701sg,1sgf03p,3p0g03,384p4c0,14if4i8,1o8423,201o84i,s04ihg,2h40842,43o12r,1ul8g25,2blej03,28ka4s0,s97i10,1h4ib3,10729oi,140321g,ho0v21,21014i,14i6025,a4k404,1al9ok0,12a22i4,24k421,7g8og,1s06210,21g1gc3,30g0c2,42300g,2g00000,1v,o40000,1o2f3,10210s9,s003i1,1o0211,251g00c,14s700g,23gg800,6kjo4s,ge4i94,8021,g04,1884218,3180421,21000a,1ul8g01,3294i00,64i8o0,c5310,200ca30,2102ok8,g003j0,3jo0023,221000i,14i6g00,24k400,8lbsk0,a2118,14i70,2e01s44,u02230,20g0630,31g082,622019,1000001,74a5u0,sg83go,3i80i93,30110oi,1oe22jg,joqh07,17hlg4,1o2f39g,33g4u6j,2841o66,gkc971,34g0oie,e411h4,3gsi030,211osh6,423hg0,1g84720,230g8e9,c94jp4,1goi97i,133p0u8,u06pmr,1sjf94j,34i8c93,94hg0c,14i604l,3inbvgk,2603ooc,1tdvstn,3phsif4,2prfurv,2qc67i1,3ooe4n,42rp8k,gs473h,jh8ua3,561igo,ggc231,30gg842,e110oi,14c2229,i8o887,94i9si,1km94jh,301s003,2703o00,40108,3g000f4,u,40g951,108d0kc,630gg0,g84000,2a8i000,92a800,1404g28,2mkll5,1lbfvdv,2rv210g,10g8421,u10g9s,84u118,2hbka50,7oka,1s217g,11bka5e,252h8ka,ka0fg8,n8kat0,21fg0ka,lu000j,30g9s00,7g84,8421o0,g84vg,1v,84210g,1og8000,vg0084,9v210g,1og8722,252hcka,kb421s,u842,352nc00,3u00fo0,7cka5i,42p81v,vg1b,2o01r51,vg03u0,ka5fo0,3u00f,320001v,ka52h8,3o0043h,21o007,843h00,ua52,252nska,9v217s,10g84u0,7,84vvvv,3vvu000,vvvtgo,1goc60o,1goc63f,3vvo000,2e53g,hp5upf,287i90g,10g003s,2h81uh4,44no00,1ska200,18s880,etgg84,1sc94hh,3hh4u94,267k631,15jfk3p,2i9s0fb,1f0004u,2iuo01p,221so70,64i94i,3u0vg7s,gs40,e01088,1o0020g,23g0452,421042,425110,3g0800,5500kk,oi6000,400,c,1gg,12go062,252g1o2,88f000,1ose00\",\r\n\t\t6, 6, null, true\r\n\t);\r\n\r\n\t// Font 1: 6x8 (default)\r\n\tpi.loadFont(\r\n\t\t\"0,ugs,3gvtm2u,1tvmss7,vtskvf,2v710g0,g8efjg,21008e2,vfl8gs,g8e77p,311o003,f7hg00,3vvpoc7,vvu045,h8igg0,3v1mrdm,3efu71h,1ep4i8o,oi94hg,33oof4j,34233hg,u97i95,cq08mn,2pspiqc,21gsfn3,400233,2v3go40,gsv213,3jggka5,a50180,1val6h8,2h80e9j,94hj4s,3p,3jo08ef,24fjghv,gsvah0,2100842,lfjgg0,82fgg,2000044,v41000,8421,3g00098,1voa800,8477r,3g000vf,2e21000,0,8e7,4200g0,18ka000,kaf,2afih80,gug70b,33000p9,442ac0,gk4aki,1380844,0,ggg841,100g41,211100,k4fh1,1000021,fh0g00,0,2110000,f00000,0,210000g,2222200,1p2jamb,jg08ca,4213s0,1p21332,no0sh0,260k9o0,8ca97o,11o1ug8,u0k9o0,oggf4a,jg1uh1,442100,1p2h74a,jg0sh8,2f0g9o0,84000,2100042,10gg,888820,20g000f,2007o00,10820gg,2200sh0,22200g0,1p2nalq,3g08a8,2hfka40,3oi9729,ng0c98,g828o0,3oi94i9,ng1u94,e42bs0,3si8721,700c98,g9i8s0,252hfka,k80s42,4211o0,s4214i,1301ia5,c52j60,3gg8421,no12ra,2l8ka40,25il9ka,k80sh8,2h8k9o0,3oi9721,700sh8,2h8l9o3,3oi9731,1680sh8,e0k9o0,3ta4210,23g12h8,2h8k9o0,252h8k9,11012h8,2lal980,24ka22h,14812h5,4211o0,3t22222,no1og8,g843g0,210820g,g41o42,4213g0,gkh8g0,0,1v,g82000,7,17k9u0,30g8539,lg0007,h849o0,c216kq,1jc0007,hfk1o0,oi8e21,700006,2h8jo5s,30ga6i9,m80806,4211o0,4030ga,k9pg84,2a62h40,1g84210,23g000d,lalak0,mcka,k80007,h8k9o0,u4i9,323g006,2i93g8e,r6i1,700007,2g70bo0,10gu421,hg0008,2h8kpk0,h8k9,1100008,2lal980,h511,1480008,2h8jo5s,v111,7o0642,o210c0,g84010,2101g42,321300,15c0000,45,h8kbs0,1p2g8jg,309o0i0,i94hs0,o0e8nq,3g0sh6,274hs0,240c13i,13o0o06,274hs0,g0c13i,13o0007,g83gcc,1p2e8nq,3g1207,hfk1o0,1g0e8nq,3g1406,4211o0,1p2c210,23g0o06,4211o0,248a8nq,k80840,e8nq40,c0v43h,7o000c,267khk0,skifki,14o08a0,e8k9o0,12074a,jg0g40,e8k9o0,gk08ka,jg0g40,h8k9o0,1208k9,3g9p245,h8igg0,240h8ka,jg0847,2g83og8,oi8e22,ng12af,24fh0g0,3ome4it,if4c52,e212go,o0c13i,13o0c06,4211o0,88074a,jg0022,h8k9o0,1lc0f4a,k80qj0,pakq40,1p4i7g3,3g00oi9,c07g00,g04442,jg0000,v84000,fg8,g00iq6,r5cecv,15kbdiq,3s84080,842100,aaa2g,2g000k5,555000,1348p26,1268ll5,1l5d9ba,3ctreup,3erm842,4210g8,g84270,210g84e,4e10g8,ka52n8,2h8k000,fh8ka,s270,210ga5e,21eh8ka,ka52h8,2h8k00f,21eh8ka,kat0no,a52,25fg000,g8s270,0,e10g8,g8421s,842,4fo000,7s,210g842,43p0g8,7s,842,4fp0g8,g87i1s,210ga52,252p8ka,ka5i1s,3,342p8ka,katg7s,f,30ep8ka,ka5i1c,2h8k00f,30fo000,katg7c,2h8k84f,30fo000,ka52ns,f,30fp0g8,7s,2h8ka52,253o000,g87i1s,3,343p0g8,1s,2h8ka52,25fp8ka,g8vi7s,210g842,4e0000,1s,210hvvv,3vvvvvv,7v,3vvvose,se73ho,e73hos,1osfvvv,3vg0000,cqki,2i400e8,2u8ni10,1uh842,4000fq,252h8k0,3t28322,no0007,2ka5100,i94jl,2200cp,2210g80,3s8e8k9,313sc98,1voa8o0,oigoa9,mc0e83,f8c5s0,impdd,g00117,2iqbp10,oggf41,1g0sh8,2h8ka40,v07o1,3o0084f,24203s0,g41110,7o0888,8203s0,c94i10,210g842,4252go,oc0fo0,31g00cp,206co00,oi9300,0,630000,1g,721,216h8c,3h4i94g,oi2,8f0000,e73h,3000000\",\r\n\t\t6, 8, null, true\r\n\t);\r\n\r\n\t// Font 2: 8x8\r\n\tpi.loadFont(\r\n\t\t\"0,0,1v839c1,2upj0bu,1vfvmvv,31ufvru,1mftvnu,1u3g400,83gv7u,1u3g400,s7oe7u,3v7oe3s,810e3s,3v7oe3s,61s,u1g000,3vvvpu3,31ufvvv,3opi2,116cf00,3vs76dt,2upjgvv,7ge3rt,36cpj3o,u6cpj6,u1gvgo,vj6fpg,o71s70,1vm6vr3,1hmfpm0,2clkf77,3jjomkp,20e1u7u,3se1000,10sfnu,v0s0g0,c3ovgo,c7sf0o,1j6cpj6,1j00pg0,1vtnmrr,dhm6o0,v66e3c,1m3hj3o,0,1v7svg0,c3ovgo,1v3o67v,c3ovgo,c1g600,c1g60o,1v3o600,1g37u,61g000,30o7u,1g30000,1g60,30fs000,28pnv,1j28000,1gf3u,3vvu000,fvvru,u1g000,0,0,o7gu1g,o00c00,1m6or00,0,1m6pvjc,3v6or00,o7pg3o,6fgc00,cdj0o,o6dhg0,s6oe3m,3ecotg0,1g61g00,0,c30o30,1g30600,1g3060o,c30o00,6cf7v,u6c000,30c7s,o30000,0,30c30,7s,0,0,30c00,30o61g,1gc1000,1ucdjmu,3recv00,o70c1g,o31v00,1sco31o,1gcpv00,1sco31o,6cou00,e3or6c,3v0o7g0,3uc1u0c,6cou00,s61g7o,36cou00,3uco30o,o30c00,1scpj3o,36cou00,1scpj3s,61gs00,30c00,30c00,30c00,30c30,c30o60,1g30600,1v00,fo000,1g3060c,c30o00,1sco30o,o00c00,1ucdnmu,3fc0u00,o7hj6c,3ucpj00,3u6cpjs,1j6dv00,u6dg60,306cf00,3s6opj6,1j6pu00,3v64q3o,1k65vg0,3v64q3o,1k61s00,u6dg60,376cfg0,36cpj7s,36cpj00,1s30c1g,o30u00,f0o30c,36cou00,3j6cr3o,1m6dpg0,3o60o30,1h6dvg0,33etvnu,3bcdhg0,33edtmu,37cdhg0,s6phm6,336oe00,3u6cpjs,1g61s00,1scpj6c,3e7g700,3u6cpjs,1m6dpg0,1scpo3g,ecou00,3ub8c1g,o30u00,36cpj6c,36cpv00,36cpj6c,367gc00,33cdhmm,3vethg0,33ccr1o,s6phg0,36cpj3o,o30u00,3vcd30o,p6dvg0,1s60o30,1g60u00,3060c0o,60c0g0,1s1g60o,c1gu00,83gr66,0,0,7v,o30600,0,u0c,1ucotg0,3g60o3s,1j6dn00,u6c,30cou00,e0o33s,36cotg0,u6c,3uc0u00,s6oo7g,1g61s00,tmc,367o37o,3g60r3m,1j6dpg0,o00s1g,o30u00,60030c,6cpj3o,3g60pjc,1s6ppg0,1o30c1g,o30u00,1j7u,3vddhg0,1u6c,36cpj00,u6c,36cou00,1n36,1j7oo7g,tmc,367o30u,1n3m,1j61s00,v60,1s0pu00,830v1g,o38600,1j6c,36cotg0,1j6c,367gc00,1hmm,3vfsr00,1hjc,s6phg0,1j6c,367o37o,1v4o,o69v00,e30c70,o30700,c1g600,c1g600,3g30c0s,o31o00,1rdo000,0,10e3c,33cdvg0,1scpg6c,1s1g33o,co06c,36covg0,e00u6c,3uc0u00,1vc6f06,v6cfo0,3600u0c,1ucovg0,3g00u0c,1ucovg0,o30u0c,1ucovg0,u60,307g31o,1vc6f36,1v60f00,3600u6c,3uc0u00,3g00u6c,3uc0u00,3600s1g,o30u00,1ucce0o,c1gf00,3g00s1g,o30u00,333gr66,3vcdhg0,o3003o,36fpj00,e01v30,1s61v00,voc,1vsovo0,v6pj7u,36cpjg0,1sco03o,36cou00,co03o,36cou00,e003o,36cou00,1sco06c,36covg0,e006c,36covg0,co06c,367o37o,31hgf36,1j3o600,3601j6c,36cou00,c1gvm0,307s60o,s6op7g,1gedv00,36cou7s,ofoc1g,3scpj7q,33cvhm7,71m61s,c1hm3g,e00u0c,1ucovg0,s00s1g,o30u00,1o03o,36cou00,1o06c,36covg0,fg07o,36cpj00,3u01j7c,3udpj00,u6or1u,7s000,s6or1o,7o000,o00c30,30cou00,7s,30c0000,7s,60o000,31sdj6u,pmdj0f,31sdj6r,rmvjo3,c1g00o,c1g600,36pmc,1j36000,cophj,1jco000,h8g8k8,h8g8k8,1aqklda,1aqklda,3dnfmve,3dnfmve,c1g60o,c1g60o,c1g60o,3s1g60o,c1hu0o,3s1g60o,r3cdhm,3r3cdhm,0,3v3cdhm,1u0o,3s1g60o,r3dtg6,3r3cdhm,r3cdhm,r3cdhm,1vg6,3r3cdhm,r3dtg6,3v00000,r3cdhm,3v00000,c1hu0o,3s00000,0,3s1g60o,c1g60o,fg0000,c1g60o,3vg0000,0,3vhg60o,c1g60o,fhg60o,0,3vg0000,c1g60o,3vhg60o,c1g7oo,fhg60o,r3cdhm,rjcdhm,r3cdpg,vg0000,fpg,rjcdhm,r3dto0,3vg0000,1vo0,3rjcdhm,r3cdpg,rjcdhm,1vo0,3vg0000,r3dto0,3rjcdhm,c1hvo0,3vg0000,r3cdhm,3vg0000,1vo0,3vhg60o,0,3vjcdhm,r3cdhm,vg0000,c1g7oo,fg0000,7oo,fhg60o,0,vjcdhm,r3cdhm,3vjcdhm,c1hvoo,3vhg60o,c1g60o,3s00000,0,fhg60o,3vvvvvv,3vvvvvv,0,3vvvvvv,3of1s7g,3of1s7g,7gu3of,7gu3of,3vvvvvv,0,tms,34dotg0,7hj7o,36fhg60,fpj60,30c1g00,fsr3c,1m6or00,3ucoo1g,1gcpv00,vmo,3cdgs00,6cpj6,1j7oo60,7dn0o,c1g600,3u30u6c,367gc7s,s6phnu,336oe00,s6phm6,1m6prg0,e3063s,36cou00,vmr,3dns000,30ovmr,3dnso60,s61g7o,3060e00,1scpj6c,36cpj00,fo07s,fo000,o31v1g,o01v00,1g3061g,1g01v00,c30o1g,c01v00,71m6oo,c1g60o,c1g60o,cdhm3g,o3007s,30c00,7dn00,1rdo000,s6or1o,0,o,c00000,0,c00000,7go30c,3m6of0s,1s6or3c,1m00000,1o1gc30,1s00000,f1s,u3o000\",\r\n\t\t6, 8, null, true\r\n\t);\r\n\r\n\t// Font 3: 8x14\r\n\tpi.loadFont(\r\n\t\t\"0,0,0,0,1v839c1,20rr6c1,1v00000,vnv,3dvvvu3,3jvuvg0,0,6pvnu,3vfsv1o,800000,g,s7pvjs,s10000,0,c3of77,3jue60o,u00000,61s,1vfvvru,c1gf00,0,o,u3o600,0,3vvvvvv,3vufgu3,3jvvvvv,3vvu000,f36,1144phs,0,3vvvvvv,31pjfdt,2cs7vvv,3vvu000,f0s6hi,1scpj6c,1s00000,f36,1j6cf0o,1v1g600,0,vj6fpg,o30s7g,3g00000,vr3,1vm6or3,1jufpm0,0,c1hmps,3jjpmoo,c00000,1060,3gfhvno,3gc1000,0,10c3hu,3v3s3g6,100000,61s,1v1g60o,1v3o600,0,1j6cpj6,1j6c036,1j00000,vur,3dtmuor,dhm6o0,3s,3360e3c,33ccr1o,6ccv00,0,0,3vftvg0,0,c3ovgo,c1gvhs,c7s000,61s,1v1g60o,c1g600,0,c1g60o,c1gvhs,c00000,0,c0pvgc,c00000,0,c30,3v60c00,0,0,c1g60,3v00000,0,a3c,3v6oa00,0,g,s3gv3s,3vfs000,0,ftvjs,1u3ge0g,0,0,0,0,0,c3of1s,c1g00o,c00000,6cpj6,i00000,0,0,1m6pvjc,1m6pvjc,1m00000,c1gv66,31c0v06,23ccv0o,c00000,1gm6,61gc36,3300000,e3c,1m3gtms,36cotg0,1g,o30o00,0,0,30o,o30c1g,o1g300,0,o1g30c,60o30o,o00000,0,1j3pvps,1j00000,0,60o,1v1g600,0,0,0,c1g61g,0,0,3v00000,0,0,0,1g600,0,10c30o,o61g40,0,v66,37dttn6,33ccv00,0,c3gu0o,c1g60o,1v00000,v66,30o61g,1gcdvg0,0,1ucc1g6,u0c1m6,1u00000,30s,u6pj7u,60o7g0,0,3vc1g60,3u0c1m6,1u00000,e30,30c1v66,33ccv00,0,3vcc1gc,c30c1g,o00000,v66,33ccv66,33ccv00,0,1ucdhm6,1v0c1gc,1s00000,o,c00000,c1g000,0,1g600,60o,o00000,1gc,c30o1g,c0o1g0,0,3u,vg0,0,o1g,c0o1gc,c30o00,0,1ucdhgc,c1g00o,c00000,v66,33dtnmu,3ec0v00,0,83gr66,33fthm6,3300000,1v36,1j6cv36,1j6dv00,0,u6dgm0,30c1gj6,u00000,1u3c,1j6cpj6,1j6pu00,0,3v6coj8,1s6goj6,3v00000,1vj6,1h6gu38,1g61s00,0,u6dgm0,30dthj6,t00000,1hm6,33cdvm6,33cdhg0,0,u1g60o,c1g60o,u00000,7gc,60o30c,36cou00,0,3j6cr3c,1s6or36,3j00000,1s30,1g60o30,1h6dvg0,0,33etvnu,3bcdhm6,3300000,1hn6,3rftnme,33cdhg0,0,s6phm6,33cdhjc,s00000,1v36,1j6cv30,1g61s00,0,1ucdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6dpg0,0,1ucdhj0,s0phm6,1u00000,vju,1d1g60o,c1gf00,0,33cdhm6,33cdhm6,1u00000,1hm6,33cdhm6,1m3g400,0,33cdhm6,3bddvjs,1m00000,1hm6,1m3ge1o,1mcdhg0,0,1j6cpj6,u1g60o,u00000,1vm6,261gc30,31cdvg0,0,u30c1g,o30c1g,u00000,1060,3g70e0s,70c0g0,0,u0o30c,60o30c,u00000,83gr66,0,0,0,0,0,1vo0,o30600,0,0,0,3o,67pj6c,1r00000,1o30,1g7gr36,1j6cv00,0,3s,33c1g66,1u00000,70c,63or6c,36cotg0,0,3s,33ftg66,1u00000,e3c,1i61s30,1g61s00,0,3m,36cpj3s,6cou00,1o30,1g6otj6,1j6dpg0,0,c1g01o,c1g60o,u00000,1g6,s1g6,30cpj6,u00000,3g60o36,1m7gr36,3j00000,e0o,c1g60o,c1gf00,0,7c,3vddlmm,3300000,0,dopj6,1j6cpg0,0,3s,33cdhm6,1u00000,0,dopj6,1j7oo30,3o00000,3m,36cpj3s,60o7g0,0,dotj6,1g61s00,0,3s,3370766,1u00000,41g,ofoc1g,o3c700,0,6c,36cpj6c,1r00000,0,6cpj6,1j3o600,0,66,33ddlnu,1m00000,0,ccr1o,s6phg0,0,66,33cdhju,30pu00,0,ftj0o,o6dvg0,0,71g60o,1o1g60o,700000,60o,c1g00o,c1g600,0,1o1g60o,71g60o,1o00000,tms,0,0,0,41o,1mcdhnu,0,f36,31c1g62,1j3o306,1u00000,36co06c,36cpj6c,1r00000,o61g,7phnu,30ccv00,g,s6o03o,67pj6c,1r00000,1j6c,7g33s,36cotg0,30,o1g03o,67pj6c,1r00000,3gr1o,7g33s,36cotg0,0,f36,1g6cf0c,33o000,10e3c,7phnu,30ccv00,0,36co03s,33ftg66,1u00000,60c0o,7phnu,30ccv00,0,1j6c01o,c1g60o,u00000,1gf36,3g60o,c1gf00,30,o1g01o,c1g60o,u00000,cdhgg,s6phm6,3vcdhg0,e3c,s00e3c,33cdvm6,3300000,c30o00,3v6co3s,1g6dvg0,0,1j3m,r7tm6o,1n00000,fjc,36cpvmc,36cpjg0,g,s6o03s,33cdhm6,1u00000,1hm6,7phm6,33ccv00,30,o1g03s,33cdhm6,1u00000,30u6c,cpj6c,36cotg0,30,o1g06c,36cpj6c,1r00000,1hm6,cdhm6,337s1gc,1s00066,333gr66,33cdhjc,s00000,cdhg0,33cdhm6,33ccv00,o,c3opj0,1g6cf0o,c00000,3gr34,1gf0o30,1gedv00,0,1j6cf0o,1v1gvgo,c00000,fhj6c,3sc9j6u,36cphg0,e,dhg60o,1v1g60o,cdgs00,1gc30,7g33s,36cotg0,c,c3001o,c1g60o,u00000,1gc30,7phm6,33ccv00,o,o6006c,36cpj6c,1r00000,tms,dopj6,1j6cpg0,tms,cdpnm,3vdtjm6,3300000,3or3c,v00vg0,0,1o,1m6oe00,1u00000,0,c1g,30c30,33ccv00,0,0,3vc1g60,0,0,1vg6,30c000,60,30cdj6o,o61n46,61gfg0,c1g66,36dgc36,379sfg6,300000,c1g00o,c3of1s,c00000,0,r6pm3c,r00000,0,1m3c,r6pm00,0,8k84a4,8k84a4,8k84a4,8k8lda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3ene60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g67o,cfg60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3c000,0,fsdhm,r3cdhm,0,fg67o,c1g60o,c1gdhm,r3cdnm,3fcdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3c000,7u,3fcdhm,r3cdhm,r3cdhm,rfc1nu,0,dhm,r3cdhm,rfs000,0,c1g60o,cfg67o,0,0,0,fg60o,c1g60o,c1g60o,c1g60v,0,60o,c1g60o,cfu000,0,0,7v,c1g60o,c1g60o,c1g60o,c1u60o,c1g60o,0,7v,0,60o,c1g60o,cfu60o,c1g60o,c1g60o,c1u60v,c1g60o,c1gdhm,r3cdhm,r3edhm,r3cdhm,r3cdhm,r3ec1v,0,0,1v,o3edhm,r3cdhm,r3cdhm,rfe07v,0,0,7v,fedhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3c000,7v,fu000,0,r3cdhm,rfe07n,r3cdhm,r3c60o,c1g67v,fu000,0,r3cdhm,r3cdnv,0,0,7v,fu60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3u000,0,c1g60o,c1u60v,0,0,v,c1u60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,rfudhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,cfg000,0,0,v,c1g60o,c1hvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvs7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gvvvv,3vvvvvv,3vg0000,0,0,7dn6o,3cdotg0,0,v66,3ucdhns,30c0g00,1vm6,33c1g60,30c1g00,0,1vjc,1m6or3c,1m00000,1vm6,1g3061g,1gcdvg0,0,3u,3cdhm6o,1o00000,0,1j6cpj6,1u60o60,0,tms,c1g60o,c00000,vgo,u6cpj6,u1gvg0,0,s6phm6,3vcdhjc,s00000,e3c,33cdhjc,1m6prg0,0,f3060c,v6cpj6,u00000,0,7tmur,1v00000,0,1gcvmr,3dv6vj0,3000000,71g,1g60v30,1g30700,0,7phm6,33cdhm6,3300000,7u,1vg0,fs000,0,1g63u,c1g000,3vg0000,c0o,60c30o,o00vg0,0,61gc30,o1g300,1v00000,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1hm6o,1o00000,o,c00vg0,c1g000,0,tms,7dn00,0,3gr3c,s00000,0,0,0,c1g000,0,0,o,0,f,60o30c,6eor1s,e00000,dgr3c,1m6or00,0,3g,3c30o68,3s00000,0,0,1u7ov3s,1u7o000,0\",\r\n\t\t8, 14, null, true\r\n\t);\r\n\r\n\t// Font 4: 8x16\r\n\tpi.loadFont(\r\n\t\t\"0,0,0,0,vk1,2io30dt,2co30bu,0,vnv,3dvvvu3,3jvvvru,0,0,1mftvnu,3v7oe0g,0,0,83gv7u,1u3g400,0,o,u3ppv7,3jhg61s,0,o,u7tvvv,1v1g61s,0,0,0,0,0,3vvvvvv,3vvvpu3,31ufvvv,3vvvvvv,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,vr3,1vm6or3,1hmfpv6,3000000,o,cdmf77,udm60o,0,81g70,3ofhvno,3oe1g40,0,41ge,f3tvhu,f0s1g2,0,61s,1v1g60o,1v3o600,0,pj6,1j6cpj6,1j00pj6,0,vur,3dtmuor,dhm6or,0,7phj0,s6phm6,1m3g366,1u00000,0,0,3vftvnu,0,61s,1v1g60o,1v3o63u,0,61s,1v1g60o,c1g60o,0,60o,c1g60o,c7sf0o,0,0,1g37u,61g000,0,0,30o7u,1g30000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61s,u3o60o,c0060o,0,6cpj6,i00000,0,0,3c,1mfsr3c,1mfsr3c,0,c1gv66,31c0v06,38dhjs,c1g000,0,31cc30o,o61hk6,0,e3c,1m3gtms,36cpj3m,0,30c1g,1g00000,0,0,30o,o30c1g,o3060c,0,c0o,60o30c,60o61g,0,0,6cf7v,u6c000,0,0,1g63u,c1g000,0,0,0,1g60o,o00000,0,7u,0,0,0,0,60o,0,0,10c30o,o61g40,0,f36,31s7mur,31s6phs,0,61o,1s1g60o,c1g63u,0,v66,30o61g,1gc1hnu,0,v66,30cf06,30dhjs,0,30s,u6pj7u,60o30u,0,1vm0,30c1v06,30dhjs,0,e30,30c1v66,33cdhjs,0,1vm6,30c30o,o30c1g,0,v66,33ccv66,33cdhjs,0,v66,33ccvg6,30c33o,0,0,c1g000,1g600,0,0,c1g000,1g61g,0,6,61gc30,o1g306,0,0,7s000,1v00000,0,30,o1g306,61gc30,0,v66,330o60o,c0060o,0,3s,33cdnmu,3fdpg3s,0,41o,1mcdhnu,33cdhm6,0,1v36,1j6cv36,1j6cpns,0,f36,31c1g60,30c4phs,0,1u3c,1j6cpj6,1j6cr7o,0,1vj6,1h6gu38,1g64pnu,0,1vj6,1h6gu38,1g60o7g,0,f36,31c1g6u,33ccphq,0,1hm6,33cdvm6,33cdhm6,0,f0o,c1g60o,c1g61s,0,7gc,60o30c,36cpj3o,0,1pj6,1j6ou3o,1m6cpn6,0,1s30,1g60o30,1g64pnu,0,1gv7,3vvvmu3,31s7gu3,0,1hn6,3rftnme,33cdhm6,0,v66,33cdhm6,33cdhjs,0,1v36,1j6cv30,1g60o7g,0,v66,33cdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6cpn6,0,v66,3360e0c,3cdhjs,0,1vur,2chg60o,c1g61s,0,1hm6,33cdhm6,33cdhjs,0,1gu3,31s7gu3,31mcf0o,0,1gu3,31s7gur,3dvupj6,0,1gu3,1j3o60o,u6dgu3,0,1gu3,31mcf0o,c1g61s,0,1vu3,230o61g,1gc3gvv,0,f1g,o30c1g,o30c1s,0,40,30e0s1o,e0s1g2,0,f0c,60o30c,60o31s,0,83gr66,0,0,0,0,0,0,fu000,o30600,0,0,0,0,7g33s,36cpj3m,0,1o30,1g7gr36,1j6cpjs,0,0,7phm0,30c1hjs,0,70c,63or6c,36cpj3m,0,0,7phnu,30c1hjs,0,e3c,1i61s30,1g60o7g,0,0,7dj6c,36cpj3s,6cou00,1o30,1g6otj6,1j6cpn6,0,60o,3g60o,c1g61s,0,1g6,s1g6,30c1g6,1j6cf00,1o30,1g6cr3o,1s6opn6,0,e0o,c1g60o,c1g61s,0,0,edvur,3dtnmur,0,0,dopj6,1j6cpj6,0,0,7phm6,33cdhjs,0,0,dopj6,1j6cpjs,1g61s00,0,7dj6c,36cpj3s,60o7g0,0,dotj6,1g60o7g,0,0,7phj0,s0phjs,0,41g,ofoc1g,o30dgs,0,0,cpj6c,36cpj3m,0,0,c7gu3,31mcf0o,0,0,c7gu3,3dtnvr6,0,0,c6phs,c3opm3,0,0,cdhm6,33cdhju,30pu00,0,ftj0o,o61hnu,0,3go,c1gs0o,c1g60e,0,60o,c1g00o,c1g60o,0,s0o,c1g3go,c1g63g,0,tms,0,0,0,0,83gr66,33cdvg0,0,f36,31c1g60,316cf0c,37o000,1j00,cpj6c,36cpj3m,0,o61g,7phnu,30c1hjs,0,10e3c,7g33s,36cpj3m,0,1j00,7g33s,36cpj3m,0,60c0o,7g33s,36cpj3m,0,3gr1o,7g33s,36cpj3m,0,0,u6co30,1j3o306,u00000,10e3c,7phnu,30c1hjs,0,1hg0,7phnu,30c1hjs,0,60c0o,7phnu,30c1hjs,0,pg0,3g60o,c1g61s,0,1gf36,3g60o,c1g61s,0,60c0o,3g60o,c1g61s,0,cc00g,s6phm6,3vcdhm6,0,s6oe00,s6phm6,3vcdhm6,0,c30o00,3v6co3s,1g60pnu,0,0,6seor,1vdhn3n,0,fjc,36cpvmc,36cpj6e,0,10e3c,7phm6,33cdhjs,0,1hg0,7phm6,33cdhjs,0,60c0o,7phm6,33cdhjs,0,30u6c,cpj6c,36cpj3m,0,60c0o,cpj6c,36cpj3m,0,1hg0,cdhm6,33cdhju,30ou00,cc03s,33cdhm6,33cdhjs,0,cc066,33cdhm6,33cdhjs,0,1g63u,31s1g60,31ns60o,0,3gr34,1gf0o30,1g61pns,0,1gr6,u1hvoo,3vhg60o,0,fopj6,1u64pjf,1j6cpnj,0,s6oo,c1gvgo,c1g60o,3c70000,1gc30,7g33s,36cpj3m,0,o61g,3g60o,c1g61s,0,1gc30,7phm6,33cdhjs,0,1gc30,cpj6c,36cpj3m,0,tms,dopj6,1j6cpj6,0,1rdo066,3jfdvmu,37cdhm6,0,3or3c,v00vg0,0,0,3gr3c,s00v00,0,0,c1g,30c30,30cdhjs,0,0,1vm0,30c1g00,0,0,1vg6,30c1g0,0,c1g62,33co61g,1gct6o6,61u000,c1g62,33co61g,1jct5hu,30c000,60o,1g60o,u3of0o,0,0,3cr6o,1m3c000,0,0,dgr1m,1mdg000,0,8k84a4,8k84a4,8k84a4,8k84a4,1aqklda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3enfnbn,c1g60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g60o,cfg67o,c1g60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3cdhm,0,7u,r3cdhm,r3cdhm,0,fg67o,c1g60o,c1g60o,r3cdhm,rfc1nm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,0,fs1nm,r3cdhm,r3cdhm,r3cdhm,rfc1nu,0,0,r3cdhm,r3cdnu,0,0,c1g60o,cfg67o,0,0,0,7o,c1g60o,c1g60o,c1g60o,c1g60v,0,0,c1g60o,c1g67v,0,0,0,7v,c1g60o,c1g60o,c1g60o,c1g60v,c1g60o,c1g60o,0,7v,0,0,c1g60o,c1g67v,c1g60o,c1g60o,c1g60o,c1u60v,c1g60o,c1g60o,r3cdhm,r3cdhn,r3cdhm,r3cdhm,r3cdhm,r3ec1v,0,0,0,3uc1n,r3cdhm,r3cdhm,r3cdhm,rfe07v,0,0,0,fu07n,r3cdhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3cdhm,0,fu07v,0,0,r3cdhm,rfe07n,r3cdhm,r3cdhm,c1g60o,cfu07v,0,0,r3cdhm,r3cdnv,0,0,0,fu07v,c1g60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3cdhv,0,0,c1g60o,c1u60v,0,0,0,1u60v,c1g60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,r3cdnv,r3cdhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,c1g67o,0,0,0,v,c1g60o,c1g60o,3vvvvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvvvv,3of1s7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gu3of,3vvvvvv,3vvvvo0,0,0,0,7dn6o,3cdhn3m,0,u6c,36cpm6c,33cdhmc,0,1vm6,33c1g60,30c1g60,0,0,3v6or3c,1m6or3c,0,7u,3360c0o,o61hnu,0,0,7tm6o,3cdhm3g,0,0,1j6cpj6,1j7oo30,3000000,0,1rdo60o,c1g60o,0,3u,c3opj6,1j3o63u,0,1o,1mcdhnu,33ccr1o,0,e3c,33cdhjc,1m6or7e,0,7hg,c0ofj6,1j6cphs,0,0,7tmur,3dns000,0,3,37tmur,3pnso60,0,71g,1g60v30,1g60c0s,0,3s,33cdhm6,33cdhm6,0,0,3v0007u,1vg0,0,0,c1gvgo,c0007v,0,1g,c0o1gc,c3003u,0,c,c30o1g,c0o03u,0,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1g60o,3cdhm3g,0,0,c1g03u,1g600,0,0,7dn00,1rdo000,0,3gr3c,s00000,0,0,0,o,c00000,0,0,0,c00000,0,u30c,60o37c,1m6of0s,0,dgr3c,1m6or00,0,0,71m1g,1gchu00,0,0,0,1u7ov3s,1u7ov00,0\",\r\n\t\t8, 16, null, true\r\n\t);\r\n\r\n\t// Set default font to 6x8 (font ID 1)\r\n\tpi.setDefaultFont( 1 );\r\n}\r\n", "/**\r\n * Pi.js - Main Entry Point\r\n * \r\n * Graphics and sound library for retro-style games and demos.\r\n * Modernized architecture with legacy API compatibility.\r\n * \r\n * @module pi.js\r\n * @author Andy Stubbs\r\n * @license Apache-2.0\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { piData, defaultPaletteHex } from \"./core/pi-data.js\";\r\nimport * as cmd from \"./core/command-system.js\";\r\nimport * as utils from \"./modules/utils.js\";\r\nimport * as core from \"./modules/core-commands.js\";\r\nimport * as helper from \"./modules/screen-helper.js\";\r\nimport * as screen from \"./modules/screen.js\";\r\nimport * as screenCmd from \"./modules/screen-commands.js\";\r\nimport * as graphics from \"./modules/graphics-pixel.js\";\r\nimport * as paint from \"./modules/paint.js\";\r\nimport * as bezier from \"./modules/bezier.js\";\r\nimport * as images from \"./modules/images.js\";\r\nimport * as font from \"./modules/font.js\";\r\nimport * as print from \"./modules/print.js\";\r\nimport * as table from \"./modules/table.js\";\r\nimport * as keyboard from \"./modules/keyboard.js\";\r\nimport * as mouse from \"./modules/mouse.js\";\r\nimport * as touch from \"./modules/touch.js\";\r\nimport * as gamepad from \"./modules/gamepad.js\";\r\nimport * as sound from \"./modules/sound.js\";\r\nimport * as play from \"./modules/play.js\";\r\nimport * as draw from \"./modules/draw.js\";\r\nimport { loadBuiltInFonts } from \"./assets/font-data.js\";\r\n\r\n// Version injected during build from package.json\r\nconst VERSION = \"2.0.0-alpha.1\";\r\n\r\n// Ready system variables\r\nlet waitCount = 0;\r\nlet waiting = false;\r\nconst readyList = [];\r\nlet startReadyListTimeout = 0;\r\n\r\n// Ready/Wait/Resume system functions\r\n\r\nfunction wait() {\r\n\twaitCount++;\r\n\twaiting = true;\r\n}\r\n\r\nfunction resume() {\r\n\twaitCount--;\r\n\tif( waitCount === 0 ) {\r\n\t\tstartReadyList();\r\n\t}\r\n}\r\n\r\nfunction startReadyList() {\r\n\tif( document.readyState !== \"loading\" && waitCount === 0 ) {\r\n\t\twaiting = false;\r\n\t\tconst temp = readyList.slice();\r\n\t\treadyList.length = 0;\r\n\r\n\t\tfor( const fn of temp ) {\r\n\t\t\tfn();\r\n\t\t}\r\n\t} else {\r\n\t\tclearTimeout( startReadyListTimeout );\r\n\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t}\r\n}\r\n\r\n// Create the pi object with _ (internal API for plugins) and util namespaces\r\nconst pi = {\r\n\t\"version\": VERSION,\r\n\t\"_\": {\r\n\t\t\"data\": piData,\r\n\t\t\"addCommand\": cmd.addCommand,\r\n\t\t\"addCommands\": cmd.addCommands,\r\n\t\t\"addSetting\": cmd.addSetting,\r\n\t\t\"addPen\": cmd.addPen,\r\n\t\t\"addBlendCommand\": cmd.addBlendCommand,\r\n\t\t\"parseOptions\": cmd.parseOptions,\r\n\t\t\"wait\": wait,\r\n\t\t\"resume\": resume\r\n\t},\r\n\t\"util\": utils\r\n};\r\n\r\n// Register the ready command\r\ncmd.addCommand( \"ready\", ready, false, false, [ \"fn\" ] );\r\n\r\nfunction ready( args ) {\r\n\tconst fn = args[ 0 ];\r\n\r\n\tif( utils.isFunction( fn ) ) {\r\n\t\tif( waiting ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t} else if( document.readyState === \"loading\" ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t\tclearTimeout( startReadyListTimeout );\r\n\t\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t\t} else {\r\n\t\t\tfn();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Initialize modules\r\nhelper.init( pi );\r\nscreen.init( pi );\r\nscreenCmd.init( pi );\r\ngraphics.init( pi );\r\npaint.init( pi );\r\nbezier.init( pi );\r\nimages.init( pi );\r\nfont.init( pi );\r\nprint.init( pi );\r\ntable.init( pi );\r\nkeyboard.init( pi );\r\nmouse.init( pi );\r\ntouch.init( pi );\r\ngamepad.init( pi );\r\nsound.init( pi );\r\nplay.init( pi );\r\ndraw.init( pi );\r\ncore.init( pi );\r\n\r\n// Initialize default palette (must be after core.init which registers setDefaultPal)\r\npiData.commands.setDefaultPal( [ defaultPaletteHex ] );\r\npiData.commands.setDefaultColor( [ 7 ] );\r\n\r\n// Process all commands and create API methods\r\ncmd.processCommands( pi );\r\n\r\n// Set window.pi for browser environments\r\nif( typeof window !== \"undefined\" ) {\r\n\twindow.pi = pi;\r\n\r\n\t// Set $ alias only if not already defined (avoid jQuery conflicts)\r\n\tif( window.$ === undefined ) {\r\n\t\twindow.$ = pi;\r\n\t}\r\n}\r\n\r\n// Load built-in fonts after API is ready\r\nif( typeof window !== \"undefined\" ) {\r\n\tloadBuiltInFonts( pi );\r\n}\r\n\r\n// Export for different module systems\r\nexport default pi;\r\nexport { pi };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAYO,MAAM,oBAAoB;AAAA,IAChC;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAC5C;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AAAA,IAClE;AAAA,IAAW;AAAA,IAAW;AAAA,IAAW;AA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",
  "names": ["pad", "pi", "piData", "init", "pi", "piData", "init", "pi", "piData", "init", "pi", "piData", "customData", "init", "pi", "piData", "dy", "dx", "init", "pi", "piData", "init", "pi", "piData", "point", "init", "pi", "piData", "name", "name2", "init", "pi", "piData", "i", "init", "pi", "piData", "init", "pi", "piData", "init", "pi", "piData", "isInteger", "input", "init", "pi", "piData", "init", "pi", "piData", "touchArr", "init", "pi", "piData", "init", "pi", "piData", "init", "pi", "piData", "init", "pi", "piData", "pi", "init"]
}
