{
  "version": 3,
  "sources": ["../src-pi-2.0.0-alpha.1/core/utils.js", "../src-pi-2.0.0-alpha.1/core/commands.js", "../src-pi-2.0.0-alpha.1/core/screen-manager.js", "../src-pi-2.0.0-alpha.1/core/renderer.js", "../src-pi-2.0.0-alpha.1/core/colors.js", "../src-pi-2.0.0-alpha.1/modules/keyboard.js", "../src-pi-2.0.0-alpha.1/modules/mouse.js", "../src-pi-2.0.0-alpha.1/modules/touch.js", "../src-pi-2.0.0-alpha.1/modules/press.js", "../src-pi-2.0.0-alpha.1/modules/gamepad.js", "../src-pi-2.0.0-alpha.1/core/events.js", "../src-pi-2.0.0-alpha.1/modules/graphics.js", "../src-pi-2.0.0-alpha.1/modules/graphics-advanced.js", "../src-pi-2.0.0-alpha.1/modules/draw.js", "../src-pi-2.0.0-alpha.1/modules/paint.js", "../src-pi-2.0.0-alpha.1/modules/images.js", "../src-pi-2.0.0-alpha.1/modules/font.js", "../src-pi-2.0.0-alpha.1/modules/print.js", "../src-pi-2.0.0-alpha.1/modules/sound.js", "../src-pi-2.0.0-alpha.1/modules/play.js", "../src-pi-2.0.0-alpha.1/core/plugins.js", "../src-pi-2.0.0-alpha.1/assets/font-data.js", "../src-pi-2.0.0-alpha.1/index.js"],
  "sourceRoot": "../src-pi-2.0.0-alpha.1/",
  "sourcesContent": ["/**\r\n * Pi.js - Utilities Module\r\n * \r\n * Common utility functions for math, colors, types, and data manipulation.\r\n * \r\n * @module modules/utils\r\n */\r\n\r\n\"use strict\";\r\n\r\n\r\n/***************************************************************************************************\r\n * General Utility Functions\r\n **************************************************************************************************/\r\n\r\n\r\n/**\r\n * Parse options - normalizes input arguments into an object with named parameters.\r\n *\r\n * @param {Array<any>} args - Arguments passed to the command (from rest parameters like `...args`).\r\n * @param {Array<string>} parameterNames - Array of parameter names in expected order.\r\n * @returns {Object<string, any>} \tAn object where keys are `parameterNames` and values are the \r\n * \t\t\t\t\t\t\t\t\tparsed arguments. Missing values will be `null`.\r\n */\r\nexport function parseOptions( args, parameterNames ) {\r\n\tconst resultOptions = {};\r\n\r\n\t// Initialize all named parameters to null\r\n\tfor( const name of parameterNames ) {\r\n\t\tresultOptions[ name ] = null;\r\n\t}\r\n\r\n\tlet isNamedParameterFound = false;\r\n\r\n\t// Case 1: First argument is an object literal\r\n\tif( args.length > 0 && isObjectLiteral( args[ 0 ] ) ) {\r\n\t\tconst inputOptions = args[ 0 ];\r\n\r\n\t\tfor( const name of parameterNames ) {\r\n\t\t\tif( name in inputOptions ) {\r\n\t\t\t\tisNamedParameterFound = true;\r\n\t\t\t\tresultOptions[ name ] = inputOptions[ name ];\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\t\r\n\t// If no named parameters found then treat as positional array\r\n\tif( !isNamedParameterFound ) {\r\n\r\n\t\t// Case 2: Arguments are passed positionally\r\n\t\t// Map the positional arguments to the named parameters\r\n\t\t// If args[ i ] is out of bounds, it remains null from initialization\r\n\t\tfor( let i = 0; i < parameterNames.length; i++ ) {\r\n\t\t\tif( i < args.length ) {\r\n\t\t\t\tresultOptions[ parameterNames[ i ] ] = args[ i ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn resultOptions;\r\n}\r\n\r\n// Type checking utilities\r\nexport const isFunction = ( fn ) => typeof fn === \"function\";\r\nexport const isDomElement = ( el ) => el instanceof Element;\r\nexport const isObjectLiteral = ( obj ) => {\r\n\tif( typeof obj !== \"object\" || obj === null || Array.isArray( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\tconst proto = Object.getPrototypeOf( obj );\r\n\treturn proto === null || proto === Object.prototype;\r\n};\r\n\r\n// Data conversion utilities\r\n\r\n/**\r\n * Convert hex string to 2D data array\r\n * \r\n * @param {string} hex - Hex string\r\n * @param {number} width - Width of data\r\n * @param {number} height - Height of data\r\n * @returns {Array<Array<number>>} 2D array of binary data\r\n */\r\nexport function hexToData( hex, width, height ) {\r\n\thex = hex.toUpperCase();\r\n\tconst data = [];\r\n\tlet i = 0;\r\n\tlet digits = \"\";\r\n\tlet digitIndex = 0;\r\n\r\n\tfor( let y = 0; y < height; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = 0; x < width; x++ ) {\r\n\t\t\tif( digitIndex >= digits.length ) {\r\n\t\t\t\tlet hexPart = parseInt( hex[ i ], 16 );\r\n\t\t\t\tif( isNaN( hexPart ) ) {\r\n\t\t\t\t\thexPart = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdigits = padL( hexPart.toString( 2 ), 4, \"0\" );\r\n\t\t\t\ti += 1;\r\n\t\t\t\tdigitIndex = 0;\r\n\t\t\t}\r\n\t\t\tdata[ y ].push( parseInt( digits[ digitIndex ] ) );\r\n\t\t\tdigitIndex += 1;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n// Math utilities\r\n\r\n/**\r\n * Clamp a number between min and max\r\n * \r\n * @param {number} num - Number to clamp\r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Clamped value\r\n */\r\nexport function clamp( num, min, max ) {\r\n\treturn Math.min( Math.max( num, min ), max );\r\n}\r\n\r\n/**\r\n * Check if a point is in a rectangle\r\n * \r\n * @param {Object} point - Point with x, y properties\r\n * @param {Object} hitBox - Rectangle with x, y, width, height properties\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange( point, hitBox ) {\r\n\treturn point.x >= hitBox.x && point.x < hitBox.x + hitBox.width &&\r\n\t\tpoint.y >= hitBox.y && point.y < hitBox.y + hitBox.height;\r\n}\r\n\r\n/**\r\n * Check if coordinates are in a rectangle\r\n * \r\n * @param {number} x1 - Point x\r\n * @param {number} y1 - Point y\r\n * @param {number} x2 - Rectangle x\r\n * @param {number} y2 - Rectangle y\r\n * @param {number} width - Rectangle width\r\n * @param {number} height - Rectangle height\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange2( x1, y1, x2, y2, width, height ) {\r\n\treturn x1 >= x2 && x1 < x2 + width &&\r\n\t\ty1 >= y2 && y1 < y2 + height;\r\n}\r\n\r\n/**\r\n * Generate random number in range\r\n * \r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Random number between min and max\r\n */\r\nexport function rndRange( min, max ) {\r\n\treturn Math.random() * ( max - min ) + min;\r\n}\r\n\r\n/**\r\n * Convert degrees to radians\r\n * \r\n * @param {number} deg - Degrees\r\n * @returns {number} Radians\r\n */\r\nexport function degreesToRadian( deg ) {\r\n\treturn deg * ( Math.PI / 180 );\r\n}\r\n\r\n/**\r\n * Convert radians to degrees\r\n * \r\n * @param {number} rad - Radians\r\n * @returns {number} Degrees\r\n */\r\nexport function radiansToDegrees( rad ) {\r\n\treturn rad * ( 180 / Math.PI );\r\n}\r\n\r\n// String utilities\r\n\r\n/**\r\n * Pad string on left\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padL( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tlet pad = \"\";\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tpad += c;\r\n\t}\r\n\treturn pad + str;\r\n}\r\n\r\n/**\r\n * Pad string on both sides\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function pad( str, len, c ) {\r\n\tif( typeof c !== \"string\" || c.length === 0 ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\twhile( str.length < len ) {\r\n\t\tstr = c + str + c;\r\n\t}\r\n\tif( str.length > len ) {\r\n\t\tstr = str.substring( 0, len );\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * Parse integer with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed integer or default\r\n */\r\nexport function getInt( val, def ) {\r\n\tif( val === null || val === undefined ) {\r\n\t\treturn def;\r\n\t}\r\n\tconst parsed = Number( val );\r\n\tif( !Number.isFinite( parsed ) ) {\r\n\t\treturn def;\r\n\t}\r\n\r\n\treturn Math.round( parsed );\r\n}\r\n\r\n/**\r\n * Parse float with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed float or default\r\n */\r\nexport function getFloat( val, def ) {\r\n\tif( val === null || val === undefined ) {\r\n\t\treturn def;\r\n\t}\r\n\tconst parsed = Number( val );\r\n\tif( !Number.isFinite( parsed ) ) {\r\n\t\treturn def;\r\n\t}\r\n\r\n\treturn parsed;\r\n}\r\n\r\n// Queue microtask (built-in in modern browsers)\r\n// Wrap to preserve window context\r\nexport const queueMicrotask = ( callback ) => {\r\n\tif( window.queueMicrotask ) {\r\n\t\twindow.queueMicrotask( callback );\r\n\t} else {\r\n\t\tsetTimeout( callback, 0 );\r\n\t}\r\n};\r\n\r\n\r\n/***************************************************************************************************\r\n * Color Utility Functions\r\n **************************************************************************************************/\r\n\r\n\r\nconst COLOR_PROTO = {\r\n\t\"key\": 0,\r\n\t\"r\": 0,\r\n\t\"g\": 0,\r\n\t\"b\": 0,\r\n\t\"a\": 0,\r\n\t\"rgba\": \"\",\r\n\t\"hex\": \"\"\r\n};\r\nconst m_colorCheckerContext = document.createElement( \"canvas\" ).getContext(\r\n\t\"2d\", { \"willReadFrequently\": true }\r\n);\r\n\r\n/**\r\n * Generates a unique 32-bit integer key for an opaque RGB color.\r\n * Each color component (R, G, B) is assumed to be an 8-bit integer (0-255).\r\n * The components are packed in the order: Red | Green | Blue.\r\n *\r\n * @param {number} r - Red component (0-255).\r\n * @param {number} g - Green component (0-255).\r\n * @param {number} b - Blue component (0-255).\r\n * @param {number} a - Alpha component (0-255).\r\n * @returns {number} A 32-bit integer representing the color.\r\n */\r\nexport function generateColorKey( r, g, b, a ) {\r\n\treturn ( r << 24 ) | ( g << 16 ) | ( b << 8 ) | a;\r\n}\r\n\r\n/**\r\n * Convert RGB to color object\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255)\r\n * @returns {Object} Color object\r\n */\r\nexport function rgbToColor( r, g, b, a ) {\r\n\tconst hex = rgbToHex( r, g, b, a );\r\n\treturn createColor( r, g, b, a, hex );\r\n}\r\n\r\n/**\r\n * Convert various color formats to color object\r\n * \r\n * @param {*} color - Color in various formats\r\n * @returns {Object|null} Color object or null if invalid\r\n */\r\nexport function convertToColor( color ) {\r\n\tif( color === undefined || color === null || color === \"\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Check if color is already a color prototype object\r\n\tif( Object.getPrototypeOf( color ) === COLOR_PROTO ) {\r\n\t\treturn color;\r\n\t} else if( Array.isArray( color ) ) {\r\n\r\n\t\t// Array format [r, g, b, a]\r\n\t\tif( color.length < 3 ) {\r\n\t\t\treturn null;\r\n\t\t} else if( color.length === 3 ) {\r\n\t\t\tcolor.push( 255 );\r\n\t\t}\r\n\t} else if( color.r !== undefined ) {\r\n\r\n\t\t// Convert from object literal or color object\r\n\t\tcolor = [ color.r, color.g, color.b, color.a ];\r\n\t} else if( typeof color === \"string\" ) {\r\n\r\n\t\t// Check if is hex format\r\n\t\tconst checkHexColor = /(^#[0-9A-F]{8}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\r\n\t\tif( checkHexColor.test( color ) ) {\r\n\t\t\treturn hexToColor( color );\r\n\t\t}\r\n\r\n\t\t// RGB/RGBA format\r\n\t\tif( color.indexOf( \"rgb\" ) === 0 ) {\r\n\t\t\tcolor = splitRgb( color );\r\n\t\t\tif( color.length < 3 ) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else if( color.length === 3 ) {\r\n\t\t\t\tcolor.push( 255 );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Named color or other CSS color\r\n\t\t\treturn colorStringToColor( color );\r\n\t\t}\r\n\t}\r\n\r\n\t// Parse rgb colors\r\n\tfor( let i = 0; i < 3; i += 1 ) {\r\n\t\tcolor[ i ] = getInt( color[ i ], 0 );\r\n\t}\r\n\r\n\t// Parse alpha\r\n\tcolor[ 3 ] = getFloat( color[ 3 ], 0 );\r\n\tif( color[ 3 ] < 1 ) {\r\n\t\tcolor[ 3 ] = Math.round( color[ 3 ] * 255 );\r\n\t} else {\r\n\t\tcolor[ 3 ] = Math.round( color[ 3 ] );\r\n\t}\r\n\t\r\n\treturn rgbToColor( color[ 0 ], color[ 1 ], color[ 2 ], color[ 3 ] );\r\n}\r\n\r\nexport function calcColorDifference( c1, c2, w = [ 0.2, 0.68, 0.07, 0.05 ] ) {\r\n\tconst dr = c1.r - c2.r;\r\n\tconst dg = c1.g - c2.g;\r\n\tconst db = c1.b - c2.b;\r\n\tconst da = c1.a - c2.a;\r\n\r\n\treturn ( dr * dr * w[ 0 ] + dg * dg * w[ 1 ] + db * db * w[ 2 ] + da * da * w[ 3 ] );\r\n}\r\n\r\nfunction createColor( r, g, b, a, hex ) {\r\n\tconst color = Object.create( COLOR_PROTO );\r\n\tcolor.key = generateColorKey( r, g, b, a, hex );\r\n\tcolor.r = r;\r\n\tcolor.g = g;\r\n\tcolor.b = b;\r\n\tcolor.a = a;\r\n\tcolor.rgba = `rgba(${r},${g},${b},${( a / 255 ).toFixed( 3 )})`;\r\n\tcolor.hex = hex;\r\n\r\n\treturn color;\r\n}\r\n\r\n/**\r\n * Convert hex color to color object\r\n * \r\n * @param {string} hex - Hex color string (#RGB, #RRGGBB, or #RRGGBBAA)\r\n * @returns {Object} Color object with r, g, b, a, s, s2 properties\r\n */\r\nfunction hexToColor( hex ) {\r\n\tlet r, g, b, a;\r\n\r\n\tif( hex.length === 4 ) {\r\n\t\tr = parseInt( hex.slice( 1, 2 ), 16 ) * 16 - 1;\r\n\t\tg = parseInt( hex.slice( 2, 3 ), 16 ) * 16 - 1;\r\n\t\tb = parseInt( hex.slice( 3, 4 ), 16 ) * 16 - 1;\r\n\t} else {\r\n\t\tr = parseInt( hex.slice( 1, 3 ), 16 );\r\n\t\tg = parseInt( hex.slice( 3, 5 ), 16 );\r\n\t\tb = parseInt( hex.slice( 5, 7 ), 16 );\r\n\t}\r\n\r\n\tif( hex.length === 9 ) {\r\n\t\ta = parseInt( hex.slice( 7, 9 ), 16 );\r\n\t} else {\r\n\t\ta = 255;\r\n\t}\r\n\r\n\treturn createColor( r, g, b, a, hex );\r\n}\r\n\r\n/**\r\n * Split RGB/RGBA string into components\r\n * \r\n * @param {string} s - RGB or RGBA string\r\n * @returns {Array<number>} Array of color components\r\n */\r\nfunction splitRgb( s ) {\r\n\ts = s.slice( s.indexOf( \"(\" ) + 1, s.indexOf( \")\" ) );\r\n\tconst parts = s.split( \",\" );\r\n\tconst colors = [];\r\n\tfor( let i = 0; i < parts.length; i++ ) {\r\n\t\tlet val;\r\n\t\tif( i === 3 ) {\r\n\t\t\tval = parseFloat( parts[ i ].trim() ) * 255;\r\n\t\t} else {\r\n\t\t\tval = parseInt( parts[ i ].trim() );\r\n\t\t}\r\n\t\tcolors.push( val );\r\n\t}\r\n\treturn colors;\r\n}\r\n\r\n/**\r\n * Convert color component to hex\r\n * \r\n * @param {number} c - Color component (0-255)\r\n * @returns {string} Hex string\r\n */\r\nfunction cToHex( c ) {\r\n\tif( !Number.isInteger( c ) ) {\r\n\t\tc = Math.round( c );\r\n\t}\r\n\tc = clamp( c, 0, 255 );\r\n\tconst hex = Number( c ).toString( 16 );\r\n\treturn hex.length < 2 ? \"0\" + hex : hex.toUpperCase();\r\n}\r\n\r\n/**\r\n * Convert RGB to hex color\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255), defaults to 255\r\n * @returns {string} Hex color string\r\n */\r\nfunction rgbToHex( r, g, b, a ) {\r\n\tif( isNaN( a ) ) {\r\n\t\ta = 255;\r\n\t}\r\n\treturn \"#\" + cToHex( r ) + cToHex( g ) + cToHex( b ) + cToHex( a );\r\n}\r\n\r\n/**\r\n * Convert color string to color object using canvas\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {Object} Color object\r\n */\r\nfunction colorStringToColor( colorStr ) {\r\n\tm_colorCheckerContext.clearRect( 0, 0, 1, 1 );\r\n\tm_colorCheckerContext.fillStyle = colorStr;\r\n\tm_colorCheckerContext.fillRect( 0, 0, 1, 1 );\r\n\tconst data = m_colorCheckerContext.getImageData( 0, 0, 1, 1 ).data;\r\n\treturn rgbToColor( data[ 0 ], data[ 1 ], data[ 2 ], data[ 3 ] );\r\n}\r\n", "/**\n * Pi.js - Command System Module\n * \n * Command registration and processing.\n * \n * @module core/commands\n */\n\n\"use strict\";\n\nimport * as utils from \"./utils\";\n\nconst m_commandList = [];\nconst m_settings = {};\nlet m_api;\nlet m_screenManager;\nlet m_readyCallbacks = [];\nlet m_isDocumentReady = false;\nlet m_waitCount = 0;\nlet m_checkReadyTimeout = null;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init( api, screenManager ) {\n\tm_api = api;\n\tm_screenManager = screenManager;\n\n\t// Set up document ready detection\n\tif( typeof document !== \"undefined\" ) {\n\t\tif( document.readyState === \"loading\" ) {\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", onDocumentReady );\n\t\t} else {\n\n\t\t\t// Document already ready\n\t\t\tm_isDocumentReady = true;\n\t\t}\n\t} else {\n\n\t\t// Not in browser environment, mark as ready immediately\n\t\tm_isDocumentReady = true;\n\t}\n}\n\n/**\n * Increment wait count - called by modules when starting async operations\n */\nexport function wait() {\n\tm_waitCount++;\n}\n\n/**\n * Decrement wait count - called by modules when async operations complete\n */\nexport function done() {\n\tm_waitCount--;\n\tif( m_waitCount < 0 ) {\n\t\tm_waitCount = 0;\n\t}\n\n\t// Check if ready to trigger callbacks\n\tscheduleReadyCheck();\n}\n\n/**\n * Add a command to the system\n * \n * @param {string} name - Command name\n * @param {Function} fn - Command function\n * @param {Array<string>} parameterNames - Parameter names\n * @param {boolean} isScreen - If true, command requires screen\n * @param {boolean} screenOptional - If true, screen is optional (only valid if isScreen is true)\n */\nexport function addCommand( name, fn, parameterNames, isScreen = false, screenOptional = false ) {\n\tconst cmd = {\n\t\t\"name\": name,\n\t\t\"fn\": fn,\n\t\t\"parameterNames\": parameterNames,\n\t\t\"isScreen\": isScreen,\n\t\t\"screenOptional\": screenOptional\n\t};\n\tm_commandList.push( cmd );\n\n\t// Add to settings item if starts with set\n\tif( name.startsWith( \"set\" ) && name !== \"set\" ) {\n\n\t\tconst settingName = cmd.name.substring( 3, 4 ).toLowerCase() + cmd.name.substring( 4 );\n\t\tm_settings[ settingName ] = cmd;\n\t}\n}\n\n/**\n * Sorts then sets commands on the api\n */\nexport function processApi() {\n\n\t// Get the settings list\n\tconst setList = []\n\tfor( const cmd of m_commandList ) {\n\t\tif( cmd.name.startsWith( \"set\" ) ) {\n\t\t\tconst settingName = cmd.name.substring( 3, 4 ).toLowerCase() + cmd.name.substring( 4 );\n\t\t\tsetList.push( settingName );\n\t\t}\n\t}\n\n\t// Sort the settings list\n\tsetList.sort( ( settingNameA, settingNameB ) => {\n\n\t\t// Screen should always go first\n\t\tif( settingNameA === \"screen\" ) {\n\t\t\treturn -1;\n\t\t} else if( settingNameB === \"screen\" ) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn settingNameA.localeCompare( settingNameB );\n\t} );\n\t\n\t// Add the set commands -- not all set commands are screen commands but some are so use\n\t// screenManager to add command. Set is screen-optional since it handles both screen and\n\t// non-screen settings.\n\tm_screenManager.addCommand( \"set\", set, setList, true );\n\n\t// Sort global command list\n\tm_commandList.sort( ( a, b ) => a.name.localeCompare( b.name ) );\n\n\t// Sort screen commands\n\tm_screenManager.sortScreenCommands();\n\n\t// Add all commands to API\n\tfor( const command of m_commandList ) {\n\t\tprocessApiCommand( command );\n\t}\n}\n\n// Process an api command\nexport function processApiCommand( command ) {\n\tif( command.isScreen ) {\n\t\tm_api[ command.name ] = ( ...args ) => {\n\t\t\tconst options = utils.parseOptions( args, command.parameterNames );\n\t\t\tconst screenData = m_screenManager.getActiveScreen();\n\t\t\tif( !screenData && !command.screenOptional ) {\n\t\t\t\tconst error = new Error( `${command.name}: No screens available for command.` );\n\t\t\t\terror.code = \"NO_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn command.fn( screenData, options );\n\t\t};\n\t} else {\n\t\tm_api[ command.name ] = ( ...args ) => {\n\t\t\tconst options = utils.parseOptions( args, command.parameterNames );\n\t\t\treturn command.fn( options );\n\t\t};\n\t}\n}\n\n\nexport function getApi() {\n\treturn m_api;\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n/**\n * ready command - waits for document ready and all pending resources\n * \n * Supports both callback and promise patterns:\n *   - $.ready( callback )        // Callback style\n *   - await $.ready()            // Promise style\n *   - $.ready().then( ... )      // Promise .then() style\n * \n * Behavior:\n *   - Never executes immediately (always defers to next tick)\n *   - Waits for document ready AND all resources with pending wait count\n *   - All ready() calls before resources are loaded trigger together\n *   - Each callback/promise only triggers once\n * \n * Example:\n *   $.loadImage( \"a.png\", \"a\" );\n *   $.loadImage( \"b.png\", \"b\" );\n *   $.ready( () => console.log( \"Both loaded\" ) );\n *   // Waits for both a and b, triggers once\n */\naddCommand( \"ready\", ready, [ \"callback\" ] );\nfunction ready( options ) {\n\tconst callback = options.callback;\n\n\t// Validate callback if provided\n\tif( callback != null && !utils.isFunction( callback ) ) {\n\t\tconst error = new TypeError( \"ready: Parameter callback must be a function.\" );\n\t\terror.code = \"INVALID_CALLBACK\";\n\t\tthrow error;\n\t}\n\n\t// Never execute immediately - always defer to next tick\n\treturn new Promise( ( resolve ) => {\n\t\tm_readyCallbacks.push( {\n\t\t\t\"callback\": callback,\n\t\t\t\"resolve\": resolve,\n\t\t\t\"triggered\": false\n\t\t} );\n\n\t\t// Schedule a check for next tick (allows more resources to be added in same thread)\n\t\tscheduleReadyCheck();\n\t} );\n}\n\n\n// Global settings command\n// -- (Command added in processApi) after all settings have been added as commands\n// -- Note: screenData will be null if the setting is not a screen setting\nfunction set( screenData, options ) {\n\n\t// Loop through all the options\n\tfor( const optionName in options ) {\n\n\t\t// Skip blanks\n\t\tif( options[ optionName ] === null ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the option is a valid setting\n\t\tif( m_settings[ optionName ] ) {\n\n\t\t\t// Get the setting data\n\t\t\tconst setting = m_settings[ optionName ];\n\t\t\tconst optionValues = options[ optionName ];\n\n\t\t\t// Parse the options from the setting\n\t\t\t// Wrap optionValues in array if not already an array\n\t\t\t//const argsArray = Array.isArray( optionValues ) ? optionValues : [ optionValues ];\n\t\t\tconst argsArray = [ optionValues ];\n\t\t\tconst parsedOptions = utils.parseOptions( argsArray, setting.parameterNames );\n\n\t\t\t// Call the setting function\n\t\t\tif( setting.isScreen ) {\n\t\t\t\tsetting.fn( screenData, parsedOptions );\n\t\t\t} else {\n\t\t\t\tsetting.fn( parsedOptions );\n\t\t\t}\n\n\t\t\t// If we just set the screen then refresh the active screen\n\t\t\tif( optionName === \"screen\" ) {\n\t\t\t\tscreenData = m_screenManager.getActiveScreen();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Called when document is ready\nfunction onDocumentReady() {\n\tm_isDocumentReady = true;\n\n\t// Check if we can trigger ready callbacks\n\tscheduleReadyCheck();\n}\n\n// Schedule a ready check on next tick (allows more load calls in same thread)\nfunction scheduleReadyCheck() {\n\n\t// Clear any existing timeout\n\tif( m_checkReadyTimeout !== null ) {\n\t\tclearTimeout( m_checkReadyTimeout );\n\t}\n\n\t// Schedule check for next tick\n\tm_checkReadyTimeout = setTimeout( checkReady, 0 );\n}\n\n// Check if all conditions are met to trigger ready callbacks\nfunction checkReady() {\n\tm_checkReadyTimeout = null;\n\n\t// Don't check if document not ready\n\tif( !m_isDocumentReady ) {\n\t\treturn;\n\t}\n\n\t// Don't trigger if resources are still loading\n\tif( m_waitCount !== 0 ) {\n\t\treturn;\n\t}\n\n\t// Trigger all pending ready callbacks together\n\t// Note: All ready() calls registered before this point will trigger at once\n\t// This allows loads in the same thread to be captured before triggering\n\tconst callbacks = m_readyCallbacks.slice();\n\tm_readyCallbacks = [];\n\n\tfor( const item of callbacks ) {\n\n\t\t// Skip if already triggered (shouldn't happen, but safety check)\n\t\tif( item.triggered ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Mark as triggered (ensures each callback only runs once)\n\t\titem.triggered = true;\n\n\t\t// Execute callback and resolve promise\n\t\tif( item.callback ) {\n\t\t\titem.callback();\n\t\t}\n\t\titem.resolve();\n\t}\n}\n", "/**\r\n * Pi.js - Screen Manager Module\r\n * \r\n * Screen creation and management for Pi.js.\r\n * Creates canvas elements, manages multiple screens, handles aspect ratios.\r\n * \r\n * @module core/screen-manager\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport * as commands from \"./commands\";\r\nimport * as utils from \"./utils\";\r\n\r\nconst SCREEN_API_PROTO = { \"screen\": true };\r\nconst m_screens = {};\r\nconst m_commandList = [];\r\nconst m_pixelCommands = {};\r\nconst m_aaCommands = {};\r\nconst m_screenDataItems = {};\r\nconst m_screenDataItemGetters = [];\r\nconst m_screenInternalCommands = [];\r\nconst m_screenDataInitFunctions = [];\r\nconst m_sceenDataCleanupFunctions = [];\r\n\r\n\r\nlet m_nextScreenId = 0;\r\nlet m_activeScreen = null;\r\nlet m_resizeObserver = null;\r\nconst m_observedContainers = new Set();\r\n\r\n\r\n/***************************************************************************************************\r\n * Module Commands\r\n **************************************************************************************************/\r\n\r\n\r\nexport function init() {\r\n\t\r\n\t// TODO: Add matchMedia to watch for DPR changes - if a user moves a browser to a new monitor\r\n\t// it could cause the canvas image to become blury, even if the actual CSS size of the canvas.\r\n\t// doesn't change.\r\n\t// matchMedia( `(resolution: ${dpr}dppx)` ).addEventListener( \"change\", resizeCanvases );\r\n\r\n\t// Create a single ResizeObserver for all screen containers\r\n\tm_resizeObserver = new ResizeObserver( ( entries ) => {\r\n\t\tfor( const entry of entries ) {\r\n\t\t\tconst container = entry.target;\r\n\t\t\t\r\n\t\t\t// Find all canvas elements in this container\r\n\t\t\tconst canvases = container.querySelectorAll( \"canvas[data-screen-id]\" );\r\n\t\t\tif( canvases.length === 0 ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Resize all screens in this container\r\n\t\t\tfor( const canvas of canvases ) {\r\n\t\t\t\tconst screenId = parseInt( canvas.dataset.screenId, 10 );\r\n\t\t\t\tconst screenData = m_screens[ screenId ];\r\n\t\t\t\t\r\n\t\t\t\tif( screenData ) {\r\n\t\t\t\t\tresizeScreen( screenData );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nexport function addCommand( name, fn, parameterNames, screenOptional = false ) {\r\n\r\n\t// Add the command to the command list\r\n\tm_commandList.push( {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"parameterNames\": parameterNames,\r\n\t\t\"screenOptional\": screenOptional\r\n\t} );\r\n\r\n\t// Add the command to the global command list\r\n\tcommands.addCommand( name, fn, parameterNames, true, screenOptional );\r\n}\r\n\r\nexport function addPixelCommand( name, fn, parameterNames ) {\r\n\r\n\tconst cmd = {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"parameterNames\": parameterNames,\r\n\t\t\"isScreen\": true\r\n\t};\r\n\r\n\t// Add the command to the command list\r\n\tm_commandList.push( cmd );\r\n\r\n\t// Add the command to the global command list\r\n\tcommands.addCommand( name, fn, parameterNames, true );\r\n\t\r\n\t// Add the command to the pixel command list\r\n\tm_pixelCommands[ name ] = cmd;\r\n\r\n}\r\n\r\nexport function addAACommand( name, fn, parameterNames ) {\r\n\r\n\tconst cmd = {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"parameterNames\": parameterNames,\r\n\t\t\"isScreen\": true\r\n\t};\r\n\r\n\t// Add the command to the pixel command list\r\n\tm_aaCommands[ name ] = cmd;\r\n}\r\n\r\nexport function sortScreenCommands() {\r\n\tm_commandList.sort( ( a, b ) => a.name.localeCompare( b.name ) );\r\n}\r\n\r\nexport function addScreenDataItem( name, val ) {\r\n\tm_screenDataItems[ name ] = val;\r\n}\r\n\r\nexport function addScreenInternalCommands( name, fn ) {\r\n\tm_screenInternalCommands.push( { name, fn } );\r\n}\r\n\r\nexport function addScreenDataItemGetter( name, fn ) {\r\n\tm_screenDataItemGetters.push( { name, fn } );\r\n}\r\n\r\nexport function getActiveScreen() {\r\n\treturn m_activeScreen;\r\n}\r\n\r\nexport function addScreenInitFunction( fn ) {\r\n\tm_screenDataInitFunctions.push( fn );\r\n}\r\n\r\nexport function addScreenCleanupFunction( fn ) {\r\n\tm_sceenDataCleanupFunctions.push( fn );\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * External API Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// screen command\r\ncommands.addCommand( \"screen\", screen, [\r\n\t\"aspect\", \"container\", \"isOffscreen\", \"willReadFrequently\", \"noStyles\", \"resizeCallback\"\r\n] );\r\nfunction screen( options ) {\r\n\r\n\t// Validate resize callback\r\n\tif( options.resizeCallback != null && !utils.isFunction( options.resizeCallback ) ) {\r\n\t\tconst error = new TypeError( \"screen: resizeCallback must be a function.\" );\r\n\t\terror.code = \"INVALID_CALLBACK\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Parse aspect ratio\r\n\tif( typeof options.aspect === \"string\" && options.aspect !== \"\" ) {\r\n\t\toptions.aspectData = parseAspect( options.aspect.toLowerCase() );\r\n\t\tif( !options.aspectData ) {\r\n\t\t\tconst error = new Error( \"screen: invalid value for aspect.\" );\r\n\t\t\terror.code = \"INVALID_ASPECT\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t// Create appropriate screen type\r\n\tlet screenData = createScreen( options );\r\n\r\n\t// Add all the screen commands to the screenData api\r\n\tfor( const command of m_commandList ) {\r\n\t\tprocessApiCommand( screenData, command );\r\n\t}\r\n\r\n\t// Assign screen to active screen\r\n\tm_activeScreen = screenData;\r\n\tm_screens[ screenData.id ] = screenData;\r\n\r\n\t// Setup the initial font for the screen\r\n\tscreenData.api.setFont( screenData.font.id );\r\n\r\n\t// Call init functions for all modules that need initialization\r\n\tfor( const fn of m_screenDataInitFunctions ) {\r\n\t\tfn( screenData );\r\n\t}\r\n\r\n\treturn screenData.api;\r\n}\r\n\r\n// Remove the screen from the page and memory\r\naddCommand( \"removeScreen\", removeScreen, [] );\r\nfunction removeScreen( screenData ) {\r\n\tconst screenId = screenData.id;\r\n\r\n\t// Cancel any inputs\r\n\tscreenData.api.cancelInput();\r\n\r\n\t// Clear all events\r\n\tscreenData.api.clearEvents();\r\n\r\n\t// Store the screen ID before we start nullifying properties\r\n\tconst errorMessage = `Cannot call {METHOD}() on removed screen (id: ${screenId}). ` +\r\n\t\t`The screen has been removed from the page.`;\r\n\r\n\t// Replace all commands from screen object - prevents outside reference to screen from calling\r\n\t// screen functions on screen that doesn't exist\r\n\tfor( const key in screenData.api ) {\r\n\t\tif( typeof screenData.api[ key ] === \"function\" ) {\r\n\r\n\t\t\t// Use string replacement to avoid capturing screenData in closure\r\n\t\t\tscreenData.api[ key ] = () => {\r\n\t\t\t\tconst error = new TypeError( errorMessage.replace( \"{METHOD}\", key ) );\r\n\t\t\t\terror.code = \"DELETED_METHOD\";\r\n\t\t\t\tthrow error;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove the canvas from the page\r\n\tif( screenData.canvas && screenData.canvas.parentElement ) {\r\n\t\tscreenData.canvas.parentElement.removeChild( screenData.canvas );\r\n\t}\r\n\r\n\t// Unobserve the container from the global resize observer if no other screens use it\r\n\tif( screenData.container && m_resizeObserver && m_observedContainers.has( screenData.container ) ) {\r\n\t\t\r\n\t\t// Check if any other screens are using this container\r\n\t\tlet hasOtherScreens = false;\r\n\t\tfor( const id in m_screens ) {\r\n\t\t\tconst otherScreen = m_screens[ id ];\r\n\t\t\tif( otherScreen !== screenData && otherScreen.container === screenData.container ) {\r\n\t\t\t\thasOtherScreens = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Only unobserve if no other screens are using this container\r\n\t\tif( !hasOtherScreens ) {\r\n\t\t\tm_resizeObserver.unobserve( screenData.container );\r\n\t\t\tm_observedContainers.delete( screenData.container );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clean up all references to prevent memory leaks\r\n\tscreenData.canvas = null;\r\n\tscreenData.bufferCanvas = null;\r\n\tscreenData.context = null;\r\n\tscreenData.bufferContext = null;\r\n\tscreenData.commands = null;\r\n\tscreenData.resizeCallback = null;\r\n\tscreenData.container = null;\r\n\tscreenData.aspectData = null;\r\n\tscreenData.clientRect = null;\r\n\tscreenData.previousOffsetSize = null;\r\n\r\n\t// Remove additional screenData items\r\n\tfor( const i in m_screenDataItems ) {\r\n\t\tscreenData[ i ] = null;\r\n\t}\r\n\tfor( const getter of m_screenDataItemGetters ) {\r\n\t\tscreenData[ getter.name ] = null;\r\n\t}\r\n\tfor( const internal of m_screenInternalCommands ) {\r\n\t\tscreenData[ internal.name ] = null;\r\n\t}\r\n\r\n\t// If the current screen is the active screen then we should set the active screen to the next\r\n\t// screen available, or null if no screens remain.\r\n\tif( screenData === m_activeScreen ) {\r\n\t\tm_activeScreen = null;\r\n\t\tfor( const i in m_screens ) {\r\n\t\t\tif( m_screens[ i ] !== screenData ) {\r\n\t\t\t\tm_activeScreen = m_screens[ i ];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Call cleanup functions for all modules that need cleanup\r\n\tfor( const fn of m_sceenDataCleanupFunctions ) {\r\n\t\tfn( screenData );\r\n\t}\r\n\r\n\t// Delete the screen from the screens container\r\n\tdelete m_screens[ screenId ];\r\n}\r\n\r\n// Set the active screen on pi\r\ncommands.addCommand( \"setScreen\", setScreen, [ \"screen\" ] );\r\nfunction setScreen( options ) {\r\n\tconst screenObj = options.screen;\r\n\tlet screenId;\r\n\r\n\tif( Number.isInteger( screenObj ) ) {\r\n\t\tscreenId = screenObj;\r\n\t} else if( screenObj && Number.isInteger( screenObj.id ) ) {\r\n\t\tscreenId = screenObj.id;\r\n\t}\r\n\tif( ! m_screens[ screenId ] ) {\r\n\t\tconst error = new Error( \"screen: Invalid screen.\" );\r\n\t\terror.code = \"INVALID_SCREEN\";\r\n\t\tthrow error;\r\n\t}\r\n\tm_activeScreen = m_screens[ screenId ];\r\n}\r\n\r\ncommands.addCommand( \"getScreen\", getScreen, [ \"screenId\" ] );\r\nfunction getScreen( options ) {\r\n\tconst screenId = utils.getInt( options.screenId, null );\r\n\tif( screenId === null ) {\r\n\t\tconst error = new Error( \"screen: Invalid screen id.\" );\r\n\t\terror.code = \"INVALID_SCREEN_ID\";\r\n\t\tthrow error;\r\n\t}\r\n\tconst screen = m_screens[ screenId ];\r\n\tif( !screen ) {\r\n\t\tconst error = new Error( `screen: Screen \"${screenId} not found.` );\r\n\t\terror.code = \"SCREEN_NOT_FOUND\";\r\n\t\tthrow error;\r\n\t}\r\n\treturn screen.api;\r\n}\r\n\r\n// width command\r\naddCommand( \"width\", width, [] );\r\nfunction width( screenData ) {\r\n\treturn screenData.width;\r\n}\r\n\r\n// Height Command\r\naddCommand( \"height\", height, [] );\r\nfunction height( screenData ) {\r\n\treturn screenData.height;\r\n}\r\n\r\n// Canvas Command\r\naddCommand( \"canvas\", canvas, [] );\r\nfunction canvas( screenData ) {\r\n\treturn screenData.canvas;\r\n}\r\n\r\n// TODO: Consider simplifying api commands. This fancy processApiCommand is complex and it only\r\n// saves 1 if statement per command call. It might be worth it to simplify it.\r\n// TODO: When pixel mode is set it's setting it in a mixed state. The global $ will get set for\r\n// all screens, but only the current screen on the screen state will get updated.\r\n// Preferred fix is to not set the global $ pixel mode but only for active screen. Or just\r\n// set pixel mode for global $ and all screens - make this a global command only.\r\n\r\n// Set pixel mode command\r\naddCommand( \"setPixelMode\", setPixelMode, [ \"isEnabled\" ] );\r\nfunction setPixelMode( screenData, options ) {\r\n\tconst isEnabled = !!options.isEnabled;\r\n\r\n\t// If we are enabling pixel mode and it's not already set then we setup pixel mode\r\n\tif( isEnabled ) {\r\n\t\tscreenData.context.imageSmoothingEnabled = false;\r\n\t\tfor( const name in m_pixelCommands ) {\r\n\t\t\tprocessApiCommand( screenData, m_pixelCommands[ name ] );\r\n\t\t\tcommands.processApiCommand( m_pixelCommands[ name ] );\r\n\t\t}\r\n\t} else {\r\n\t\tscreenData.context.imageSmoothingEnabled = true;\r\n\t\tfor( const name in m_aaCommands ) {\r\n\t\t\tprocessApiCommand( screenData, m_aaCommands[ name ] );\r\n\t\t\tcommands.processApiCommand( m_aaCommands[ name ] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Set pixel mode command\r\naddCommand( \"getPixelMode\", getPixelMode, [] );\r\nfunction getPixelMode( screenData ) {\r\n\treturn !screenData.context.imageSmoothingEnabled;\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Internal Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// Process api command\r\nfunction processApiCommand( screenData, command ) {\r\n\tscreenData.api[ command.name ] = ( ...args ) => {\r\n\t\tconst options = utils.parseOptions( args, command.parameterNames );\r\n\t\treturn command.fn( screenData, options );\r\n\t};\r\n}\r\n\r\n/**\r\n * Parses an aspect ratio string into an object containing width, height, and splitter information.\r\n * Supports \"width:height\", \"widthxheight\", \"widtheheight\", and \"widthmheight\" formats.\r\n *\r\n * @param {string} aspect The aspect ratio string to parse.\r\n * @returns {object|null} An object with width, height, splitter, and isMultiple properties, or \r\n * \t\t\t\t\t\t  null if the input is invalid.\r\n */\r\nfunction parseAspect( aspect ) {\r\n\tconst match = aspect.replaceAll( \" \", \"\" ).match( /^(\\d+)(:|x|e|m)(\\d+)$/ );\r\n\r\n\tif( !match ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst width = Number( match[ 1 ] );\r\n\tconst splitter = match[ 2 ];\r\n\tconst height = Number( match[ 3 ] );\r\n\r\n\tif( isNaN( width ) || width === 0 || isNaN( height ) || height === 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"width\": width,\r\n\t\t\"height\": height,\r\n\t\t\"splitter\": splitter,\r\n\t\t\"isMultiple\": splitter === \"m\" || splitter === \"e\",\r\n\t};\r\n}\r\n\r\n// Determines the type of screen to create and returns the created screen\r\nfunction createScreen( options ) {\r\n\tif( options.isOffscreen ) {\r\n\t\tif( !options.aspectData ) {\r\n\t\t\tconst error = new Error(\r\n\t\t\t\t\"screen: You must supply an aspect ratio with exact dimensions \" +\r\n\t\t\t\t\"for offscreen screens.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"NO_ASPECT_OFFSCREEN\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tif( options.aspectData.splitter !== \"x\" ) {\r\n\t\t\tconst error = new Error(\r\n\t\t\t\t\"screen: You must use aspect ratio with e(x)act pixel dimensions for offscreen\" +\r\n\t\t\t\t\"screens. For example: 320x200 for width of 320 and height of 200 pixels.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"INVALID_OFFSCREEN_ASPECT\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn createOffscreenScreen( options );\r\n\t}\r\n\r\n\t// Get the container element from the dom if it's available\r\n\tif( typeof options.container === \"string\" ) {\r\n\t\toptions.container = document.getElementById( options.container );\r\n\t} else if( !options.container ) {\r\n\t\toptions.container = document.body;\r\n\t} else if( !utils.isDomElement( options.container ) ) {\r\n\t\tconst error = new TypeError(\r\n\t\t\t\"screen: Invalid argument container. Container must be a DOM element \" +\r\n\t\t\t\"or a string id of a DOM element.\"\r\n\t\t);\r\n\t\terror.code = \"INVALID_CONTAINER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Return a no style screen\r\n\tif( options.noStyles ) {\r\n\t\treturn createNoStyleScreen( options );\r\n\t}\r\n\r\n\t// Return the default screen\r\n\treturn createDefaultScreen( options );\r\n}\r\n\r\n// Create offscreen canvas\r\nfunction createOffscreenScreen( options ) {\r\n\r\n\t// Add the canvas\r\n\toptions.canvas = document.createElement( \"canvas\" );\r\n\toptions.canvas.width = options.aspectData.width;\r\n\toptions.canvas.height = options.aspectData.height;\r\n\r\n\t// Add the buffer canvas\r\n\toptions.bufferCanvas = document.createElement( \"canvas\" );\r\n\toptions.bufferCanvas.width = options.aspectData.width;\r\n\toptions.bufferCanvas.height = options.aspectData.height;\r\n\r\n\t// Set additional options\r\n\toptions.container = null;\r\n\toptions.isOffscreen = true;\r\n\toptions.isNoStyles = false;\r\n\toptions.resizeCallback = null;\r\n\toptions.previousOffsetSize = null;\r\n\r\n\treturn createScreenData( options );\r\n}\r\n\r\n// Create screen with default styling\r\nfunction createDefaultScreen( options ) {\r\n\r\n\t// Create the canvases\r\n\toptions.canvas = document.createElement( \"canvas\" );\r\n\toptions.bufferCanvas = document.createElement( \"canvas\" );\r\n\r\n\t// Style the canvas\r\n\toptions.canvas.tabIndex = 0;\r\n\toptions.canvas.style.outline = \"none\";\r\n\toptions.canvas.style.backgroundColor = \"black\";\r\n\toptions.canvas.style.position = \"absolute\";\r\n\toptions.canvas.style.imageRendering = \"pixelated\";\r\n\toptions.canvas.style.imageRendering = \"crisp-edges\";\r\n\r\n\t// Check if the container is document.body\r\n\tlet isContainerBody = true;\r\n\tif( options.container === document.body ) {\r\n\t\tisContainerBody = false;\r\n\t\tdocument.documentElement.style.height = \"100%\";\r\n\t\tdocument.documentElement.style.margin = \"0\";\r\n\t\tdocument.body.style.height = \"100%\";\r\n\t\tdocument.body.style.margin = \"0\";\r\n\t\tdocument.body.style.overflow = \"hidden\";\r\n\t\toptions.canvas.style.left = \"0\";\r\n\t\toptions.canvas.style.top = \"0\";\r\n\t}\r\n\r\n\t// Make sure container is not blank\r\n\tif( options.container.offsetHeight === 0 ) {\r\n\t\toptions.container.style.height = \"200px\";\r\n\t}\r\n\r\n\t// Append canvas to container\r\n\toptions.container.appendChild( options.canvas );\r\n\r\n\tif( options.aspectData ) {\r\n\r\n\t\t// Calculate container size\r\n\t\tconst size = getSize( options.container );\r\n\r\n\t\t// Set the canvas size\r\n\t\tsetCanvasSize( options.aspectData, options.canvas, size.width, size.height );\r\n\r\n\t\t// Set the buffer size\r\n\t\toptions.bufferCanvas.width = options.canvas.width;\r\n\t\toptions.bufferCanvas.height = options.canvas.height;\r\n\t} else {\r\n\r\n\t\t// If canvas is inside an element, use static position\r\n\t\tif( isContainerBody ) {\r\n\t\t\toptions.canvas.style.position = \"static\";\r\n\t\t}\r\n\r\n\t\t// Set canvas to fullscreen\r\n\t\toptions.canvas.style.width = \"100%\";\r\n\t\toptions.canvas.style.height = \"100%\";\r\n\t\tconst size = getSize( options.canvas );\r\n\t\toptions.canvas.width = size.width;\r\n\t\toptions.canvas.height = size.height;\r\n\t\toptions.bufferCanvas.width = size.width;\r\n\t\toptions.bufferCanvas.height = size.height;\r\n\t}\r\n\r\n\t// Store initial offset size for resize callback\r\n\toptions.previousOffsetSize = {\r\n\t\t\"width\": options.canvas.offsetWidth,\r\n\t\t\"height\": options.canvas.offsetHeight\r\n\t};\r\n\r\n\t// Create screen data first\r\n\tconst screenData = createScreenData( options );\r\n\r\n\t// Add container to the global resize observer (only if not already observed)\r\n\tif( m_resizeObserver && options.container && !m_observedContainers.has( options.container ) ) {\r\n\t\tm_resizeObserver.observe( options.container );\r\n\t\tm_observedContainers.add( options.container );\r\n\t}\r\n\r\n\treturn screenData;\r\n}\r\n\r\n// Create screen without styles\r\nfunction createNoStyleScreen( options ) {\r\n\toptions.canvas = document.createElement( \"canvas\" );\r\n\toptions.bufferCanvas = document.createElement( \"canvas\" );\r\n\r\n\t// Append canvas to container\r\n\toptions.container.appendChild( options.canvas );\r\n\r\n\t// Add tabindex to canvas\r\n\toptions.canvas.tabIndex = 0;\r\n\r\n\tif( options.aspectData && options.aspectData.splitter === \"x\" ) {\r\n\r\n\t\t// Set the canvases size to the exact sizes specified\r\n\t\toptions.canvas.width = options.aspectData.width;\r\n\t\toptions.canvas.height = options.aspectData.height;\r\n\t\toptions.bufferCanvas.width = options.canvas.width;\r\n\t\toptions.bufferCanvas.height = options.canvas.height;\r\n\t} else {\r\n\t\tconst size = getSize( options.canvas );\r\n\t\toptions.bufferCanvas.width = size.width;\r\n\t\toptions.bufferCanvas.height = size.height;\r\n\t}\r\n\r\n\t// Store initial offset size for resize callback (not used for noStyles, but for consistency)\r\n\toptions.previousOffsetSize = null;\r\n\r\n\treturn createScreenData( options );\r\n}\r\n\r\n// Create the screen data object\r\nfunction createScreenData( options ) {\r\n\t\r\n\t// Set the will read frequently attribute to improve speed of primative graphics\r\n\tconst contextAttributes = { \"willReadFrequently\": !!options.willReadFrequently };\r\n\r\n\tconst screenApi = Object.create( SCREEN_API_PROTO );\r\n\tscreenApi.id = m_nextScreenId;\r\n\r\n\t// Create the screen data object\r\n\tconst screenData = {\r\n\t\t\"id\": m_nextScreenId,\r\n\t\t\"canvas\": options.canvas,\r\n\t\t\"width\": options.canvas.width,\r\n\t\t\"height\": options.canvas.height,\r\n\t\t\"container\": options.container,\r\n\t\t\"aspectData\": options.aspectData,\r\n\t\t\"isOffscreen\": options.isOffscreen,\r\n\t\t\"isNoStyles\": options.isNoStyles,\r\n\t\t\"context\": options.canvas.getContext( \"2d\", contextAttributes ),\r\n\t\t\"bufferCanvas\": options.bufferCanvas,\r\n\t\t\"bufferContext\": options.bufferCanvas.getContext( \"2d\", contextAttributes ),\r\n\t\t\"clientRect\": options.canvas.getBoundingClientRect(),\r\n\t\t\"resizeCallback\": options.resizeCallback,\r\n\t\t\"previousOffsetSize\": options.previousOffsetSize || null,\r\n\t\t\"api\": screenApi\r\n\t};\r\n\r\n\t// Append additional items onto the screendata\r\n\tObject.assign( screenData, structuredClone( m_screenDataItems ) );\r\n\r\n\t// Append dynamic screendata items\r\n\tfor( const itemGetter of m_screenDataItemGetters ) {\r\n\t\tscreenData[ itemGetter.name ] = structuredClone( itemGetter.fn() );\r\n\t}\r\n\r\n\t// Append internal screen commands to screen data\r\n\tfor( const cmd of m_screenInternalCommands ) {\r\n\t\tscreenData[ cmd.name ] = cmd.fn;\r\n\t}\r\n\r\n\t// Additional setup for screen data\r\n\tm_nextScreenId += 1;\r\n\toptions.canvas.dataset.screenId = screenData.id;\r\n\tscreenData.context.imageSmoothingEnabled = false;\r\n\tscreenData.context.fillStyle = screenData.color.hex;\r\n\tscreenData.context.strokeStyle = screenData.color.hex;\r\n\r\n\treturn screenData;\r\n}\r\n\r\n// Set canvas size based on aspect ratio\r\nfunction setCanvasSize( aspectData, canvas, maxWidth, maxHeight ) {\r\n\tlet width = aspectData.width;\r\n\tlet height = aspectData.height;\r\n\tconst splitter = aspectData.splitter;\r\n\tlet newWidth, newHeight;\r\n\r\n\t// If set size to exact multiple\r\n\tif( aspectData.isMultiple && splitter !== \":\" ) {\r\n\t\tconst factorX = Math.floor( maxWidth / width );\r\n\t\tconst factorY = Math.floor( maxHeight / height );\r\n\t\tlet factor = factorX > factorY ? factorY : factorX;\r\n\t\tif( factor < 1 ) {\r\n\t\t\tfactor = 1;\r\n\t\t}\r\n\t\tnewWidth = width * factor;\r\n\t\tnewHeight = height * factor;\r\n\r\n\t\t// Extending the canvas to match container size\r\n\t\tif( splitter === \"e\" ) {\r\n\t\t\twidth = Math.floor( maxWidth / factor );\r\n\t\t\theight = Math.floor( maxHeight / factor );\r\n\t\t\tnewWidth = width * factor;\r\n\t\t\tnewHeight = height * factor;\r\n\t\t}\r\n\t} else {\r\n\r\n\t\t// Calculate the screen ratios\r\n\t\tconst ratio1 = height / width;\r\n\t\tconst ratio2 = width / height;\r\n\t\tnewWidth = maxHeight * ratio2;\r\n\t\tnewHeight = maxWidth * ratio1;\r\n\r\n\t\t// Calculate the best fit\r\n\t\tif( newWidth > maxWidth ) {\r\n\t\t\tnewWidth = maxWidth;\r\n\t\t\tnewHeight = newWidth * ratio1;\r\n\t\t} else {\r\n\t\t\tnewHeight = maxHeight;\r\n\t\t}\r\n\r\n\t\t// Extending canvas\r\n\t\tif( splitter === \"e\" ) {\r\n\t\t\twidth += Math.round( ( maxWidth - newWidth ) * ( width / newWidth ) );\r\n\t\t\theight += Math.round( ( maxHeight - newHeight ) * ( height / newHeight ) );\r\n\t\t\tnewWidth = maxWidth;\r\n\t\t\tnewHeight = maxHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the size\r\n\tcanvas.style.width = Math.floor( newWidth ) + \"px\";\r\n\tcanvas.style.height = Math.floor( newHeight ) + \"px\";\r\n\r\n\t// Set the margins\r\n\tcanvas.style.marginLeft = Math.floor( ( maxWidth - newWidth ) / 2 ) + \"px\";\r\n\tcanvas.style.marginTop = Math.floor( ( maxHeight - newHeight ) / 2 ) + \"px\";\r\n\r\n\t// Set the actual canvas dimensions\r\n\tif( splitter !== \":\" ) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t} else {\r\n\r\n\t\t// For ratio mode, set to container size\r\n\t\tcanvas.width = Math.floor( newWidth );\r\n\t\tcanvas.height = Math.floor( newHeight );\r\n\t}\r\n}\r\n\r\n// Get size of container\r\nfunction getSize( element ) {\r\n\treturn {\r\n\t\t\"width\": element.offsetWidth || element.clientWidth || element.width,\r\n\t\t\"height\": element.offsetHeight || element.clientHeight || element.height\r\n\t};\r\n}\r\n\r\n// Resizes a single screen\r\nfunction resizeScreen( screenData ) {\r\n\r\n\t// Skip if screen is not visible or should not be resized\r\n\tif(\r\n\t\tscreenData.isOffscreen ||\r\n\t\tscreenData.isNoStyles ||\r\n\t\tscreenData.canvas.offsetParent === null\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Get the previous size (stored from last time)\r\n\tconst fromSize = screenData.previousOffsetSize || {\r\n\t\t\"width\": screenData.canvas.offsetWidth,\r\n\t\t\"height\": screenData.canvas.offsetHeight\r\n\t};\r\n\r\n\t// Draw the canvas to the buffer\r\n\tscreenData.bufferContext.clearRect( 0, 0, screenData.width, screenData.height );\r\n\tscreenData.bufferContext.drawImage( screenData.canvas, 0, 0 );\r\n\r\n\tlet size;\r\n\r\n\tif( screenData.aspectData ) {\r\n\r\n\t\t// Update the canvas to the new size\r\n\t\tsize = getSize( screenData.container );\r\n\t\tsetCanvasSize( screenData.aspectData, screenData.canvas, size.width, size.height );\r\n\r\n\t} else {\r\n\r\n\t\t// Update canvas to fullscreen absolute pixels\r\n\t\tsize = getSize( screenData.canvas );\r\n\t\tscreenData.canvas.width = size.width;\r\n\t\tscreenData.canvas.height = size.height;\r\n\r\n\t}\r\n\r\n\t// Resize the client rectangle\r\n\tscreenData.clientRect = screenData.canvas.getBoundingClientRect();\r\n\r\n\t// Draw the buffer back onto the canvas\r\n\tscreenData.context.drawImage(\r\n\t\tscreenData.bufferCanvas, 0, 0, screenData.width, screenData.height\r\n\t);\r\n\r\n\t// Set the new buffer size\r\n\tscreenData.bufferCanvas.width = screenData.canvas.width;\r\n\tscreenData.bufferCanvas.height = screenData.canvas.height;\r\n\r\n\t// Set the new screen size\r\n\tscreenData.width = screenData.canvas.width;\r\n\tscreenData.height = screenData.canvas.height;\r\n\r\n\t// Get the new size after resize\r\n\tconst toSize = {\r\n\t\t\"width\": screenData.canvas.offsetWidth,\r\n\t\t\"height\": screenData.canvas.offsetHeight\r\n\t};\r\n\r\n\t// Send the resize data to the client\r\n\tif( screenData.resizeCallback ) {\r\n\t\tif(\r\n\t\t\tfromSize.width !== toSize.width ||\r\n\t\t\tfromSize.height !== toSize.height\r\n\t\t) {\r\n\t\t\tscreenData.resizeCallback( screenData.api, fromSize, toSize );\r\n\t\t}\r\n\t}\r\n\r\n\t// Store the new size for next time\r\n\tscreenData.previousOffsetSize = toSize;\r\n}\r\n", "/**\r\n * Pi.js - Renderer Module\r\n * \r\n * Manages the screens image data including rendering the screen and getting the image data\r\n * Also handles clearing the screen and setting the image pixel data\r\n * \r\n * @module core/renderer\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport * as screenManager from \"./screen-manager\";\r\nimport * as utils from \"./utils\";\r\n\r\nconst m_pens = {};\r\nconst m_blends = {};\r\n\r\n\r\n/***************************************************************************************************\r\n * Module Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// Initialize the renderer\r\nexport function init() {\r\n\r\n\t// Add pens\r\n\taddPen( \"pixel\", penSetPixel, \"square\" );\r\n\taddPen( \"square\", penSquare, \"square\" );\r\n\taddPen( \"circle\", penCircle, \"round\" );\r\n\r\n\t// Add blends blend\r\n\taddBlend( \"replace\", blendReplace );\r\n\taddBlend( \"alpha\", blendAlpha );\r\n\r\n\t// Add Render Screen Data\r\n\tscreenManager.addScreenDataItem( \"imageData\", null );\r\n\tscreenManager.addScreenDataItem( \"imageData2\", null );\r\n\tscreenManager.addScreenDataItem( \"isDirty\", false );\r\n\tscreenManager.addScreenDataItem( \"penData\", { \"cap\": \"square\", \"size\": 1 } );\r\n\tscreenManager.addScreenDataItem( \"blendData\", { \"noise\": null } );\r\n\tscreenManager.addScreenDataItem( \"isAutoRender\", true );\r\n\tscreenManager.addScreenDataItem( \"autoRenderMicrotaskScheduled\", false );\r\n\r\n\t// Add Screen Internal Commands\r\n\tscreenManager.addScreenInternalCommands( \"pen\", m_pens[ \"pixel\" ].fn );\r\n\tscreenManager.addScreenInternalCommands( \"blend\", m_blends[ \"replace\" ].fn );\r\n\tscreenManager.addScreenInternalCommands( \"blendColor\", blendGetColorNoNoise );\r\n}\r\n\r\nexport function getImageData( screenData ) {\r\n\tif( screenData.isDirty === false || screenData.imageData === null ) {\r\n\t\tscreenData.imageData = screenData.context.getImageData(\r\n\t\t\t0, 0, screenData.width, screenData.height\r\n\t\t);\r\n\t\tscreenData.imageData2 = screenData.imageData.data;\r\n\t}\r\n}\r\n\r\nexport function setImageDirty( screenData ) {\r\n\tif( screenData.isDirty === false ) {\r\n\t\tscreenData.isDirty = true;\r\n\t\tif(\r\n\t\t\tscreenData.isAutoRender && \r\n\t\t\t! screenData.autoRenderMicrotaskScheduled \r\n\t\t) {\r\n\t\t\tscreenData.autoRenderMicrotaskScheduled = true;\r\n\t\t\tutils.queueMicrotask( function () {\r\n\t\t\t\tif( screenData.isAutoRender ) {\r\n\t\t\t\t\tscreenData.api.render();\r\n\t\t\t\t}\r\n\t\t\t\tscreenData.autoRenderMicrotaskScheduled = false;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * External API Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// Render command\r\nscreenManager.addCommand( \"render\", render, [] );\r\nfunction render( screenData ) {\r\n\tif( screenData.imageData && screenData.isDirty ) {\r\n\t\tscreenData.context.putImageData( screenData.imageData, 0, 0 );\r\n\t}\r\n\tscreenData.isDirty = false;\r\n}\r\n\r\n// cls (clear screen) command\r\nscreenManager.addCommand( \"cls\", cls, [ \"x\", \"y\", \"width\", \"height\" ] );\r\nfunction cls( screenData, options ) {\r\n\tconst x = utils.getInt( options.x, 0 );\r\n\tconst y = utils.getInt( options.y, 0 );\r\n\tconst width = utils.getInt( options.width, screenData.width );\r\n\tconst height = utils.getInt( options.height, screenData.height );\r\n\r\n\t// If clearing a partial region, render first to preserve other content\r\n\tif( x !== 0 || y !== 0 || width !== screenData.width || height !== screenData.height ) {\r\n\t\tscreenData.api.render();\r\n\t\tscreenData.context.clearRect( x, y, width, height );\r\n\t} else {\r\n\r\n\t\t// Full screen clear - reset everything\r\n\t\tscreenData.context.clearRect( x, y, width, height );\r\n\t\tscreenData.imageData = null;\r\n\t\tscreenData.isDirty = false;\r\n\t\tscreenData.printCursor.x = 0;\r\n\t\tscreenData.printCursor.y = 0;\r\n\t\tscreenData.cursor.x = 0;\r\n\t\tscreenData.cursor.y = 0;\r\n\t}\r\n}\r\n\r\n// setAutoRender command\r\nscreenManager.addCommand( \"setAutoRender\", setAutoRender, [ \"isAutoRender\" ] );\r\nfunction setAutoRender( screenData, options ) {\r\n\tconst isAutoRender = !!options.isAutoRender;\r\n\r\n\tscreenData.isAutoRender = isAutoRender;\r\n\r\n\t// If enabling auto-render, render any pending changes immediately\r\n\tif( isAutoRender ) {\r\n\t\tscreenData.api.render();\r\n\t}\r\n}\r\n\r\n// Set Pen Command\r\nscreenManager.addCommand( \"setPen\", setPen, [ \"pen\", \"size\" ] );\r\nfunction setPen( screenData, options ) {\r\n\tconst pen = options.pen;\r\n\tlet size = utils.getFloat( options.size, null );\r\n\r\n\tif( !m_pens[ pen ] ) {\r\n\t\tconst error = new TypeError(\r\n\t\t\t`setPen: parameter pen is not a valid pen.`\r\n\t\t);\r\n\t\terror.code = \"INVALID_PEN\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( size === null ) {\r\n\t\tconst error = new TypeError( \"setPen: parameter size must be a number\" );\r\n\t\terror.code = \"INVALID_SIZE\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( pen === \"pixel\" ) {\r\n\t\tsize = 1;\r\n\t}\r\n\r\n\t// Set the minimum pen size to 1\r\n\tif( size < 1 ) {\r\n\t\tsize = 1;\r\n\t}\r\n\r\n\t// Handle special case of size of one\r\n\tif( size === 1 ) {\r\n\r\n\t\t// Size is one so only draw one pixel\r\n\t\tscreenData.pen = m_pens[ \"pixel\" ].fn;\r\n\r\n\t\t// Set the line width for context draw\r\n\t\tscreenData.context.lineWidth = 1;\r\n\t} else {\r\n\r\n\t\t// Set the draw mode for pixel draw\r\n\t\tscreenData.pen = m_pens[ pen ].fn;\r\n\r\n\t\t// Set the line width for context draw\r\n\t\tscreenData.context.lineWidth = size;\r\n\t}\r\n\r\n\tscreenData.penData.size = size;\r\n\tscreenData.penData.cap = m_pens[ pen ].cap;\r\n\tscreenData.context.lineCap = m_pens[ pen ].cap;\r\n}\r\n\r\n// Set blend mode\r\nscreenManager.addCommand( \"setBlend\", setBlend, [ \"mode\", \"noise\" ] );\r\nfunction setBlend( screenData, options ) {\r\n\tconst mode = options.mode;\r\n\tlet noise = options.noise;\r\n\r\n\tif( !m_blends[ mode ] ) {\r\n\t\tconst error = new TypeError(\r\n\t\t\t`setBlend: Argument blend is not a valid blend mode.`\r\n\t\t);\r\n\t\terror.code = \"INVALID_BLEND_MODE\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( Array.isArray( noise ) ) {\r\n\t\tfor( let i = 0; i < noise.length; i++ ) {\r\n\t\t\tif( isNaN( noise[ i ] ) ) {\r\n\t\t\t\tconst error = new TypeError(\r\n\t\t\t\t\t\"setBlend: parameter noise array contains an invalid value\"\r\n\t\t\t\t);\r\n\t\t\t\terror.code = \"INVALID_NOISE_VALUE\";\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t\tscreenData.blendColor = blendGetColorNoise;\r\n\t\tscreenData.blendData.noise = noise;\r\n\t} else {\r\n\t\tnoise = utils.getInt( noise, null );\r\n\t\tif( noise === null ) {\r\n\t\t\tscreenData.blendColor = blendGetColorNoNoise;\r\n\t\t\tscreenData.blendData.noise = null;\r\n\t\t} else {\r\n\t\t\tscreenData.blendColor = blendGetColorNoise;\r\n\t\t\tscreenData.blendData.noise = utils.clamp( noise, 0, 255 );\r\n\t\t}\r\n\t}\r\n\r\n\tscreenData.blend = m_blends[ mode ].fn;\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Internal Commands\r\n **************************************************************************************************/\r\n\r\n\r\nfunction addPen( name, fn, cap ) {\r\n\tm_pens[ name ] = { fn, cap, \"size\": 1 };\r\n}\r\n\r\nfunction addBlend( name, fn ) {\r\n\tm_blends[ name ] = { fn };\r\n}\r\n\r\n\r\n// Default Blend Color Picker\r\nfunction blendGetColorNoNoise( screenData, c ) {\r\n\treturn c;\r\n}\r\n\r\n// Default Noise Blend Color Picker\r\nfunction blendGetColorNoise( screenData, c ) {\r\n\tconst noise = screenData.blendData.noise;\r\n\tconst c2 = { \"r\": c.r, \"g\": c.g, \"b\": c.b, \"a\": c.a };\r\n\tconst half = noise / 2;\r\n\r\n\tif( Array.isArray( noise ) ) {\r\n\t\tc2.r = utils.clamp(\r\n\t\t\tMath.round( c2.r + utils.rndRange( -noise[ 0 ], noise[ 0 ] ) ),\t0, 255\r\n\t\t);\r\n\t\tc2.g = utils.clamp(\r\n\t\t\tMath.round( c2.g + utils.rndRange( -noise[ 1 ], noise[ 1 ] ) ), 0, 255\r\n\t\t);\r\n\t\tc2.b = utils.clamp(\r\n\t\t\tMath.round( c2.b + utils.rndRange( -noise[ 2 ], noise[ 2 ] ) ), 0, 255\r\n\t\t);\r\n\t\tc2.a = utils.clamp(\r\n\t\t\tc2.a + utils.rndRange( -noise[ 3 ], noise[ 3 ] ), 0, 255\r\n\t\t);\r\n\t} else {\r\n\t\tconst change = Math.round( Math.random() * noise - half );\r\n\t\tc2.r = utils.clamp( c2.r + change, 0, 255 );\r\n\t\tc2.g = utils.clamp( c2.g + change, 0, 255 );\r\n\t\tc2.b = utils.clamp( c2.b + change, 0, 255 );\r\n\t}\r\n\r\n\treturn c2;\r\n}\r\n\r\n/***************************************************************************************************\r\n * Blends\r\n **************************************************************************************************/\r\n\r\n\r\nfunction blendReplace( screenData, x, y, c ) {\r\n\r\n\tc = screenData.blendColor( screenData, c );\r\n\r\n\t// Get the image data\r\n\tconst data = screenData.imageData2;\r\n\r\n\t// Calculate the index\r\n\tconst i = ( ( screenData.width * y ) + x ) * 4;\r\n\r\n\tdata[ i ] = c.r;\r\n\tdata[ i + 1 ] = c.g;\r\n\tdata[ i + 2 ] = c.b;\r\n\tdata[ i + 3 ] = c.a;\r\n}\r\n\r\nfunction blendAlpha( screenData, x, y, c ) {\r\n\r\n\tc = screenData.blendColor( screenData, c );\r\n\t\r\n\t// Get the image data\r\n\tconst data = screenData.imageData2\r\n\r\n\t// Calculate the index\r\n\tconst i = ( ( screenData.width * y ) + x ) * 4;\r\n\r\n\t// Normalize alpha to [ 0, 1 ]\r\n\tconst srcA = c.a / 255;\r\n\tconst dstA = data[ i + 3 ] / 255;\r\n\tconst outA = srcA + dstA * ( 1 - srcA );\r\n\r\n\t// Blend the RGB channels\r\n\tdata[ i ] = Math.round( ( c.r * srcA + data[ i ] * dstA * ( 1 - srcA ) ) / outA );\r\n\tdata[ i + 1 ] = Math.round( ( c.g * srcA + data[ i + 1 ] * dstA * ( 1 - srcA ) ) / outA );\r\n\tdata[ i + 2 ] = Math.round( ( c.b * srcA + data[ i + 2 ] * dstA * ( 1 - srcA ) ) / outA );\r\n\r\n\t// Update alpha channel\r\n\tdata[ i + 3 ] = Math.round( outA * 255 );\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Pens\r\n **************************************************************************************************/\r\n\r\n\r\n// Set pixel pen\r\nfunction penSetPixel( screenData, x, y, c ) {\r\n\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\r\n\t\treturn;\r\n\t}\r\n\tscreenData.blend( screenData, x, y, c );\r\n}\r\n\r\nfunction penSquare( screenData, x, y, c ) {\r\n\r\n\t// Size must always be an odd integer\r\n\tconst size = Math.round( screenData.penData.size ) | 1;\r\n\r\n\t// Compute the center offset of the square\r\n\tconst offset = Math.round( size / 2 ) - 1;\r\n\r\n\t// Calculate bounds and clip to screen\r\n\tconst startX = utils.clamp( x - offset, 0, screenData.width );\r\n\tconst endX = utils.clamp( x - offset + size, 0, screenData.width );\r\n\tconst startY = utils.clamp( y - offset, 0, screenData.height );\r\n\tconst endY = utils.clamp( y - offset + size, 0, screenData.height );\r\n\r\n\t// Draw the clipped square\r\n\tfor( let py = startY; py < endY; py++ ) {\r\n\t\tfor( let px = startX; px < endX; px++ ) {\r\n\t\t\tscreenData.blend( screenData, px, py, c );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction penCircle( screenData, x, y, c ) {\r\n\r\n\t// Pen circle size must be an integer\r\n\tconst baseSize = Math.round( screenData.penData.size );\r\n\r\n\t// Special case for pen size 2\r\n\tif( baseSize === 2 ) {\r\n\t\tif( x >= 0 && x < screenData.width && y >= 0 && y < screenData.height ) {\r\n\t\t\tscreenData.blend( screenData, x, y, c );\r\n\t\t}\r\n\t\tif( x + 1 >= 0 && x + 1 < screenData.width && y >= 0 && y < screenData.height ) {\r\n\t\t\tscreenData.blend( screenData, x + 1, y, c );\r\n\t\t}\r\n\t\tif( x - 1 >= 0 && x - 1 < screenData.width && y >= 0 && y < screenData.height ) {\r\n\t\t\tscreenData.blend( screenData, x - 1, y, c );\r\n\t\t}\r\n\t\tif( x >= 0 && x < screenData.width && y + 1 >= 0 && y + 1 < screenData.height ) {\r\n\t\t\tscreenData.blend( screenData, x, y + 1, c );\r\n\t\t}\r\n\t\tif( x >= 0 && x < screenData.width && y - 1 >= 0 && y - 1 < screenData.height ) {\r\n\t\t\tscreenData.blend( screenData, x, y - 1, c );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Double size to get the size of the outer box\r\n\tconst diameter = baseSize * 2;\r\n\r\n\t// Half is size of radius\r\n\tconst half = baseSize;\r\n\r\n\t// Calculate the center of circle\r\n\tconst offset = half - 1;\r\n\r\n\t// Pre-calculate squared radius threshold\r\n\t// We compare squared distance to (half - 0.5)^2\r\n\tconst radiusThresholdSq = ( half - 0.5 ) * ( half - 0.5 );\r\n\r\n\t// Calculate bounds and clip to screen\r\n\tconst startX = utils.clamp( x - offset, 0, screenData.width );\r\n\tconst endX = utils.clamp( x - offset + diameter, 0, screenData.width );\r\n\tconst startY = utils.clamp( y - offset, 0, screenData.height );\r\n\tconst endY = utils.clamp( y - offset + diameter, 0, screenData.height );\r\n\r\n\t// Loop through the clipped square boundary\r\n\tfor( let py = startY; py < endY; py++ ) {\r\n\t\tconst dy = py - y;\r\n\r\n\t\tfor( let px = startX; px < endX; px++ ) {\r\n\t\t\tconst dx = px - x;\r\n\r\n\t\t\t// Compute the squared distance from the center\r\n\t\t\tconst distSq = dx * dx + dy * dy;\r\n\r\n\t\t\t// Only draw the pixel if its squared distance is less than the threshold\r\n\t\t\tif( distSq < radiusThresholdSq ) {\r\n\t\t\t\tscreenData.blend( screenData, px, py, c );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "/**\n * Pi.js - Colors Module\n * \n * Manages the color palettes and color values\n * \n * @module core/colors\n */\n\n\"use strict\";\n\nimport * as commands from \"./commands\";\nimport * as utils from \"./utils\";\nimport * as screenManager from \"./screen-manager\";\nimport * as renderer from \"./renderer\";\n\nlet m_defaultPal = [];\nlet m_defaultPalMap = new Map();\nlet m_defaultColor = -1;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize color defaults\nexport function init() {\n\n\t// Default 256-color palette (CGA + extended colors) - raw hex strings\n\tconst defaultPaletteHex = [\n\t\t\"#0000AA\", \"#00AA00\", \"#00AAAA\", \"#AA0000\", \"#AA00AA\", \"#AA5500\", \"#AAAAAA\", \"#555555\",\n\t\t\"#5555FF\", \"#55FF55\", \"#55FFFF\", \"#FF5555\", \"#FF55FF\", \"#FFFF55\", \"#FFFFFF\", \"#000000\",\n\t\t\"#141414\", \"#202020\", \"#2D2D2D\", \"#393939\", \"#454545\", \"#515151\", \"#616161\", \"#717171\",\n\t\t\"#828282\", \"#929292\", \"#A2A2A2\", \"#B6B6B6\", \"#CACACA\", \"#E3E3E3\", \"#FFFFFF\", \"#0000FF\",\n\t\t\"#4100FF\", \"#7D00FF\", \"#BE00FF\", \"#FF00FF\", \"#FF00BE\", \"#FF007D\", \"#FF0041\", \"#FF0000\",\n\t\t\"#FF4100\", \"#FF7D00\", \"#FFBE00\", \"#FFFF00\", \"#BEFF00\", \"#7DFF00\", \"#41FF00\", \"#00FF00\",\n\t\t\"#00FF41\", \"#00FF7D\", \"#00FFBE\", \"#00FFFF\", \"#00BEFF\", \"#007DFF\", \"#0041FF\", \"#7D7DFF\",\n\t\t\"#9E7DFF\", \"#BE7DFF\", \"#DF7DFF\", \"#FF7DFF\", \"#FF7DDF\", \"#FF7DBE\", \"#FF7D9E\", \"#FF7D7D\",\n\t\t\"#FF9E7D\", \"#FFBE7D\", \"#FFDF7D\", \"#FFFF7D\", \"#DFFF7D\", \"#BEFF7D\", \"#9EFF7D\", \"#7DFF7D\",\n\t\t\"#7DFF9E\", \"#7DFFBE\", \"#7DFFDF\", \"#7DFFFF\", \"#7DDFFF\", \"#7DBEFF\", \"#7D9EFF\", \"#B6B6FF\",\n\t\t\"#C6B6FF\", \"#DBB6FF\", \"#EBB6FF\", \"#FFB6FF\", \"#FFB6EB\", \"#FFB6DB\", \"#FFB6C6\", \"#FFB6B6\",\n\t\t\"#FFC6B6\", \"#FFDBB6\", \"#FFEBB6\", \"#FFFFB6\", \"#EBFFB6\", \"#DBFFB6\", \"#C6FFB6\", \"#B6FFB6\",\n\t\t\"#B6FFC6\", \"#B6FFDB\", \"#B6FFEB\", \"#B6FFFF\", \"#B6EBFF\", \"#B6DBFF\", \"#B6C6FF\", \"#000071\",\n\t\t\"#1C0071\", \"#390071\", \"#550071\", \"#710071\", \"#710055\", \"#710039\", \"#71001C\", \"#710000\",\n\t\t\"#711C00\", \"#713900\", \"#715500\", \"#717100\", \"#557100\", \"#397100\", \"#1C7100\", \"#007100\",\n\t\t\"#00711C\", \"#007139\", \"#007155\", \"#007171\", \"#005571\", \"#003971\", \"#001C71\", \"#393971\",\n\t\t\"#453971\", \"#553971\", \"#613971\", \"#713971\", \"#713961\", \"#713955\", \"#713945\", \"#713939\",\n\t\t\"#714539\", \"#715539\", \"#716139\", \"#717139\", \"#617139\", \"#557139\", \"#457139\", \"#397139\",\n\t\t\"#397145\", \"#397155\", \"#397161\", \"#397171\", \"#396171\", \"#395571\", \"#394571\", \"#515171\",\n\t\t\"#595171\", \"#615171\", \"#695171\", \"#715171\", \"#715169\", \"#715161\", \"#715159\", \"#715151\",\n\t\t\"#715951\", \"#716151\", \"#716951\", \"#717151\", \"#697151\", \"#617151\", \"#597151\", \"#517151\",\n\t\t\"#517159\", \"#517161\", \"#517169\", \"#517171\", \"#516971\", \"#516171\", \"#515971\", \"#000041\",\n\t\t\"#100041\", \"#200041\", \"#310041\", \"#410041\", \"#410031\", \"#410020\", \"#410010\", \"#410000\",\n\t\t\"#411000\", \"#412000\", \"#413100\", \"#414100\", \"#314100\", \"#204100\", \"#104100\", \"#004100\",\n\t\t\"#004110\", \"#004120\", \"#004131\", \"#004141\", \"#003141\", \"#002041\", \"#001041\", \"#202041\",\n\t\t\"#282041\", \"#312041\", \"#392041\", \"#412041\", \"#412039\", \"#412031\", \"#412028\", \"#412020\",\n\t\t\"#412820\", \"#413120\", \"#413920\", \"#414120\", \"#394120\", \"#314120\", \"#284120\", \"#204120\",\n\t\t\"#204128\", \"#204131\", \"#204139\", \"#204141\", \"#203941\", \"#203141\", \"#202841\", \"#2D2D41\",\n\t\t\"#312D41\", \"#352D41\", \"#3D2D41\", \"#412D41\", \"#412D3D\", \"#412D35\", \"#412D31\", \"#412D2D\",\n\t\t\"#41312D\", \"#41352D\", \"#413D2D\", \"#41412D\", \"#3D412D\", \"#35412D\", \"#31412D\", \"#2D412D\",\n\t\t\"#2D4131\", \"#2D4135\", \"#2D413D\", \"#2D4141\", \"#2D3D41\", \"#2D3541\", \"#2D3141\", \"#000000\",\n\t\t\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"\n\t];\n\n\t// Set the default pal and color\n\tsetDefaultPal( { \"pal\": defaultPaletteHex } );\n\tsetDefaultColor( { \"color\": 7 } );\n\n\t// Add getters for screen manager to get defaults for dynamic items\n\tscreenManager.addScreenDataItemGetter( \"pal\", () => m_defaultPal );\n\tscreenManager.addScreenDataItemGetter( \"color\", () => m_defaultColor );\n\tscreenManager.addScreenDataItemGetter( \"palMap\", () => m_defaultPalMap );\n}\n\nexport { findColorIndexByColorValue, getColorValueByRawInput };\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// Set default pal\ncommands.addCommand( \"setDefaultPal\", setDefaultPal, [ \"pal\" ] );\nfunction setDefaultPal( options ) {\n\tconst pal = options.pal;\n\n\tif( !Array.isArray( pal ) ) {\n\t\tconst error = new TypeError( \"setDefaultPal: Parameter pal must be an array.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\tif( pal.length === 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setDefaultPal: Parameter pal must have at least one color value.\"\n\t\t);\n\t\terror.code = \"EMPTY_PALETTE\";\n\t\tthrow error;\n\t}\n\n\t// Create default pal with the 0'th item set as a black transparent color\n\tm_defaultPal = [ utils.convertToColor( [ 0, 0, 0, 0 ] ) ];\n\n\t// Convert palette to color format\n\tfor( let i = 0; i < pal.length; i++ ) {\n\t\tconst c = utils.convertToColor( pal[ i ] );\n\t\tif( c === null ) {\n\t\t\tconsole.warn( `setDefaultPal: Invalid color value inside array pal at index: ${i}.` );\n\t\t\tm_defaultPal.push( utils.convertToColor( \"#000000\" ) );\n\t\t} else {\n\t\t\tm_defaultPal.push( c );\n\t\t}\n\t}\n\n\t// Set the default pal map\n\tm_defaultPalMap = new Map();\n\tfor( let i = 0; i < m_defaultPal.length; i++ ) {\n\t\tm_defaultPalMap.set( m_defaultPal[ i ].key, i );\n\t}\n\n\t// Make sure default color is in the new palette\n\tif( !m_defaultPalMap.has( m_defaultColor.key ) ) {\n\t\tm_defaultColor = m_defaultPal[ 1 ];\n\t}\n}\n\n// Set default color\ncommands.addCommand( \"setDefaultColor\", setDefaultColor, [ \"color\" ] );\nfunction setDefaultColor( options ) {\n\tlet c = options.color;\n\n\tif( !isNaN( Number( c ) ) && m_defaultPal.length > c ) {\n\t\tm_defaultColor = m_defaultPal[ c ];\n\t} else {\n\t\tc = utils.convertToColor( c );\n\t\tif( c === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setDefaultColor: Parameter color is not a valid color format.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\t\tm_defaultColor = c;\n\t}\n}\n\n// Set color\nscreenManager.addCommand( \"setColor\", setColor, [ \"color\", \"isAddToPalette\" ] );\nfunction setColor( screenData, options ) {\n\tconst colorInput = options.color;\n\tconst isAddToPalette = !!options.isAddToPalette;\n\n\tlet colorValue;\n\n\t// If colorInput is an number then get colorValue for pal\n\tif( typeof colorInput === \"number\" ) {\n\t\tif( colorInput >= screenData.pal.length ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setColor: Parameter color index is not in pal.`\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\t\tcolorValue = screenData.pal[ colorInput ];\n\t} else {\n\n\t\t// Convert the color to a colorValue\n\t\tcolorValue = utils.convertToColor( colorInput );\n\n\t\t// If we were unable to convert this color than it is not a valid color format\n\t\tif( colorValue === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t`setColor: Parameter color is not a valid color format.`\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\t// If we are adding to palette then we need to do an additional check to see if the color\n\t\t// is already in the palette or not\n\t\tif( isAddToPalette && findColorIndexByColorValue( screenData, colorValue ) === null ) {\n\t\t\tscreenData.pal.push( colorValue );\n\t\t\tscreenData.palMap.set( colorValue.key, screenData.pal.length - 1 );\n\t\t}\n\t}\n\n\t// Update the color values\n\tscreenData.color = colorValue;\n\tscreenData.context.fillStyle = screenData.color.hex;\n\tscreenData.context.strokeStyle = screenData.color.hex;\n\n\treturn true;\n}\n\n// TODO: Add getColor command to get the active screen color\n\n// Given a color value, find the index from the color palette.\nscreenManager.addCommand( \"getPalIndex\", getPalIndex, [ \"color\", \"tolerance\" ] );\nfunction getPalIndex( screenData, options ) {\n\tlet color = options.color;\n\tlet tolerance = utils.getFloat( options.tolerance, 1 );\n\n\t// Validate tolerance variable\n\tif( tolerance < 0 || tolerance > 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"getPalIndex: Parameter tolerance must be a number between 0 and 1.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\t// Convert to color value\n\tconst colorValue = utils.convertToColor( color );\n\tif( colorValue === null ) {\n\t\tconst error = new TypeError(\n\t\t\t`getPalIndex: Parameter color is not a valid color format.`\n\t\t);\n\t\terror.code = \"INVALID_COLOR\";\n\t\tthrow error;\n\t}\n\n\tconst index = findColorIndexByColorValue( screenData, colorValue, tolerance );\n\tif( index === null ) {\n\t\treturn false;\n\t}\n\treturn index;\n}\n\n// Set the background color of the canvas\nscreenManager.addCommand( \"setBgColor\", setBgColor, [ \"color\" ] );\nfunction setBgColor( screenData, options ) {\n\tconst color = options.color;\n\tlet bc;\n\n\tif( Number.isInteger( color ) ) {\n\t\tbc = screenData.pal[ color ];\n\t} else {\n\t\tbc = utils.convertToColor( color );\n\t}\n\tif( bc && typeof bc.hex === \"string\" ) {\n\t\tscreenData.canvas.style.backgroundColor = bc.hex;\n\t} else {\n\t\tconst error = new TypeError( \"bgColor: invalid color value for parameter color.\" );\n\t\terror.code = \"INVALID_COLOR\";\n\t\tthrow error;\n\t}\n}\n\n// Set the background color of the container\nscreenManager.addCommand( \"setContainerBgColor\", setContainerBgColor, [ \"color\" ] );\nfunction setContainerBgColor( screenData, options ) {\n\tconst color = options.color;\n\tlet bc;\n\tif( screenData.container ) {\n\t\tif( Number.isInteger( color ) ) {\n\t\t\tbc = screenData.pal[ color ];\n\t\t} else {\n\t\t\tbc = utils.convertToColor( color );\n\t\t}\n\t\tif( bc && typeof bc.hex === \"string\" ) {\n\t\t\tscreenData.container.style.backgroundColor = bc.hex;\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"containerBgColor: invalid color value for parameter color.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\tthrow error\n\t\t}\n\t}\n}\n\n// Set palette color\nscreenManager.addCommand( \"setPalColor\", setPalColor, [ \"index\", \"color\" ] );\nfunction setPalColor( screenData, options ) {\n\tconst index = options.index;\n\tconst color = options.color;\n\n\t// index must be an integer\n\tif(\n\t\t!Number.isInteger( index ) ||\n\t\tindex < 0 ||\n\t\tindex >= screenData.pal.length\n\t) {\n\t\tconst error = new RangeError(\n\t\t\t\"setPalColor: Parameter index must be an integer value.\"\n\t\t);\n\t\terror.code = \"INVALID_INDEX\";\n\t\tthrow error;\n\t}\n\n\t// index cannot be 0\n\tif( index === 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setPalColor: Parameter index cannot be 0, this is reserved for transparency. To set \" +\n\t\t\t\"background color of the screen use the setBgColor command.\"\n\t\t);\n\t\terror.code = \"INVALID_INDEX\";\n\t\tthrow error;\n\t}\n\n\t// Get the color value\n\tconst colorValue = utils.convertToColor( color );\n\tif( colorValue === null ) {\n\t\tconst error = new TypeError(\n\t\t\t\"setPalColor: Parameter color is not a valid color format.\"\n\t\t);\n\t\terror.code = \"INVALID_COLOR\";\n\t\tthrow error;\n\t}\n\n\t// Store the old color before replacing\n\tconst oldColor = screenData.pal[ index ];\n\n\t// Check if we are changing the current selected fore color\n\tif( screenData.color.key === oldColor.key ) {\n\t\tscreenData.color = colorValue;\n\t\tscreenData.context.fillStyle = colorValue.hex;\n\t\tscreenData.context.strokeStyle = colorValue.hex;\n\t}\n\n\t// Set the new palette color\n\tscreenData.pal[ index ] = colorValue;\n\n\t// Update the palMap - remove old color entry and add new one\n\tscreenData.palMap.delete( oldColor.key );\n\tscreenData.palMap.set( colorValue.key, index );\n}\n\n// Get palette\nscreenManager.addCommand( \"getPal\", getPal, [] );\nfunction getPal( screenData ) {\n\tconst filteredPal = [];\n\n\t// Need to explicitly convert each color because they need to have the \n\tfor( let i = 1; i < screenData.pal.length; i += 1 ) {\n\t\tfilteredPal.push( { ...screenData.pal[ i ] } );\n\t}\n\treturn filteredPal;\n}\n\n// Get palette with 0'th item transparent black color\nscreenManager.addCommand( \"getPalInternal\", getPalInternal, [] );\nfunction getPalInternal( screenData ) {\n\tconst filteredPal = [];\n\tfor( let i = 0; i < screenData.pal.length; i += 1 ) {\n\t\tfilteredPal.push( { ...screenData.pal[ i ] } );\n\t}\n\treturn filteredPal;\n}\n\n// Set entire palette\nscreenManager.addCommand( \"setPal\", setPal, [ \"pal\" ] );\nfunction setPal( screenData, options ) {\n\tconst pal = options.pal;\n\n\tif( !Array.isArray( pal ) ) {\n\t\tconst error = new TypeError( \"setPal: Parameter pal is must be an array.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\tif( pal.length === 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setPal: Parameter pal must have at least one color value.\"\n\t\t);\n\t\terror.code = \"EMPTY_PALETTE\";\n\t\tthrow error;\n\t}\n\n\t// Create a new pal with 0'th color set to black transparent\n\tconst newPal = [ utils.convertToColor( [ 0, 0, 0, 0 ] ) ];\n\n\t// Convert all colors and validate\n\tfor( let i = 0; i < pal.length; i++ ) {\n\t\tconst c = utils.convertToColor( pal[ i ] );\n\t\tif( c === null ) {\n\t\t\tconsole.warn( `setPal: Invalid color value inside array pal at index: ${i}.` );\n\t\t\tnewPal.push( utils.convertToColor( \"#000000\" ) );\n\t\t} else {\n\t\t\tnewPal.push( c );\n\t\t}\n\t}\n\n\t// Set the new palette\n\tscreenData.pal = newPal;\n\n\t// Clear the palMap since we've replaced the entire palette\n\tscreenData.palMap = new Map();\n\n\t// Rebuild palMap for new palette colors\n\tfor( let i = 0; i < newPal.length; i++ ) {\n\t\tscreenData.palMap.set( newPal[ i ].key, i );\n\t}\n\n\t// Check if current drawing color needs to be updated\n\t// Find the new palette index that best matches the current color\n\tconst currentColor = screenData.color;\n\tconst newIndex = findColorIndexByColorValue( screenData, currentColor );\n\tif( newIndex !== null ) {\n\t\tscreenData.color = newPal[ newIndex ];\n\t\tscreenData.context.fillStyle = screenData.color.hex;\n\t\tscreenData.context.strokeStyle = screenData.color.hex;\n\t} else {\n\n\t\t// If current color not found, default to palette index 1\n\t\tscreenData.color = newPal[ 1 ];\n\t\tscreenData.context.fillStyle = screenData.color.hex;\n\t\tscreenData.context.strokeStyle = screenData.color.hex;\n\t}\n}\n\n// replaceColors command - replaces colors on the canvas\nscreenManager.addCommand( \"replaceColors\", replaceColors, [ \"findColors\", \"newColors\" ] );\nfunction replaceColors( screenData, options ) {\n\n\tlet findColors = options.findColors;\n\tconst newColors = options.newColors;\n\n\t// Validate findColors\n\tif( !Array.isArray( findColors ) || !Array.isArray( newColors ) ) {\n\t\tconst error = new TypeError( \"replaceColors: Parameter findColors is must be an array.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\t// Make sure there are enough newColors to replace the findColors\n\tif( findColors.length > newColors.length ) {\n\n\t\t// Remove the findColors that don't have a replacement value\n\t\tlet newArray = [];\n\t\tfor( let i = 0; i < newColors.length; i += 1 ) {\n\t\t\tnewArray.push( findColors[ i ] );\n\t\t}\n\t\tfindColors = newArray;\n\t}\n\n\t// Build the findKeys map\n\tlet findKeys = {};\n\tfor( let i = 0; i < findColors.length; i += 1 ) {\n\n\t\t// Make sure the findColor is a valid color\n\t\tconst findColor = getColorValueByRawInput( screenData, findColors[ i ] );\n\t\tif( findColor === null ) {\n\t\t\t\n\t\t\t// Skip and warn\n\t\t\tconsole.warn(\n\t\t\t\t`replaceColors: Invalid color value inside array findColors at index: ${i}.`\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\t// Make sure the newColor is a valid color\n\t\tlet newColor = getColorValueByRawInput( screenData, newColors[ i ] );\n\t\tif( newColor === null ) {\n\t\t\t\n\t\t\t// Skip and warn\n\t\t\tconsole.warn(\n\t\t\t\t`replaceColors: Invalid color value inside array newColors at index: ${i}.`\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\n\t\tfindKeys[ findColor.key ] = newColor;\n\t}\n\n\t// Might want to throw an exception but trying to make this consistant with replacePalColors\n\tif( Object.keys( findKeys ).length === 0 ) {\n\t\tconst error = new TypeError( \"replaceColors: No valid find and new colors found.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\trenderer.getImageData( screenData );\n\tconst data = screenData.imageData2;\n\n\t// Replace all the colors\n\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\tconst r = data[ i ];\n\t\t\tconst g = data[ i + 1 ];\n\t\t\tconst b = data[ i + 2 ];\n\t\t\tconst a = data[ i + 3 ];\n\t\t\tconst colorKey = utils.generateColorKey( r, g, b, a );\n\t\t\tif( findKeys[ colorKey ] ) {\n\t\t\t\tdata[ i ] = findKeys[ colorKey ].r;\n\t\t\t\tdata[ i + 1 ] = findKeys[ colorKey ].g;\n\t\t\t\tdata[ i + 2 ] = findKeys[ colorKey ].b;\n\t\t\t\tdata[ i + 3 ] = findKeys[ colorKey ].a;\n\t\t\t}\n\t\t}\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\n// replaceColors command - replaces colors on the canvas and in the palette\nscreenManager.addCommand( \"replacePalColors\", replacePalColors, [ \"findColors\", \"newColors\" ] );\nfunction replacePalColors( screenData, options ) {\n\n\tlet findColors = options.findColors;\n\tconst newColors = options.newColors;\n\n\t// Validate findColors\n\tif( !Array.isArray( findColors ) || !Array.isArray( newColors ) ) {\n\t\tconst error = new TypeError(\n\t\t\t\"replacePalColors: Parameter findColors is must be an array.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\t// Make sure there are enough newColors to replace the findColors\n\tif( findColors.length > newColors.length ) {\n\n\t\t// Remove the findColors that don't have a replacement value\n\t\tlet newArray = [];\n\t\tfor( let i = 0; i < newColors.length; i += 1 ) {\n\t\t\tnewArray.push( findColors[ i ] );\n\t\t}\n\t\tfindColors = newArray;\n\t}\n\n\t// Build the findKeys map\n\tlet findKeys = {};\n\tfor( let i = 0; i < findColors.length; i += 1 ) {\n\t\t\n\t\t// Make sure the findColor is a valid color or pal index value\n\t\tlet findColorValue = null;\n\t\tif( Number.isInteger( findColors[ i ] ) && findColors[ i ] < screenData.pal.length ) {\n\t\t\tfindColorValue = screenData.pal[ findColors[ i ] ];\n\t\t}\n\t\tif( findColorValue === null ) {\n\t\t\tfindColorValue = utils.convertToColor( findColors[ i ] );\n\n\t\t\t// If index can't be found skip and continue silently\n\t\t\tif( findColorIndexByColorValue( screenData, findColorValue ) === null ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure the newColor is a valid color\n\t\tlet newColorValue = null;\n\t\tif( Number.isInteger( newColors[ i ] ) && newColors[ i ] < screenData.pal.length ) {\n\t\t\tnewColorValue = screenData.pal[ newColors[ i ] ];\n\t\t}\n\t\tif( newColorValue === null ) {\n\t\t\tnewColorValue = utils.convertToColor( newColors[ i ] );\n\t\t}\n\t\tif( newColorValue === null ) {\n\t\t\tconsole.warn(\n\t\t\t\t`replacePalColors: Invalid color value inside array newColors at index: ${i}.`\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\t\tfindKeys[ findColorValue.key ] = newColorValue;\n\t}\n\n\tif( Object.keys( findKeys ).length === 0 ) {\n\n\t\t// Return silently no need to warn or throw an error this could be what the user expected\n\t\treturn;\n\t}\n\n\trenderer.getImageData( screenData );\n\tconst data = screenData.imageData2;\n\n\t// Replace all the colors in the screen\n\tfor( let y = 0; y < screenData.height; y++ ) {\n\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\tconst r = data[ i ];\n\t\t\tconst g = data[ i + 1 ];\n\t\t\tconst b = data[ i + 2 ];\n\t\t\tconst a = data[ i + 3 ];\n\t\t\tconst colorKey = utils.generateColorKey( r, g, b, a );\n\t\t\tif( findKeys[ colorKey ] ) {\n\t\t\t\tdata[ i ] = findKeys[ colorKey ].r;\n\t\t\t\tdata[ i + 1 ] = findKeys[ colorKey ].g;\n\t\t\t\tdata[ i + 2 ] = findKeys[ colorKey ].b;\n\t\t\t\tdata[ i + 3 ] = findKeys[ colorKey ].a;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Replace the colors in the palette\n\tfor( let i = 0; i < screenData.pal.length; i += 1 ) {\n\t\tconst colorKey = screenData.pal[ i ].key;\n\t\tif( findKeys[ colorKey ] ) {\n\t\t\tscreenData.pal[ i ] = findKeys[ colorKey ];\n\t\t}\n\t}\n\n\t// Rebuild the palette map\n\tscreenData.palMap = new Map();\n\tfor( let i = 0; i < screenData.pal.length; i += 1 ) {\n\t\tscreenData.palMap.set( screenData.pal[ i ].key, i );\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\nfunction getColorValueByRawInput( screenData, rawInput ) {\n\tlet colorValue;\n\n\t// If it is an integer than get from pal array\n\tif( Number.isInteger( rawInput ) ) {\n\t\tif( rawInput >= screenData.pal.length ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn screenData.pal[ rawInput ];\n\t}\n\t\n\t// Convert to a color value\n\tcolorValue = utils.convertToColor( rawInput );\n\n\treturn colorValue;\n}\n\n\n// Finds a color index without adding it to palette\nfunction findColorIndexByColorValue( screenData, color, tolerance = 1 ) {\n\n\t// First check by key - fastest lookup\n\tif( screenData.palMap.has( color.key ) ) {\n\t\treturn screenData.palMap.get( color.key );\n\t}\n\n\t// Max color difference constant\n\tconst maxDifference = ( 255 * 255 ) * 3.25;\n\ttolerance = tolerance * ( 2 - tolerance ) * maxDifference;\n\n\t// Find exact match or closest color in palette\n\tfor( let i = 0; i < screenData.pal.length; i++ ) {\n\t\tif( screenData.pal[ i ].key === color.key ) {\n\t\t\treturn i;\n\t\t} else {\n\t\t\tlet difference;\n\n\t\t\t//Special case for color 0 we care more about alpha values for 0 - transparent color\n\t\t\tif( i === 0 ) {\n\t\t\t\tdifference = utils.calcColorDifference(\n\t\t\t\t\tscreenData.pal[ i ], color, [ 0.2, 0.2, 0.2, 0.4 ]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdifference = utils.calcColorDifference( screenData.pal[ i ], color );\n\t\t\t}\n\n\t\t\t// Compare the similarity with the tolerance level\n\t\t\tconst similarity = maxDifference - difference;\n\t\t\tif( similarity >= tolerance ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\n", "/**\r\n * Pi.js - Keyboard Module\r\n * \r\n * Basic keyboard handler for screens\r\n * \r\n * @module modules/keyboard\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport * as commands from \"../core/commands\";\r\nimport * as screenManager from \"../core/screen-manager\";\r\nimport * as utils from \"../core/utils\";\r\n\r\n// Input tags that we don't want to capture\r\nconst INPUT_TAGS = new Set( [ \"INPUT\", \"TEXTAREA\", \"SELECT\", \"BUTTON\" ] );\r\nconst CURSOR_BLINK = 500;\r\n\r\n// Key information containers\r\nconst m_inCodes = {};\r\nconst m_inKeys = {};\r\nconst m_actionKeys = new Set();\r\nconst m_onKeyHandlers = {};\r\n\r\n// Status variables\r\nlet m_inputData = null;\r\nlet m_isKeyboardActive = false;\r\n\r\n\r\n/***************************************************************************************************\r\n * Module Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// Initialize keyboard module\r\nexport function init() {\r\n\tstartKeyboard();\r\n\twindow.addEventListener( \"blur\", clearInKeys );\r\n}\r\n\r\n/**\r\n * Clear all keyboard event handlers\r\n * Called by clearEvents command\r\n */\r\nexport function clearKeyboardEvents() {\r\n\tfor( const mode in m_onKeyHandlers ) {\r\n\t\tdelete m_onKeyHandlers[ mode ];\r\n\t}\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * External API Commands\r\n **************************************************************************************************/\r\n\r\n\r\ncommands.addCommand( \"startKeyboard\", startKeyboard, [] );\r\nfunction startKeyboard() {\r\n\tif( m_isKeyboardActive ) {\r\n\t\treturn;\r\n\t}\r\n\twindow.addEventListener( \"keydown\", onKeyDown, { \"capture\": true } );\r\n\twindow.addEventListener( \"keyup\", onKeyUp, { \"capture\": true } );\r\n\tm_isKeyboardActive = true;\r\n\tif( document.activeElement ) {\r\n\t\tdocument.activeElement.blur();\r\n\t}\r\n}\r\n\r\ncommands.addCommand( \"stopKeyboard\", stopKeyboard, [] );\r\nfunction stopKeyboard() {\r\n\tif( !m_isKeyboardActive ) {\r\n\t\treturn;\r\n\t}\r\n\twindow.removeEventListener( \"keydown\", onKeyDown, { \"capture\": true } );\r\n\twindow.removeEventListener( \"keyup\", onKeyUp, { \"capture\": true } );\r\n\tm_isKeyboardActive = false;\r\n\r\n\t// Clear keys to prevent any after effects\r\n\tclearInKeys();\r\n}\r\n\r\ncommands.addCommand( \"inkey\", inkey, [ \"key\" ] );\r\nfunction inkey( options ) {\r\n\tconst key = options.key;\r\n\r\n\tif( key ) {\r\n\r\n\t\tif( typeof key !== \"string\" ) {\r\n\t\t\tconst error = new TypeError( \"inkey: key must be a string.\" );\r\n\t\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\t// Get key by code property\r\n\t\tif( m_inCodes[ key ] ) {\r\n\t\t\treturn m_inCodes[ key ];\r\n\t\t}\r\n\r\n\t\t// Get key by key property\r\n\t\tif( m_inKeys[ key ] ) {\r\n\t\t\treturn m_inKeys[ key ];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// If inkey is blank return all key codes\r\n\tconst keyCodes = [];\r\n\tfor( const code in m_inCodes ) {\r\n\t\tif( m_inCodes[ code ] ) {\r\n\t\t\tkeyCodes.push( m_inCodes[ code ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn keyCodes;\r\n}\r\n\r\ncommands.addCommand( \"setActionKeys\", setActionKeys, [ \"keys\" ] );\r\nfunction setActionKeys( options ) {\r\n\tconst keys = options.keys;\r\n\r\n\tif( !Array.isArray( keys ) ) {\r\n\t\tconst error = new TypeError( \"setActionKeys: keys must be an array.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\tfor( const key of keys ) {\r\n\t\tm_actionKeys.add( key );\r\n\t}\r\n}\r\n\r\ncommands.addCommand( \"removeActionKeys\", removeActionKeys, [ \"keys\" ] );\r\nfunction removeActionKeys( options ) {\r\n\tconst keys = options.keys;\r\n\r\n\tif( !Array.isArray( keys ) ) {\r\n\t\tconst error = new TypeError( \"removeActionKeys: keys must be an array.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\tfor( const key of keys ) {\r\n\t\tm_actionKeys.delete( key );\r\n\t}\r\n}\r\n\r\ncommands.addCommand( \"onkey\", onkey, [ \"key\", \"mode\", \"fn\", \"once\", \"allowRepeat\" ] );\r\nfunction onkey( options ) {\r\n\tconst key = options.key;\r\n\tconst mode = options.mode;\r\n\tconst fn = options.fn;\r\n\tconst once = !!options.once;\r\n\tconst allowRepeat = !!options.allowRepeat;\r\n\t\r\n\tif( !key || ( typeof key !== \"string\" && !Array.isArray( key ) ) ) {\r\n\t\tconst error = new TypeError( \"onkey: key must be a string or an array of strings.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( !mode || ( typeof mode !== \"string\" ) ) {\r\n\t\tconst error = new TypeError( \"onkey: mode must be a string with value of up or down.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( typeof fn !== \"function\" ) {\r\n\t\tconst error = new TypeError( \"onkey: fn must be a function.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Normalize key into an array for easier processing\r\n\tconst combo = typeof key === \"string\" ? [ key ] : key;\r\n\r\n\tconst handler = {\r\n\t\t\"comboKey\": combo.sort().join( \"\" ),\r\n\t\t\"combo\": combo,\r\n\t\t\"mode\": mode,\r\n\t\t\"fn\": fn,\r\n\t\t\"once\": once,\r\n\t\t\"allowRepeat\": allowRepeat,\r\n\t\t\"isRemoved\": false\r\n\t};\r\n\t\r\n\t// Add a on key handler for each of the key codes - in combo all must be pressed\r\n\tfor( const key of combo ) {\r\n\t\tif( !m_onKeyHandlers[ key ] ) {\r\n\t\t\tm_onKeyHandlers[ key ] = [];\r\n\t\t}\r\n\t\tm_onKeyHandlers[ key ].push( handler );\r\n\t}\r\n}\r\n\r\ncommands.addCommand( \"offkey\", offkey, [ \"key\", \"mode\", \"fn\", \"once\", \"allowRepeat\" ] );\r\nfunction offkey( options ) {\r\n\tconst key = options.key;\r\n\tconst mode = options.mode;\r\n\tconst fn = options.fn;\r\n\tconst once = !!options.once;\r\n\tconst allowRepeat = !!options.allowRepeat;\r\n\r\n\tif( !key || ( typeof key !== \"string\" && !Array.isArray( key ) ) ) {\r\n\t\tconst error = new TypeError( \"offkey: key must be a string or an array of strings.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( typeof fn !== \"function\" ) {\r\n\t\tconst error = new TypeError( \"offkey: callback must be a function.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Normalize key into an array for easier processing\r\n\tconst combo = typeof key === \"string\" ? [ key ] : key;\r\n\tconst comboKey = combo.sort().join( \"\" );\r\n\r\n\t// Find the handlers and remove them\r\n\tfor( const key of combo ) {\r\n\t\tconst handlers = m_onKeyHandlers[ key ];\r\n\t\tif( !handlers ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst toRemove = [];\r\n\t\tfor( let i = 0; i < handlers.length; i += 1 ) {\r\n\t\t\tconst handler = handlers[ i ];\r\n\t\t\tif(\r\n\t\t\t\thandler.comboKey === comboKey &&\r\n\t\t\t\thandler.mode === mode &&\r\n\t\t\t\thandler.fn === fn &&\r\n\t\t\t\thandler.once === once &&\r\n\t\t\t\thandler.allowRepeat === allowRepeat\r\n\t\t\t) {\r\n\t\t\t\ttoRemove.push( i );\r\n\t\t\t\thandler.isRemoved = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor( let i = toRemove.length - 1; i >= 0; i -= 1 ) {\r\n\t\t\thandlers.splice( toRemove[ i ], 1 );\r\n\t\t}\r\n\t\tif( handlers.length === 0 ) {\r\n\t\t\tdelete m_onKeyHandlers[ key ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// TODO: A couple of bugs notice with input at 640x480. First sometimes I see rogue cursor after\r\n// hitting the backspace. Then If I type in the letter A as the first character I noticed the left\r\n// side looks like it's getting sliced a little bit. This may be due to the drawing of the cursor\r\n// and clearing space for the flashing display.\r\n// FIX: Grabbing the background and drawing the background is a bit messy. I think a better solution\r\n// would be to draw the input on a separate canvas that is overlaying the current screen canvas.\r\n// But I don't know. I am refactoring to WebGL so I will address this as part of the refactor.\r\nscreenManager.addCommand(\r\n\t\"input\", input, [ \"prompt\", \"fn\", \"cursor\", \"isNumber\", \"isInteger\", \"allowNegative\" ]\r\n);\r\nfunction input( screenData, options ) {\r\n\tconst prompt = options.prompt;\r\n\tconst fn = options.fn;\r\n\tconst cursor = options.cursor ? options.cursor : String.fromCharCode( 219 );\r\n\tconst isNumber = !!options.isNumber;\r\n\tconst isInteger = !!options.isInteger;\r\n\tconst allowNegative = !!options.allowNegative;\r\n\r\n\tif( typeof prompt !== \"string\" ) {\r\n\t\tconst error = new TypeError( \"input: prompt must be a string\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( fn && typeof fn !== \"function\" ) {\r\n\t\tconst error = new TypeError( \"input: fn must be a function.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( typeof cursor !== \"string\" ) {\r\n\t\tconst error = new TypeError( \"input: cursor must be a string\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Create promise for async/await support\r\n\tlet resolvePromise, rejectPromise;\r\n\tconst promise = new Promise( ( resolve, reject ) => {\r\n\t\tresolvePromise = resolve;\r\n\t\trejectPromise = reject;\r\n\t} );\r\n\r\n\tif( m_inputData ) {\r\n\t\tfinishInput( true );\r\n\t}\r\n\r\n\tm_inputData = {\r\n\t\t\"screenData\": screenData,\r\n\t\t\"prompt\": prompt,\r\n\t\t\"cursor\": cursor,\r\n\t\t\"lastCursorBlink\": Date.now(),\r\n\t\t\"showCursor\": true,\r\n\t\t\"isNumber\": isNumber,\r\n\t\t\"isInteger\": isInteger,\r\n\t\t\"allowNegative\": allowNegative,\r\n\t\t\"val\": \"\",\r\n\t\t\"fn\": fn,\r\n\t\t\"resolve\": resolvePromise,\r\n\t\t\"reject\": rejectPromise\r\n\t};\r\n\r\n\tstartInput();\r\n\r\n\treturn promise;\r\n}\r\n\r\nscreenManager.addCommand( \"cancelInput\", cancelInput, [] );\r\nfunction cancelInput( screenData ) {\r\n\tif( m_inputData ) {\r\n\t\tfinishInput( true );\r\n\t}\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Internal Helper Functions\r\n **************************************************************************************************/\r\n\r\n\r\nfunction onKeyDown( event ) {\r\n\r\n\t// Ignore typing when focus is inside an editable\r\n\tif( isFromEditableTarget( event ) ) {\r\n\t\tclearInKeys();\r\n\t\treturn;\r\n\t}\r\n\tconst keyData = {\r\n\t\t\"code\": event.code,\r\n\t\t\"key\": event.key,\r\n\t\t\"location\": event.location,\r\n\t\t\"altKey\": event.altKey,\r\n\t\t\"ctrlKey\": event.ctrlKey,\r\n\t\t\"metaKey\": event.metaKey,\r\n\t\t\"shiftKey\": event.shiftKey,\r\n\t\t\"repeat\": event.repeat\r\n\t};\r\n\tm_inCodes[ event.code ] = keyData;\r\n\tm_inKeys[ event.key ] = keyData;\r\n\r\n\ttriggerKeyEventHandlers( event, \"down\", event.code );\r\n\ttriggerKeyEventHandlers( event, \"down\", event.key );\r\n\ttriggerKeyEventHandlers( event, \"down\", \"any\" );\r\n\tif( m_actionKeys.has( event.code ) || m_actionKeys.has( event.key ) ) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n}\r\n\r\nfunction onKeyUp( event ) {\r\n\t\r\n\t// Ignore typing when focus is inside an editable\r\n\tif( isFromEditableTarget( event ) ) {\r\n\t\tclearInKeys();\r\n\t\treturn;\r\n\t}\r\n\ttriggerKeyEventHandlers( event, \"up\", event.code );\r\n\ttriggerKeyEventHandlers( event, \"up\", event.key );\r\n\ttriggerKeyEventHandlers( event, \"up\", \"any\" );\r\n\r\n\tdelete m_inCodes[ event.code ];\r\n\tdelete m_inKeys[ event.key ];\r\n\r\n\tif( m_actionKeys.has( event.code ) || m_actionKeys.has( event.key ) ) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n}\r\n\r\nfunction triggerKeyEventHandlers( event, mode, keyOrCode ) {\r\n\r\n\tconst handlers = m_onKeyHandlers[ keyOrCode ];\r\n\tif( !handlers ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst isAnyKey = keyOrCode === \"any\";\r\n\tconst handlersCopy = handlers.slice();\r\n\tconst toRemove = new Set();\r\n\r\n\tfor( let i = 0; i < handlersCopy.length; i += 1 ) {\r\n\t\tconst handler = handlersCopy[ i ];\r\n\r\n\t\tif( handler.mode !== mode ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif( event.repeat && !handler.allowRepeat ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Need to check if handler has been removed in case a previous handler includes an offkey\r\n\t\tif( handler.isRemoved ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// For \"any\" key handlers, pass the current key data\r\n\t\tif( isAnyKey ) {\r\n\t\t\tlet keyData = m_inCodes[ event.code ];\r\n\t\t\tif( !keyData ) {\r\n\t\t\t\tkeyData = m_inKeys[ event.key ];\r\n\t\t\t}\r\n\r\n\t\t\t// In case stopKeyboard gets called in another key event handler keyData will be blank\r\n\t\t\tif( keyData !== undefined ) {\r\n\t\t\t\thandler.fn( keyData );\r\n\t\t\t}\r\n\r\n\t\t\tif( handler.once ) {\r\n\t\t\t\ttoRemove.add( handler );\r\n\t\t\t\thandler.isRemoved = true;\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// For specific key handlers, check combo and pass combo data\r\n\t\tconst isAllKeysPressed = handler.combo.every( key => m_inKeys[ key ] || m_inCodes[ key ] );\r\n\r\n\t\tif( isAllKeysPressed ) {\r\n\t\t\tconst comboData = handler.combo.map( key => {\r\n\t\t\t\tif( m_inKeys[ key ] ) {\r\n\t\t\t\t\treturn m_inKeys[ key ];\r\n\t\t\t\t}\r\n\t\t\t\treturn m_inCodes[ key ];\r\n\t\t\t} );\r\n\r\n\t\t\tif( comboData.length === 1 ) {\r\n\t\t\t\thandler.fn( comboData[ 0 ] );\r\n\t\t\t} else {\r\n\t\t\t\thandler.fn( comboData );\r\n\t\t\t}\r\n\r\n\t\t\tif( handler.once ) {\r\n\t\t\t\ttoRemove.add( handler );\r\n\t\t\t\thandler.isRemoved = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove the handlers that are one time only calls\r\n\tif( toRemove.size > 0 ) {\r\n\t\tm_onKeyHandlers[ keyOrCode ] = handlers.filter( h => !toRemove.has( h ) );\r\n\t\t\r\n\t\t// Delete the array if empty\r\n\t\tif( m_onKeyHandlers[ keyOrCode ].length === 0 ) {\r\n\t\t\tdelete m_onKeyHandlers[ keyOrCode ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isFromEditableTarget ( event ) {\r\n\tconst element = event.target;\r\n\tif( !element ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Standard form controls\r\n\tif( INPUT_TAGS.has( element.tagName ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Contenteditable\r\n\tif( element.isContentEditable ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Inputs inside shadow roots\r\n\tconst role = element.getAttribute && element.getAttribute( \"role\" );\r\n\tif( role === \"textbox\" || role === \"searchbox\" ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nfunction clearInKeys() {\r\n\r\n\t// Clear all key states\r\n\tfor( const code in m_inCodes ) {\r\n\t\tdelete m_inCodes[ code ];\r\n\t}\r\n\tfor( const key in m_inKeys ) {\r\n\t\tdelete m_inKeys[ key ];\r\n\t}\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Input Commands\r\n **************************************************************************************************/\r\n\r\n\r\nfunction startInput() {\r\n\r\n\tconst screenData = m_inputData.screenData;\r\n\r\n\t// Create a background canvas\r\n\tconst backCanvas = document.createElement( \"canvas\" );\r\n\tbackCanvas.width = screenData.width;\r\n\tbackCanvas.height = screenData.height;\r\n\t\r\n\t// Get the context for the background canvas\r\n\tconst backContext = backCanvas.getContext( \"2d\" );\r\n\r\n\t// Copy the background image to the canvas\r\n\tscreenData.api.render();\r\n\tbackContext.drawImage( screenData.canvas, 0, 0 );\r\n\r\n\t// Save the background canvas to the input data\r\n\tm_inputData.backCanvas = backCanvas;\r\n\tm_inputData.backContext = backContext;\r\n\r\n\t// Add input event listerner\r\n\tcommands.getApi().onkey( \"any\", \"down\", onInputKeyDown );\r\n\r\n\t// Add interval for blinking cursor\r\n\tm_inputData.interval = setInterval( showPrompt, 100 );\r\n}\r\n\r\nfunction onInputKeyDown( keyData ) {\r\n\r\n\t// Handle Enter Key - Complete Input\r\n\tif( keyData.key === \"Enter\" ) {\r\n\t\tfinishInput();\r\n\t\treturn;\r\n\t\r\n\t// Handle Escape - Cancel Input\r\n\t} else if( keyData.key === \"Escape\" ) {\r\n\t\tfinishInput( true );\r\n\t\treturn;\r\n\t\r\n\t// Handle Backspace - Erase last character\r\n\t} else if( keyData.key === \"Backspace\" ) {\r\n\t\tif( m_inputData.val.length > 0 ) {\r\n\t\t\tm_inputData.val = m_inputData.val.substring( 0, m_inputData.val.length - 1 );\r\n\t\t}\r\n\t\r\n\t// Handle single length keys\r\n\t} else if( keyData.key && keyData.key.length === 1 ) {\r\n\r\n\t\tlet inputHandled = false;\r\n\r\n\t\t// Handle +/- numbers\r\n\t\tif( m_inputData.isNumber && m_inputData.allowNegative ) {\r\n\r\n\t\t\t// If user enters a \"-\" then insert \"-\" at the start\r\n\t\t\tif( keyData.key === \"-\" ) {\r\n\t\t\t\tif( m_inputData.val.charAt( 0 ) !== \"-\" ) {\r\n\t\t\t\t\tm_inputData.val = \"-\" + m_inputData.val;\r\n\t\t\t\t}\r\n\t\t\t\tinputHandled = true;\r\n\t\t\t\r\n\t\t\t// Any time the user enters a \"+\" key then replace the minus symbol\r\n\t\t\t} else if( keyData.key === \"+\" && m_inputData.val.charAt( 0 ) === \"-\" ) {\r\n\t\t\t\tm_inputData.val = m_inputData.val.substring( 1 );\r\n\t\t\t\tinputHandled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !inputHandled ) {\r\n\t\t\tm_inputData.val += keyData.key;\r\n\r\n\t\t\t// Make sure it's a valid number or valid integer\r\n\t\t\tif(\r\n\t\t\t\t( m_inputData.isNumber && isNaN( Number( m_inputData.val ) ) ) ||\r\n\t\t\t\t( m_inputData.isInteger && !Number.isInteger( Number( m_inputData.val ) ) )\r\n\t\t\t) {\r\n\t\t\t\tm_inputData.val = m_inputData.val.substring( 0, m_inputData.val.length - 1 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction showPrompt( hideCursorOverride ) {\r\n\tconst screenData = m_inputData.screenData;\r\n\tlet msg = m_inputData.prompt + m_inputData.val;\r\n\r\n\t// Blink cursor after every blink duration\r\n\tif( !hideCursorOverride ) {\r\n\t\tconst now = Date.now();\r\n\t\tif( now - m_inputData.lastCursorBlink > CURSOR_BLINK ) {\r\n\t\t\tm_inputData.lastCursorBlink = now;\r\n\t\t\tm_inputData.showCursor = !m_inputData.showCursor;\r\n\t\t}\r\n\r\n\t\t// Show cursor if not hidden\r\n\t\tif( m_inputData.showCursor ) {\r\n\t\t\tmsg += m_inputData.cursor;\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if need to scroll first\r\n\tlet pos = screenData.api.getPos();\r\n\tif( pos.row >= screenData.api.getRows() ) {\r\n\t\tscreenData.api.print( \"\" );\r\n\t\tscreenData.api.setPos( pos.col, pos.row - 1 );\r\n\t\tpos = screenData.api.getPos( screenData );\r\n\t}\r\n\r\n\t// Get the background pixels\r\n\tconst posPx = screenData.api.getPosPx( screenData );\r\n\tconst width = ( msg.length + 1 ) * screenData.font.width;\r\n\tconst height = screenData.font.height;\r\n\r\n\t// Restore the background image over the prompt\r\n\tscreenData.context.clearRect( posPx.x, posPx.y, width, height );\r\n\tscreenData.context.drawImage(\r\n\t\tm_inputData.backCanvas,\r\n\t\tposPx.x, posPx.y, width, height,\r\n\t\tposPx.x, posPx.y, width, height\r\n\t);\r\n\tscreenData.imageData = null;\r\n\t\r\n\t// Print the prompt + input + cursor\r\n\tscreenData.api.print( msg, true );\r\n\r\n\t// Restore the cursor\r\n\tscreenData.api.setPos( pos.col, pos.row );\r\n}\r\n\r\nfunction finishInput( isCancel ) {\r\n\tconst screenData = m_inputData.screenData;\r\n\r\n\t// Remove input key handler\r\n\tcommands.getApi().offkey( \"any\", \"down\", onInputKeyDown );\r\n\r\n\t// Show prompt on complete, without the cursor\r\n\tshowPrompt( true );\r\n\r\n\t// Move cursor down one line\r\n\tscreenData.printCursor.y += screenData.font.height;\r\n\r\n\t// Clear the interval\r\n\tclearInterval( m_inputData.interval );\r\n\r\n\t// Process Input Value\r\n\tlet val = m_inputData.val;\r\n\tif( m_inputData.isNumber ) {\r\n\t\tif( val === \"\" || val === \"-\" ) {\r\n\t\t\tval = 0;\r\n\t\t} else {\r\n\t\t\tval = Number( val );\r\n\t\t\tif( m_inputData.isInteger ) {\r\n\t\t\t\tval = Math.floor( val );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear out the inputData\r\n\tconst tempInputData = m_inputData;\r\n\tm_inputData = null;\r\n\r\n\t// Handle cancel input\r\n\tif( isCancel ) {\r\n\t\ttempInputData.reject( val );\r\n\t\r\n\t// Handle successful input\r\n\t} else {\r\n\t\ttempInputData.resolve( val );\r\n\r\n\t\t// Callback function\r\n\t\tif( tempInputData.fn ) {\r\n\t\t\ttempInputData.fn( val );\r\n\t\t}\r\n\t}\r\n}\r\n", "/**\n * Pi.js - Mouse Module\n * \n * Mouse input handling for screens including events and position tracking.\n * \n * @module modules/mouse\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as events from \"../core/events\";\nimport * as utils from \"../core/utils\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// Add screen data items\n\tscreenManager.addScreenDataItem( \"mouseStarted\", false );\n\tscreenManager.addScreenDataItem( \"mouse\", null );\n\tscreenManager.addScreenDataItem( \"lastEvent\", null );\n\tscreenManager.addScreenDataItem( \"isContextMenuEnabled\", false );\n\n\t// Event listener tracking\n\tscreenManager.addScreenDataItem( \"mouseEventListenersActive\", 0 );\n\tscreenManager.addScreenDataItem( \"onMouseEventListeners\", {\n\t\t\"down\": [],\n\t\t\"up\": [],\n\t\t\"move\": []\n\t} );\n\n\t// Add screen initialization\n\tscreenManager.addScreenInitFunction( initMouseData );\n\n\t// Add window blur handler\n\twindow.addEventListener( \"blur\", onWindowBlur );\n}\n\n/**\n * Clear all mouse event handlers for a screen\n * Called by clearEvents command\n * \n * @param {Object} screenData - Screen data object\n */\nexport function clearMouseEvents( screenData ) {\n\tscreenData.onMouseEventListeners = {\n\t\t\"down\": [],\n\t\t\"up\": [],\n\t\t\"move\": []\n\t};\n\tscreenData.mouseEventListenersActive = 0;\n}\n\nfunction initMouseData( screenData ) {\n\n\t// Initialize mouse position to center of screen\n\tscreenData.mouse = {\n\t\t\"x\": Math.floor( screenData.width / 2 ),\n\t\t\"y\": Math.floor( screenData.height / 2 ),\n\t\t\"lastX\": Math.floor( screenData.width / 2 ),\n\t\t\"lastY\": Math.floor( screenData.height / 2 ),\n\t\t\"buttons\": 0,\n\t\t\"action\": \"none\"\n\t};\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\nscreenManager.addCommand( \"startMouse\", startMouse, [] );\nfunction startMouse( screenData ) {\n\tif( !screenData.mouseStarted ) {\n\t\tscreenData.canvas.addEventListener( \"mousemove\", mouseMove );\n\t\tscreenData.canvas.addEventListener( \"mousedown\", mouseDown );\n\t\tscreenData.canvas.addEventListener( \"mouseup\", mouseUp );\n\t\tscreenData.canvas.addEventListener( \"contextmenu\", onContextMenu );\n\t\tscreenData.mouseStarted = true;\n\t}\n}\n\nscreenManager.addCommand( \"stopMouse\", stopMouse, [] );\nfunction stopMouse( screenData ) {\n\tif( screenData.mouseStarted ) {\n\t\tscreenData.canvas.removeEventListener( \"mousemove\", mouseMove );\n\t\tscreenData.canvas.removeEventListener( \"mousedown\", mouseDown );\n\t\tscreenData.canvas.removeEventListener( \"mouseup\", mouseUp );\n\t\tscreenData.canvas.removeEventListener( \"contextmenu\", onContextMenu );\n\t\tscreenData.mouseStarted = false;\n\t}\n}\n\nscreenManager.addCommand( \"getMouse\", getMouse, [] );\nfunction getMouse( screenData ) {\n\tconst mouse = {};\n\tmouse.x = screenData.mouse.x;\n\tmouse.y = screenData.mouse.y;\n\tmouse.lastX = screenData.mouse.lastX;\n\tmouse.lastY = screenData.mouse.lastY;\n\tmouse.buttons = screenData.mouse.buttons;\n\tmouse.action = screenData.mouse.action;\n\tmouse.type = \"mouse\";\n\n\treturn mouse;\n}\n\nscreenManager.addCommand( \"inmouse\", inmouse, [] );\nfunction inmouse( screenData ) {\n\n\t// Activate the mouse event listeners\n\tstartMouse( screenData );\n\n\treturn getMouse( screenData );\n}\n\nscreenManager.addCommand( \"setEnableContextMenu\", setEnableContextMenu, [ \"isEnabled\" ] );\nfunction setEnableContextMenu( screenData, options ) {\n\tscreenData.isContextMenuEnabled = !!( options.isEnabled );\n\n\t// Activate the mouse event listeners\n\tstartMouse( screenData );\n}\n\nscreenManager.addCommand( \"onmouse\", onmouse, [ \"mode\", \"fn\", \"once\", \"hitBox\", \"customData\" ] );\nfunction onmouse( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\tconst once = options.once;\n\tconst hitBox = options.hitBox;\n\tconst customData = options.customData;\n\n\tconst isValid = events.onevent(\n\t\tmode, fn, once, hitBox, [ \"down\", \"up\", \"move\" ], \"onmouse\",\n\t\tscreenData.onMouseEventListeners, null, null, customData\n\t);\n\n\t// Activate the mouse event listeners\n\tif( isValid ) {\n\t\tstartMouse( screenData );\n\t\tscreenData.mouseEventListenersActive += 1;\n\t}\n}\n\nscreenManager.addCommand( \"offmouse\", offmouse, [ \"mode\", \"fn\" ] );\nfunction offmouse( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\n\tconst isValid = events.offevent(\n\t\tmode, fn, [ \"down\", \"up\", \"move\" ], \"offmouse\",\n\t\tscreenData.onMouseEventListeners\n\t);\n\n\tif( isValid ) {\n\t\tif( fn == null ) {\n\t\t\tscreenData.mouseEventListenersActive = 0;\n\t\t} else {\n\t\t\tscreenData.mouseEventListenersActive -= 1;\n\t\t\tif( screenData.mouseEventListenersActive < 0 ) {\n\t\t\t\tscreenData.mouseEventListenersActive = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\nfunction mouseMove( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( !screenData ) {\n\t\treturn;\n\t}\n\n\tupdateMouse( screenData, e, \"move\" );\n\n\tconst mouseData = getMouse( screenData );\n\n\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"move\", mouseData, screenData.onMouseEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners ) {\n\t\tscreenData.triggerPressListeners( screenData, \"move\", mouseData );\n\t}\n}\n\nfunction mouseDown( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( !screenData ) {\n\t\treturn;\n\t}\n\n\tupdateMouse( screenData, e, \"down\" );\n\n\tconst mouseData = getMouse( screenData );\n\n\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"down\", mouseData, screenData.onMouseEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners ) {\n\t\tscreenData.triggerPressListeners( screenData, \"down\", mouseData );\n\t}\n\n\tif( screenData.triggerClickListeners ) {\n\t\tscreenData.triggerClickListeners( screenData, mouseData, \"down\" );\n\t}\n}\n\nfunction mouseUp( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( !screenData ) {\n\t\treturn;\n\t}\n\n\tupdateMouse( screenData, e, \"up\" );\n\n\tconst mouseData = getMouse( screenData );\n\n\tif( screenData.mouseEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"up\", mouseData, screenData.onMouseEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners ) {\n\t\tscreenData.triggerPressListeners( screenData, \"up\", mouseData );\n\t}\n\n\tif( screenData.triggerClickListeners ) {\n\t\tscreenData.triggerClickListeners( screenData, mouseData, \"up\" );\n\t}\n}\n\nfunction onContextMenu( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( !screenData ) {\n\t\treturn;\n\t}\n\n\tif( !screenData.isContextMenuEnabled ) {\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n}\n\nfunction updateMouse( screenData, e, action ) {\n\tconst rect = screenData.clientRect;\n\tconst x = Math.floor(\n\t\te.offsetX / rect.width * screenData.width\n\t);\n\tconst y = Math.floor(\n\t\te.offsetY / rect.height * screenData.height\n\t);\n\n\tlet lastX = x;\n\tlet lastY = y;\n\n\tif( screenData.mouse ) {\n\t\tif( screenData.mouse.x !== undefined ) {\n\t\t\tlastX = screenData.mouse.x;\n\t\t}\n\t\tif( screenData.mouse.y !== undefined ) {\n\t\t\tlastY = screenData.mouse.y;\n\t\t}\n\t}\n\n\tscreenData.mouse = {\n\t\t\"x\": x,\n\t\t\"y\": y,\n\t\t\"lastX\": lastX,\n\t\t\"lastY\": lastY,\n\t\t\"buttons\": e.buttons,\n\t\t\"action\": action\n\t};\n\tscreenData.lastEvent = \"mouse\";\n}\n\nfunction getScreenDataFromEvent( e ) {\n\tconst screenId = e.target.dataset?.screenId;\n\tif( screenId === undefined ) {\n\t\treturn null;\n\t}\n\n\t// Get screen from screenManager\n\tconst activeScreen = screenManager.getActiveScreen();\n\tif( activeScreen && activeScreen.id === parseInt( screenId ) ) {\n\t\treturn activeScreen;\n\t}\n\n\treturn null;\n}\n\nfunction onWindowBlur() {\n\n\t// Reset mouse button state when window loses focus\n\tconst activeScreen = screenManager.getActiveScreen();\n\tif( activeScreen && activeScreen.mouse ) {\n\t\tactiveScreen.mouse.buttons = 0;\n\t\tactiveScreen.mouse.action = \"up\";\n\t}\n}\n\n", "/**\n * Pi.js - Touch Module\n * \n * Touch input handling for screens including multi-touch support.\n * \n * @module modules/touch\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as commands from \"../core/commands\";\nimport * as events from \"../core/events\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nlet m_isTouchScreen = false;\n\nexport function init() {\n\n\t// Add screen data items\n\tscreenManager.addScreenDataItem( \"touchStarted\", false );\n\tscreenManager.addScreenDataItem( \"touches\", {} );\n\tscreenManager.addScreenDataItem( \"lastTouches\", {} );\n\n\t// Event listener tracking\n\tscreenManager.addScreenDataItem( \"touchEventListenersActive\", 0 );\n\tscreenManager.addScreenDataItem( \"onTouchEventListeners\", {} );\n\n\t// Add screen initialization\n\tscreenManager.addScreenInitFunction( initTouchData );\n\n\t// Add window blur handler\n\twindow.addEventListener( \"blur\", onWindowBlur );\n}\n\n/**\n * Clear all touch event handlers for a screen\n * Called by clearEvents command\n * \n * @param {Object} screenData - Screen data object\n */\nexport function clearTouchEvents( screenData ) {\n\tscreenData.onTouchEventListeners = {};\n\tscreenData.touchEventListenersActive = 0;\n}\n\nfunction initTouchData( screenData ) {\n\n\t// Initialize touch event listeners\n\tscreenData.onTouchEventListeners = {\n\t\t\"start\": [],\n\t\t\"end\": [],\n\t\t\"move\": []\n\t};\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\nscreenManager.addCommand( \"startTouch\", startTouch, [] );\nfunction startTouch( screenData ) {\n\tif( !screenData.touchStarted ) {\n\n\t\t// Mark as non-passive because we call preventDefault() to prevent mouse events\n\t\t// and scrolling behavior on the canvas\n\t\tconst options = { \"passive\": false };\n\n\t\tscreenData.canvas.addEventListener( \"touchstart\", touchStart, options );\n\t\tscreenData.canvas.addEventListener( \"touchmove\", touchMove, options );\n\t\tscreenData.canvas.addEventListener( \"touchend\", touchEnd, options );\n\t\tscreenData.canvas.addEventListener( \"touchcancel\", touchEnd, options );\n\t\tscreenData.touchStarted = true;\n\t}\n}\n\nscreenManager.addCommand( \"stopTouch\", stopTouch, [] );\nfunction stopTouch( screenData ) {\n\tif( screenData.touchStarted ) {\n\t\tscreenData.canvas.removeEventListener( \"touchstart\", touchStart );\n\t\tscreenData.canvas.removeEventListener( \"touchmove\", touchMove );\n\t\tscreenData.canvas.removeEventListener( \"touchend\", touchEnd );\n\t\tscreenData.canvas.removeEventListener( \"touchcancel\", touchEnd );\n\t\tscreenData.touchStarted = false;\n\t}\n}\n\nscreenManager.addCommand( \"intouch\", intouch, [] );\nfunction intouch( screenData ) {\n\tstartTouch( screenData );\n\treturn getTouch( screenData );\n}\n\nscreenManager.addCommand( \"ontouch\", ontouch, [ \"mode\", \"fn\", \"once\", \"hitBox\", \"customData\" ] );\nfunction ontouch( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\tconst once = options.once;\n\tconst hitBox = options.hitBox;\n\tconst customData = options.customData;\n\n\tconst isValid = events.onevent(\n\t\tmode, fn, once, hitBox, [ \"start\", \"end\", \"move\" ], \"ontouch\",\n\t\tscreenData.onTouchEventListeners, null, null, customData\n\t);\n\n\tif( isValid ) {\n\t\tstartTouch( screenData );\n\t\tscreenData.touchEventListenersActive += 1;\n\t}\n}\n\nscreenManager.addCommand( \"offtouch\", offtouch, [ \"mode\", \"fn\" ] );\nfunction offtouch( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\n\tconst isValid = events.offevent(\n\t\tmode, fn, [ \"start\", \"end\", \"move\" ], \"offtouch\",\n\t\tscreenData.onTouchEventListeners\n\t);\n\n\tif( isValid ) {\n\t\tif( fn == null ) {\n\t\t\tscreenData.touchEventListenersActive = 0;\n\t\t} else {\n\t\t\tscreenData.touchEventListenersActive -= 1;\n\t\t\tif( screenData.touchEventListenersActive < 0 ) {\n\t\t\t\tscreenData.touchEventListenersActive = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\ncommands.addCommand( \"setPinchZoom\", setPinchZoom, [ \"isEnabled\" ] );\nfunction setPinchZoom( options ) {\n\tconst isEnabled = !!( options.isEnabled );\n\n\tif( isEnabled ) {\n\t\tdocument.body.style.touchAction = \"\";\n\t} else {\n\t\tdocument.body.style.touchAction = \"none\";\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\nfunction touchStart( e ) {\n\tm_isTouchScreen = true;\n\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( screenData == null ) {\n\t\treturn;\n\t}\n\n\tupdateTouch( screenData, e, \"start\" );\n\n\tconst touchData = getTouch( screenData );\n\n\tif( screenData.touchEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"start\", touchData, screenData.onTouchEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners && screenData.getTouchPress ) {\n\t\tscreenData.triggerPressListeners( screenData, \"down\", screenData.getTouchPress( screenData ) );\n\n\t\t// Prevent mouse down event from firing\n\t\te.preventDefault();\n\t}\n\n\tif( screenData.triggerClickListeners && screenData.getTouchPress ) {\n\t\tscreenData.triggerClickListeners(\n\t\t\tscreenData, screenData.getTouchPress( screenData ), \"down\"\n\t\t);\n\t}\n}\n\nfunction touchMove( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( screenData == null ) {\n\t\treturn;\n\t}\n\n\tupdateTouch( screenData, e, \"move\" );\n\n\tconst touchData = getTouch( screenData );\n\n\tif( screenData.touchEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"move\", touchData, screenData.onTouchEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners && screenData.getTouchPress ) {\n\t\tscreenData.triggerPressListeners( screenData, \"move\", screenData.getTouchPress( screenData ) );\n\t}\n}\n\nfunction touchEnd( e ) {\n\tconst screenData = getScreenDataFromEvent( e );\n\tif( screenData == null ) {\n\t\treturn;\n\t}\n\n\tupdateTouch( screenData, e, \"end\" );\n\n\tconst touchData = getTouch( screenData );\n\n\tif( screenData.touchEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"end\", touchData, screenData.onTouchEventListeners );\n\t}\n\n\tif( screenData.triggerPressListeners && screenData.getTouchPress ) {\n\t\tscreenData.triggerPressListeners( screenData, \"up\", screenData.getTouchPress( screenData ) );\n\t}\n\n\tif( screenData.triggerClickListeners && screenData.getTouchPress ) {\n\t\tscreenData.triggerClickListeners(\n\t\t\tscreenData, screenData.getTouchPress( screenData ), \"up\"\n\t\t);\n\t}\n}\n\nfunction updateTouch( screenData, e, action ) {\n\tif( !screenData.clientRect ) {\n\t\treturn;\n\t}\n\n\tconst newTouches = {};\n\tconst rect = screenData.clientRect;\n\n\tfor( let j = 0; j < e.touches.length; j++ ) {\n\t\tconst touch = e.touches[ j ];\n\t\tconst touchData = {};\n\n\t\ttouchData.x = Math.floor(\n\t\t\t( touch.clientX - rect.left ) / rect.width * screenData.width\n\t\t);\n\t\ttouchData.y = Math.floor(\n\t\t\t( touch.clientY - rect.top ) / rect.height * screenData.height\n\t\t);\n\t\ttouchData.id = touch.identifier;\n\n\t\tif( screenData.touches[ touchData.id ] ) {\n\t\t\ttouchData.lastX = screenData.touches[ touchData.id ].x;\n\t\t\ttouchData.lastY = screenData.touches[ touchData.id ].y;\n\t\t} else {\n\t\t\ttouchData.lastX = null;\n\t\t\ttouchData.lastY = null;\n\t\t}\n\n\t\ttouchData.action = action;\n\t\tnewTouches[ touchData.id ] = touchData;\n\t}\n\n\tscreenData.lastTouches = screenData.touches;\n\tscreenData.touches = newTouches;\n\tscreenData.lastEvent = \"touch\";\n}\n\nfunction getTouch( screenData ) {\n\tconst touchArr = [];\n\n\t// Make a local copy of touch Object\n\tfor( const i in screenData.touches ) {\n\t\tconst touch = screenData.touches[ i ];\n\t\tconst touchData = {\n\t\t\t\"x\": touch.x,\n\t\t\t\"y\": touch.y,\n\t\t\t\"id\": touch.id,\n\t\t\t\"lastX\": touch.lastX,\n\t\t\t\"lastY\": touch.lastY,\n\t\t\t\"action\": touch.action,\n\t\t\t\"type\": \"touch\"\n\t\t};\n\t\ttouchArr.push( touchData );\n\t}\n\n\treturn touchArr;\n}\n\nfunction getScreenDataFromEvent( e ) {\n\tconst screenId = e.target.dataset?.screenId;\n\tif( screenId === undefined ) {\n\t\treturn null;\n\t}\n\n\t// Get screen from screenManager\n\tconst activeScreen = screenManager.getActiveScreen();\n\tif( activeScreen && activeScreen.id === parseInt( screenId ) ) {\n\t\treturn activeScreen;\n\t}\n\n\treturn null;\n}\n\nfunction onWindowBlur() {\n\n\t// Clear all touch states when window loses focus\n\tconst activeScreen = screenManager.getActiveScreen();\n\tif( activeScreen ) {\n\t\tactiveScreen.lastTouches = activeScreen.touches;\n\t\tactiveScreen.touches = {};\n\t}\n}\n\n", "/**\n * Pi.js - Press Module\n * \n * Unified press/click events that work with both mouse and touch.\n * \n * @module modules/press\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as events from \"../core/events\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// Add screen data items for press events\n\tscreenManager.addScreenDataItem( \"pressEventListenersActive\", 0 );\n\tscreenManager.addScreenDataItem( \"onPressEventListeners\", {} );\n\n\t// Add screen data items for click events\n\tscreenManager.addScreenDataItem( \"clickEventListenersActive\", 0 );\n\tscreenManager.addScreenDataItem( \"onClickEventListeners\", {} );\n\n\t// Add screen initialization\n\tscreenManager.addScreenInitFunction( initPressData );\n}\n\n/**\n * Clear all press event handlers for a screen\n * Called by clearEvents command\n * \n * @param {Object} screenData - Screen data object\n */\nexport function clearPressEvents( screenData ) {\n\tscreenData.onPressEventListeners = {};\n\tscreenData.pressEventListenersActive = 0;\n}\n\n/**\n * Clear all click event handlers for a screen\n * Called by clearEvents command\n * \n * @param {Object} screenData - Screen data object\n */\nexport function clearClickEvents( screenData ) {\n\tscreenData.onClickEventListeners = {};\n\tscreenData.clickEventListenersActive = 0;\n}\n\nfunction initPressData( screenData ) {\n\n\t// Initialize press event listeners\n\tscreenData.onPressEventListeners = {\n\t\t\"down\": [],\n\t\t\"up\": [],\n\t\t\"move\": []\n\t};\n\n\t// Initialize click event listeners\n\tscreenData.onClickEventListeners = {\n\t\t\"click\": []\n\t};\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\nscreenManager.addCommand( \"inpress\", inpress, [] );\nfunction inpress( screenData ) {\n\n\t// Start both mouse and touch\n\tscreenData.api.startMouse();\n\tscreenData.api.startTouch();\n\n\t// Return the appropriate input based on last event\n\tif( screenData.lastEvent === \"touch\" ) {\n\t\treturn getTouchPress( screenData );\n\t} else {\n\t\treturn screenData.api.getMouse();\n\t}\n}\n\nscreenManager.addCommand( \"onpress\", onpress, [ \"mode\", \"fn\", \"once\", \"hitBox\", \"customData\" ] );\nfunction onpress( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\tconst once = options.once;\n\tconst hitBox = options.hitBox;\n\tconst customData = options.customData;\n\n\tconst isValid = events.onevent(\n\t\tmode, fn, once, hitBox, [ \"down\", \"up\", \"move\" ], \"onpress\",\n\t\tscreenData.onPressEventListeners, null, null, customData\n\t);\n\n\t// Activate both mouse and touch event listeners\n\tif( isValid ) {\n\t\tscreenData.api.startMouse();\n\t\tscreenData.api.startTouch();\n\t\tscreenData.pressEventListenersActive += 1;\n\t}\n}\n\nscreenManager.addCommand( \"offpress\", offpress, [ \"mode\", \"fn\" ] );\nfunction offpress( screenData, options ) {\n\tconst mode = options.mode;\n\tconst fn = options.fn;\n\n\tconst isValid = events.offevent(\n\t\tmode, fn, [ \"down\", \"up\", \"move\" ], \"offpress\",\n\t\tscreenData.onPressEventListeners\n\t);\n\n\tif( isValid ) {\n\t\tif( fn == null ) {\n\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t} else {\n\t\t\tscreenData.pressEventListenersActive -= 1;\n\t\t\tif( screenData.pressEventListenersActive < 0 ) {\n\t\t\t\tscreenData.pressEventListenersActive = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nscreenManager.addCommand( \"onclick\", onclick, [ \"fn\", \"once\", \"hitBox\", \"customData\" ] );\nfunction onclick( screenData, options ) {\n\tconst fn = options.fn;\n\tconst once = options.once;\n\tlet hitBox = options.hitBox;\n\tconst customData = options.customData;\n\n\t// Default hitbox to entire screen\n\tif( hitBox == null ) {\n\t\thitBox = {\n\t\t\t\"x\": 0,\n\t\t\t\"y\": 0,\n\t\t\t\"width\": screenData.width,\n\t\t\t\"height\": screenData.height\n\t\t};\n\t}\n\n\tconst isValid = events.onevent(\n\t\t\"click\", fn, once, hitBox, [ \"click\" ], \"onclick\",\n\t\tscreenData.onClickEventListeners, null, null, customData\n\t);\n\n\t// Activate both mouse and touch event listeners\n\tif( isValid ) {\n\t\tscreenData.api.startMouse();\n\t\tscreenData.api.startTouch();\n\t\tscreenData.clickEventListenersActive += 1;\n\t}\n}\n\nscreenManager.addCommand( \"offclick\", offclick, [ \"fn\" ] );\nfunction offclick( screenData, options ) {\n\tconst fn = options.fn;\n\n\tconst isValid = events.offevent(\n\t\t\"click\", fn, [ \"click\" ], \"offclick\",\n\t\tscreenData.onClickEventListeners\n\t);\n\n\tif( isValid ) {\n\t\tif( fn == null ) {\n\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t} else {\n\t\t\tscreenData.clickEventListenersActive -= 1;\n\t\t\tif( screenData.clickEventListenersActive < 0 ) {\n\t\t\t\tscreenData.clickEventListenersActive = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands - Exposed for mouse/touch modules to call\n **************************************************************************************************/\n\n\nscreenManager.addScreenInternalCommands( \"triggerPressListeners\", triggerPressListeners );\nfunction triggerPressListeners( screenData, mode, data ) {\n\tif( screenData.pressEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( mode, data, screenData.onPressEventListeners );\n\t}\n}\n\nscreenManager.addScreenInternalCommands( \"triggerClickListeners\", triggerClickListeners );\nfunction triggerClickListeners( screenData, data, clickStatus ) {\n\tif( screenData.clickEventListenersActive > 0 ) {\n\t\tevents.triggerEventListeners( \"click\", data, screenData.onClickEventListeners, clickStatus );\n\t}\n}\n\nscreenManager.addScreenInternalCommands( \"getTouchPress\", getTouchPress );\nfunction getTouchPress( screenData ) {\n\n\tfunction copyTouches( touches, touchArr, action ) {\n\t\tfor( const i in touches ) {\n\t\t\tconst touch = touches[ i ];\n\t\t\tconst touchData = {\n\t\t\t\t\"x\": touch.x,\n\t\t\t\t\"y\": touch.y,\n\t\t\t\t\"id\": touch.id,\n\t\t\t\t\"lastX\": touch.lastX,\n\t\t\t\t\"lastY\": touch.lastY,\n\t\t\t\t\"action\": touch.action,\n\t\t\t\t\"type\": \"touch\"\n\t\t\t};\n\t\t\tif( action !== undefined ) {\n\t\t\t\ttouchData.action = action;\n\t\t\t}\n\t\t\ttouchArr.push( touchData );\n\t\t}\n\t}\n\n\tconst touchArr = [];\n\n\tcopyTouches( screenData.touches, touchArr );\n\n\tif( touchArr.length === 0 ) {\n\t\tcopyTouches( screenData.lastTouches, touchArr, \"up\" );\n\t}\n\n\tif( touchArr.length > 0 ) {\n\t\tconst touchData = touchArr[ 0 ];\n\t\tif( touchData.action === \"up\" ) {\n\t\t\ttouchData.buttons = 0;\n\t\t} else {\n\t\t\ttouchData.buttons = 1;\n\t\t}\n\t\ttouchData.touches = touchArr;\n\n\t\treturn touchData;\n\t} else {\n\t\treturn {\n\t\t\t\"x\": -1,\n\t\t\t\"y\": -1,\n\t\t\t\"id\": -1,\n\t\t\t\"lastX\": -1,\n\t\t\t\"lastY\": -1,\n\t\t\t\"action\": \"none\",\n\t\t\t\"buttons\": 0,\n\t\t\t\"type\": \"touch\"\n\t\t};\n\t}\n}\n\n", "/**\n * Pi.js - Gamepad Module\n * \n * Global gamepad input handling independent of screens.\n * \n * @module modules/gamepad\n */\n\n\"use strict\";\n\nimport * as commands from \"../core/commands\";\n\n\n/***************************************************************************************************\n * Module State\n **************************************************************************************************/\n\n\nconst m_gamepads = {};\nconst m_onConnectHandlers = [];\nconst m_onDisconnectHandlers = [];\n\nlet m_isInitialized = false;\nlet m_isLooping = false;\nlet m_gamepadLoopId = null;\nlet m_axesSensitivity = 0.2;\nlet m_tick = 0;\nlet m_lastGamepadUpdateTick = -1;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// Add window blur/focus handlers\n\twindow.addEventListener( \"blur\", onWindowBlur );\n\twindow.addEventListener( \"focus\", onWindowFocus );\n}\n\n/**\n * Clear all gamepad event handlers\n * Called by clearEvents command\n */\nexport function clearGamepadEvents() {\n\tm_onConnectHandlers.length = 0;\n\tm_onDisconnectHandlers.length = 0;\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\ncommands.addCommand( \"startGamepad\", startGamepad, [] );\nfunction startGamepad() {\n\tif( !m_isInitialized ) {\n\t\twindow.addEventListener( \"gamepadconnected\", gamepadConnected );\n\t\twindow.addEventListener( \"gamepaddisconnected\", gamepadDisconnected );\n\t\tm_isInitialized = true;\n\t}\n\n\tif( !m_isLooping ) {\n\t\tm_isLooping = true;\n\t\tm_gamepadLoopId = requestAnimationFrame( gamepadLoop );\n\t}\n}\n\ncommands.addCommand( \"stopGamepad\", stopGamepad, [] );\nfunction stopGamepad() {\n\tif( m_isLooping ) {\n\t\tm_isLooping = false;\n\t\tif( m_gamepadLoopId ) {\n\t\t\tcancelAnimationFrame( m_gamepadLoopId );\n\t\t\tm_gamepadLoopId = null;\n\t\t}\n\t}\n}\n\ncommands.addCommand( \"ingamepad\", ingamepad, [ \"gamepadIndex\" ] );\nfunction ingamepad( options ) {\n\tconst gamepadIndex = options.gamepadIndex;\n\n\tstartGamepad();\n\tupdateGamepads();\n\n\t// If no index specified, return all gamepads\n\tif( gamepadIndex === null || gamepadIndex === undefined ) {\n\t\treturn Object.values( m_gamepads ).sort( ( a, b ) => a.index - b.index );\n\t}\n\n\t// Validate gamepadIndex\n\tif( !Number.isInteger( gamepadIndex ) || gamepadIndex < 0 ) {\n\t\tconst error = new TypeError(\n\t\t\t\"ingamepad: gamepadIndex must be a non-negative integer or null.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\t// Return specific gamepad or undefined if not found\n\treturn m_gamepads[ gamepadIndex ];\n}\n\ncommands.addCommand( \"setGamepadSensitivity\", setGamepadSensitivity, [ \"sensitivity\" ] );\nfunction setGamepadSensitivity( options ) {\n\tconst sensitivity = options.sensitivity;\n\n\tif( typeof sensitivity !== \"number\" || sensitivity < 0 || sensitivity > 1 ) {\n\t\tconst error = new TypeError(\n\t\t\t\"setGamepadSensitivity: sensitivity must be a number between 0 and 1.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tif( sensitivity === 1 ) {\n\t\tm_axesSensitivity = 0.99999;\n\t} else {\n\t\tm_axesSensitivity = sensitivity;\n\t}\n}\n\ncommands.addCommand( \"onGamepadConnected\", onGamepadConnected, [ \"fn\" ] );\nfunction onGamepadConnected( options ) {\n\tconst fn = options.fn;\n\n\tif( typeof fn !== \"function\" ) {\n\t\tconst error = new TypeError( \"onGamepadConnected: fn must be a function.\" );\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tm_onConnectHandlers.push( fn );\n\tstartGamepad();\n}\n\ncommands.addCommand( \"onGamepadDisconnected\", onGamepadDisconnected, [ \"fn\" ] );\nfunction onGamepadDisconnected( options ) {\n\tconst fn = options.fn;\n\n\tif( typeof fn !== \"function\" ) {\n\t\tconst error = new TypeError( \"onGamepadDisconnected: fn must be a function.\" );\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tm_onDisconnectHandlers.push( fn );\n\tstartGamepad();\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\nfunction gamepadConnected( e ) {\n\n\tupdateGamepad( e.gamepad );\n\n\t// Trigger connect handlers\n\tconst gamepadData = m_gamepads[ e.gamepad.index ];\n\tfor( const handler of m_onConnectHandlers ) {\n\t\thandler( gamepadData );\n\t}\n}\n\nfunction gamepadDisconnected( e ) {\n\n\t// Trigger disconnect handlers\n\tconst data = {\n\t\t\"index\": e.gamepad.index,\n\t\t\"id\": e.gamepad.id,\n\t\t\"mapping\": e.gamepad.mapping,\n\t\t\"connected\": e.gamepad.connected\n\t};\n\n\tfor( const handler of m_onDisconnectHandlers ) {\n\t\thandler( data );\n\t}\n\n\tdelete m_gamepads[ e.gamepad.index ];\n}\n\nfunction gamepadLoop() {\n\tif( !m_isLooping ) {\n\t\treturn;\n\t}\n\n\tupdateGamepads();\n\n\tm_tick += 1;\n\tm_gamepadLoopId = requestAnimationFrame( gamepadLoop );\n}\n\nfunction updateGamepads() {\n\tlet gamepads;\n\n\t// Prevent updateGamepads from triggering multiple times in the same loop\n\tif( m_lastGamepadUpdateTick === m_tick ) {\n\t\treturn;\n\t}\n\tm_lastGamepadUpdateTick = m_tick;\n\n\tif( \"getGamepads\" in navigator ) {\n\t\tgamepads = navigator.getGamepads();\n\t} else if( \"webkitGetGamepads\" in navigator ) {\n\t\tgamepads = navigator.webkitGetGamepads();\n\t} else {\n\t\tgamepads = [];\n\t}\n\n\tfor( let i = 0; i < gamepads.length; i++ ) {\n\t\tif( gamepads[ i ] && gamepads[ i ].index in m_gamepads ) {\n\t\t\tupdateGamepad( gamepads[ i ] );\n\t\t}\n\t}\n\n\t\n}\n\nfunction createNewGamepadData( gamepadDataRaw ) {\n\n\t// Create the new gamepad data object\n\tconst newGamepadData = {\n\t\t\"index\": gamepadDataRaw.index,\n\t\t\"id\": gamepadDataRaw.id,\n\t\t\"connected\": gamepadDataRaw.connected,\n\t\t\"mapping\": gamepadDataRaw.mapping,\n\t\t\"timestamp\": gamepadDataRaw.timestamp,\n\t\t\"vibrationActuator\": gamepadDataRaw.vibrationActuator,\n\t\t\"axes\": [],\n\t\t\"lastAxes\": [],\n\t\t\"buttons\": []\n\t};\n\n\t// Attach event listeners with helper functions\n\tnewGamepadData.getButton = function( buttonIndex ) {\n\t\tif( buttonIndex < 0 || buttonIndex >= this.buttons.length ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.buttons[ buttonIndex ];\n\t};\n\tnewGamepadData.getButtonPressed = function ( buttonIndex ) {\n\t\tif( buttonIndex < 0 || buttonIndex >= this.buttons.length ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.buttons[ buttonIndex ].pressed;\n\t}\n\tnewGamepadData.getButtonJustPressed = function( buttonIndex ) {\n\t\tif( buttonIndex < 0 || buttonIndex >= this.buttons.length ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.buttons[ buttonIndex ].pressStarted;\n\t};\n\tnewGamepadData.getButtonJustReleased = function( buttonIndex ) {\n\t\tif( buttonIndex < 0 || buttonIndex >= this.buttons.length ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.buttons[ buttonIndex ].pressReleased;\n\t};\n\tnewGamepadData.getAxis = function( axisIndex ) {\n\t\tif( axisIndex < 0 || axisIndex >= this.axes.length ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.axes[ axisIndex ];\n\t};\n\tnewGamepadData.getAxisChanged = function( axisIndex ) {\n\t\tif( axisIndex < 0 || axisIndex >= this.axes.length ) {\n\t\t\treturn false;\n\t\t}\n\t\tconst current = this.axes[ axisIndex ];\n\t\tconst last = this.lastAxes[ axisIndex ] || 0;\n\t\treturn current !== last;\n\t};\n\n\treturn newGamepadData;\n}\n\nfunction updateGamepad( gamepadRawData ) {\n\tlet gamepadData = m_gamepads[ gamepadRawData.index ];\n\tif( !gamepadData ) {\n\t\tgamepadData = createNewGamepadData( gamepadRawData );\n\t\tm_gamepads[ gamepadRawData.index ] = gamepadData;\n\t}\n\n\t// Update buttons\n\tconst newButtons = [];\n\tfor( let i = 0; i < gamepadRawData.buttons.length; i += 1 ) {\n\t\tconst buttonNew = gamepadRawData.buttons[ i ];\n\t\tconst buttonOld = gamepadData.buttons[ i ] || { \"pressed\": false };\n\t\tnewButtons.push( {\n\t\t\t\"pressed\": buttonNew.pressed,\n\t\t\t\"value\": buttonNew.value,\n\t\t\t\"pressStarted\": !buttonOld.pressed && buttonNew.pressed,\n\t\t\t\"pressReleased\": buttonOld.pressed && !buttonNew.pressed\n\t\t} );\n\t}\n\tgamepadData.buttons = newButtons;\n\n\t// Update Axes\n\tgamepadData.lastAxes = gamepadData.axes.slice();\n\tgamepadData.axes = [];\n\tfor( let i = 0; i < gamepadRawData.axes.length; i++ ) {\n\t\tgamepadData.axes.push( smoothAxis( gamepadRawData.axes[ i ] ) );\n\t}\n\n\t// Update Raw Data\n\tgamepadData.timestamp = gamepadRawData.timestamp;\n\tgamepadData.connected = gamepadRawData.connected;\n\tgamepadData.vibrationActuator = gamepadRawData.vibrationActuator;\n\n}\n\nfunction smoothAxis( axis ) {\n\tif( Math.abs( axis ) < m_axesSensitivity ) {\n\t\treturn 0;\n\t}\n\taxis = axis - Math.sign( axis ) * m_axesSensitivity;\n\taxis = axis / ( 1 - m_axesSensitivity );\n\treturn axis;\n}\n\nfunction onWindowBlur() {\n\n\t// Pause gamepad loop when window loses focus\n\tif( m_isLooping ) {\n\t\tif( m_gamepadLoopId ) {\n\t\t\tcancelAnimationFrame( m_gamepadLoopId );\n\t\t\tm_gamepadLoopId = null;\n\t\t}\n\t}\n}\n\nfunction onWindowFocus() {\n\n\t// Resume gamepad loop when window regains focus\n\tif( m_isLooping && !m_gamepadLoopId ) {\n\t\tm_gamepadLoopId = requestAnimationFrame( gamepadLoop );\n\t}\n}", "/**\n * Pi.js - Event Management Module\n * \n * Centralized event listener management for input events (mouse, touch, keyboard, etc.)\n * \n * @module core/events\n */\n\n\"use strict\";\n\nimport * as utils from \"./utils\";\nimport * as screenManager from \"./screen-manager\";\n\n// Import clear functions from input modules\nimport { clearKeyboardEvents } from \"../modules/keyboard\";\nimport { clearMouseEvents } from \"../modules/mouse\";\nimport { clearTouchEvents } from \"../modules/touch\";\nimport { clearPressEvents, clearClickEvents } from \"../modules/press\";\nimport { clearGamepadEvents } from \"../modules/gamepad\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// Register clearEvents command\n\t// Screen is optional since keyboard and gamepad don't require a screen\n\tscreenManager.addCommand( \"clearEvents\", clearEvents, [ \"type\" ], true );\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n/**\n * Clear event handlers for specified input types\n * \n * @param {Object|null} screenData - Screen data object (null if no screen available)\n * @param {Object} options - Command options\n * @param {string|Array<string>} options.type - Type(s) to clear (keyboard, mouse, touch, press, click, gamepad)\n */\nfunction clearEvents( screenData, options ) {\n\tconst type = options.type;\n\tconst types = Array.isArray( type ) ? type : ( type ? [ type ] : null );\n\n\t// If no type specified, clear all\n\tif( !types ) {\n\t\tclearKeyboardEvents();\n\t\tclearGamepadEvents();\n\t\tif( screenData ) {\n\t\t\tclearMouseEvents( screenData );\n\t\t\tclearTouchEvents( screenData );\n\t\t\tclearPressEvents( screenData );\n\t\t\tclearClickEvents( screenData );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Clear specific types\n\tfor( const t of types ) {\n\t\tconst lowerType = t.toLowerCase();\n\t\tif( lowerType === \"keyboard\" ) {\n\t\t\tclearKeyboardEvents();\n\t\t} else if( lowerType === \"gamepad\" ) {\n\t\t\tclearGamepadEvents();\n\t\t} else if( lowerType === \"mouse\" ) {\n\t\t\tif( !screenData ) {\n\t\t\t\tconst error = new Error( \"clearEvents: No screen available to clear mouse events.\" );\n\t\t\t\terror.code = \"NO_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tclearMouseEvents( screenData );\n\t\t} else if( lowerType === \"touch\" ) {\n\t\t\tif( !screenData ) {\n\t\t\t\tconst error = new Error( \"clearEvents: No screen available to clear touch events.\" );\n\t\t\t\terror.code = \"NO_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tclearTouchEvents( screenData );\n\t\t} else if( lowerType === \"press\" ) {\n\t\t\tif( !screenData ) {\n\t\t\t\tconst error = new Error( \"clearEvents: No screen available to clear press events.\" );\n\t\t\t\terror.code = \"NO_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tclearPressEvents( screenData );\n\t\t} else if( lowerType === \"click\" ) {\n\t\t\tif( !screenData ) {\n\t\t\t\tconst error = new Error( \"clearEvents: No screen available to clear click events.\" );\n\t\t\t\terror.code = \"NO_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tclearClickEvents( screenData );\n\t\t} else {\n\t\t\tconst error = new Error(\n\t\t\t\t`clearEvents: Invalid type \"${t}\". ` +\n\t\t\t\t`Valid types: keyboard, mouse, touch, press, click, gamepad.`\n\t\t\t);\n\t\t\terror.code = \"INVALID_TYPE\";\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Event Management Functions\n **************************************************************************************************/\n\n\n/**\n * Register an event listener\n * \n * @param {string} mode - Event mode (e.g., \"down\", \"up\", \"move\")\n * @param {Function} fn - Callback function\n * @param {boolean} once - If true, listener is removed after first trigger\n * @param {Object} hitBox - Optional hit box with x, y, width, height properties\n * @param {Array<string>} modes - Valid modes for this event type\n * @param {string} name - Command name for error messages\n * @param {Object} listenerArr - Object containing listener arrays by mode\n * @param {string} extraId - Optional extra ID to append to mode\n * @param {*} extraData - Optional extra data to store with listener\n * @param {*} customData - Optional custom data passed to callback\n * @returns {boolean} True if listener was successfully registered\n */\nexport function onevent(\n\tmode, fn, once, hitBox, modes, name, listenerArr, extraId, extraData, customData\n) {\n\tlet modeFound = false;\n\n\t// Validate mode\n\tfor( let i = 0; i < modes.length; i++ ) {\n\t\tif( mode === modes[ i ] ) {\n\t\t\tmodeFound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif( !modeFound ) {\n\t\tconst error = new Error(\n\t\t\t`${name}: mode needs to be one of the following: ${modes.join( \", \" )}.`\n\t\t);\n\t\terror.code = \"INVALID_MODE\";\n\t\tthrow error;\n\t}\n\n\t// Validate once parameter\n\tonce = !!( once );\n\n\t// Validate callback function\n\tif( !utils.isFunction( fn ) ) {\n\t\tconst error = new Error( `${name}: fn is not a valid function.` );\n\t\terror.code = \"INVALID_FUNCTION\";\n\t\tthrow error;\n\t}\n\n\t// Validate hitBox\n\tif( hitBox ) {\n\t\tif(\n\t\t\t!Number.isInteger( hitBox.x ) ||\n\t\t\t!Number.isInteger( hitBox.y ) ||\n\t\t\t!Number.isInteger( hitBox.width ) ||\n\t\t\t!Number.isInteger( hitBox.height )\n\t\t) {\n\t\t\tconst error = new Error(\n\t\t\t\t`${name}: hitBox must have properties x, y, width, and height ` +\n\t\t\t\t`whose values are integers.`\n\t\t\t);\n\t\t\terror.code = \"INVALID_HITBOX\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Use setTimeout to prevent event from being triggered if called within an event\n\tsetTimeout( () => {\n\t\tconst originalFn = fn;\n\t\tlet newMode = mode;\n\n\t\t// Add extraId to mode if provided\n\t\tif( typeof extraId === \"string\" ) {\n\t\t\tnewMode = mode + extraId;\n\t\t}\n\n\t\t// Wrap function if it should only run once\n\t\tlet wrappedFn = fn;\n\t\tif( once ) {\n\t\t\twrappedFn = ( data, customData ) => {\n\t\t\t\toffevent( mode, originalFn, modes, name, listenerArr, extraId );\n\t\t\t\toriginalFn( data, customData );\n\t\t\t};\n\t\t}\n\n\t\t// Initialize listener array for this mode if needed\n\t\tif( !listenerArr[ newMode ] ) {\n\t\t\tlistenerArr[ newMode ] = [];\n\t\t}\n\n\t\t// Add listener\n\t\tlistenerArr[ newMode ].push( {\n\t\t\t\"fn\": wrappedFn,\n\t\t\t\"hitBox\": hitBox,\n\t\t\t\"extraData\": extraData,\n\t\t\t\"clickDown\": false,\n\t\t\t\"originalFn\": originalFn,\n\t\t\t\"customData\": customData\n\t\t} );\n\t}, 1 );\n\n\treturn true;\n}\n\n/**\n * Unregister an event listener\n * \n * @param {string} mode - Event mode\n * @param {Function} fn - Callback function to remove, or null to remove all\n * @param {Array<string>} modes - Valid modes for this event type\n * @param {string} name - Command name for error messages\n * @param {Object} listenerArr - Object containing listener arrays by mode\n * @param {string} extraId - Optional extra ID appended to mode\n * @returns {boolean} True if listener(s) were successfully removed\n */\nexport function offevent( mode, fn, modes, name, listenerArr, extraId ) {\n\tlet modeFound = false;\n\n\t// Validate mode\n\tfor( let i = 0; i < modes.length; i++ ) {\n\t\tif( mode === modes[ i ] ) {\n\t\t\tmodeFound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif( !modeFound ) {\n\t\tconst error = new Error(\n\t\t\t`${name}: mode needs to be one of the following: ${modes.join( \", \" )}.`\n\t\t);\n\t\terror.code = \"INVALID_MODE\";\n\t\tthrow error;\n\t}\n\n\t// Add extraId to mode if provided\n\tif( typeof extraId === \"string\" ) {\n\t\tmode += extraId;\n\t}\n\n\t// Determine if clearing all listeners or specific function\n\tconst isClear = fn == null;\n\n\tif( !isClear && !utils.isFunction( fn ) ) {\n\t\tconst error = new Error( `${name}: fn is not a valid function.` );\n\t\terror.code = \"INVALID_FUNCTION\";\n\t\tthrow error;\n\t}\n\n\t// Remove listeners\n\tif( listenerArr[ mode ] ) {\n\t\tif( isClear ) {\n\n\t\t\t// Remove all listeners for this mode\n\t\t\tdelete listenerArr[ mode ];\n\t\t} else {\n\n\t\t\t// Remove specific function\n\t\t\tfor( let i = listenerArr[ mode ].length - 1; i >= 0; i-- ) {\n\t\t\t\tif( listenerArr[ mode ][ i ].originalFn === fn ) {\n\t\t\t\t\tlistenerArr[ mode ].splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Clean up empty array\n\t\t\tif( listenerArr[ mode ].length === 0 ) {\n\t\t\t\tdelete listenerArr[ mode ];\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Trigger all event listeners for a specific mode\n * \n * @param {string} mode - Event mode to trigger\n * @param {*} data - Event data to pass to listeners\n * @param {Object} listenerArr - Object containing listener arrays by mode\n * @param {string} clickStatus - Optional \"down\" or \"up\" for click tracking\n */\nexport function triggerEventListeners( mode, data, listenerArr, clickStatus ) {\n\tif( !listenerArr[ mode ] ) {\n\t\treturn;\n\t}\n\n\t// Make a copy to prevent infinite loops if listener adds new listeners\n\tconst temp = listenerArr[ mode ].slice();\n\n\t// Loop through all event listeners\n\tfor( let i = 0; i < temp.length; i++ ) {\n\t\tconst listener = temp[ i ];\n\n\t\t// Handle click up without click down\n\t\tif( clickStatus === \"up\" && !listener.clickDown ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check hitBox if present\n\t\tif( listener.hitBox ) {\n\t\t\tlet isHit = false;\n\t\t\tlet newData;\n\n\t\t\t// Handle array data (touches)\n\t\t\tif( Array.isArray( data ) ) {\n\t\t\t\tnewData = [];\n\t\t\t\tfor( let j = 0; j < data.length; j++ ) {\n\t\t\t\t\tconst pos = data[ j ];\n\t\t\t\t\tif( utils.inRange( pos, listener.hitBox ) ) {\n\t\t\t\t\t\tnewData.push( pos );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( newData.length > 0 ) {\n\t\t\t\t\tisHit = true;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Handle single data point (mouse)\n\t\t\t\tnewData = data;\n\t\t\t\tif( utils.inRange( data, listener.hitBox ) ) {\n\t\t\t\t\tisHit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( isHit ) {\n\n\t\t\t\t// For click events, track down state\n\t\t\t\tif( clickStatus === \"down\" ) {\n\t\t\t\t\tlistener.clickDown = true;\n\t\t\t\t} else {\n\t\t\t\t\tlistener.clickDown = false;\n\t\t\t\t\tlistener.fn( newData, listener.customData );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// No hitBox, trigger for all events\n\t\t\tlistener.fn( data, listener.customData );\n\t\t}\n\t}\n}\n\n", "/**\r\n * Pi.js - Graphics Module\r\n * \r\n * Basic Graphics Commands: pset, line, rect, circle, get, put, getPixel\r\n * \r\n * @module modules/graphics\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport * as screenManager from \"../core/screen-manager\";\r\nimport * as utils from \"../core/utils\";\r\nimport * as renderer from \"../core/renderer\";\r\nimport * as colors from \"../core/colors\";\r\n\r\n\r\n/***************************************************************************************************\r\n * Module Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// Initialize graphics module\r\nexport function init() {\r\n\tscreenManager.addScreenDataItem( \"cursor\", { \"x\": 0, \"y\": 0 } );\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * External API Commands\r\n **************************************************************************************************/\r\n\r\n\r\n// pset command\r\nscreenManager.addPixelCommand( \"pset\", pset, [ \"x\", \"y\" ] );\r\nfunction pset( screenData, options ) {\r\n\tconst x = utils.getInt( options.x, null );\r\n\tconst y = utils.getInt( options.y, null );\r\n\r\n\t// Make sure x and y are integers\r\n\tif( x === null || y === null ) {\r\n\t\tconst error = new TypeError( \"pset: Parameters x and y must be integers.\" );\r\n\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Make sure x and y are on the screen\r\n\tif( ! utils.inRange2( x, y, 0, 0, screenData.width, screenData.height ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Get the fore color\r\n\tconst color = screenData.color;\r\n\r\n\trenderer.getImageData( screenData );\r\n\tscreenData.pen( screenData, x, y, color );\r\n\trenderer.setImageDirty( screenData );\r\n\r\n\t// Set the cursor after drawing\r\n\tscreenData.cursor.x = x;\r\n\tscreenData.cursor.y = y;\r\n}\r\n\r\nscreenManager.addAACommand( \"pset\", aaPset, [ \"x\", \"y\" ] );\r\nfunction aaPset( screenData, options ) {\r\n\tconst x = utils.getFloat( options.x, null );\r\n\tconst y = utils.getFloat( options.y, null );\r\n\r\n\tif( x === null || y === null ) {\r\n\t\tconst error = new TypeError( \"pset: Parameters x and y must be numbers.\" );\r\n\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tscreenData.api.render();\r\n\tscreenData.context.beginPath();\r\n\tscreenData.context.moveTo( x, y );\r\n\tscreenData.context.lineTo( x, y );\r\n\tscreenData.context.stroke();\r\n\r\n\t// Set the cursor after drawing\r\n\tscreenData.cursor.x = x;\r\n\tscreenData.cursor.y = y;\r\n}\r\n\r\n\r\n// line command\r\nscreenManager.addPixelCommand( \"line\", line, [ \"x1\", \"y1\", \"x2\", \"y2\" ] );\r\nfunction line( screenData, options ) {\r\n\tlet x1 = utils.getInt( options.x1, null );\r\n\tlet y1 = utils.getInt( options.y1, null );\r\n\tconst x2 = utils.getInt( options.x2, null );\r\n\tconst y2 = utils.getInt( options.y2, null );\r\n\r\n\t// Make sure x and y are integers\r\n\tif( x1 === null || y1 === null || x2 === null || y2 === null ) {\r\n\t\tconst error = new TypeError( \"line: Arguments x1, y1, x2, and y2 must be integers.\" );\r\n\t\terror.code = \"INVALID_COORDINATES\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Initialize the color for the line\r\n\tconst color = screenData.color;\r\n\r\n\tconst dx = Math.abs( x2 - x1 );\r\n\tconst dy = Math.abs( y2 - y1 );\r\n\r\n\t// Set the x slope\r\n\tlet sx;\r\n\tif( x1 < x2 ) {\r\n\t\tsx = 1;\r\n\t} else {\r\n\t\tsx = -1;\r\n\t}\r\n\r\n\t// Set the y slope\r\n\tlet sy;\r\n\tif( y1 < y2 ) {\r\n\t\tsy = 1;\r\n\t} else {\r\n\t\tsy = -1;\r\n\t}\r\n\r\n\t// Set the err\r\n\tlet err = dx - dy;\r\n\r\n\t// Get the image data\r\n\trenderer.getImageData( screenData );\r\n\r\n\t// Set the first pixel\r\n\tscreenData.pen( screenData, x1, y1, color );\r\n\r\n\t// Loop until the end of the line\r\n\twhile( !( ( x1 === x2 ) && ( y1 === y2 ) ) ) {\r\n\t\tconst e2 = err << 1;\r\n\r\n\t\tif( e2 > -dy ) {\r\n\t\t\terr -= dy;\r\n\t\t\tx1 += sx;\r\n\t\t}\r\n\r\n\t\tif( e2 < dx ) {\r\n\t\t\terr += dx;\r\n\t\t\ty1 += sy;\r\n\t\t}\r\n\r\n\t\t// Set the next pixel\r\n\t\tscreenData.pen( screenData, x1, y1, color );\r\n\t}\r\n\r\n\trenderer.setImageDirty( screenData );\r\n}\r\n\r\nscreenManager.addAACommand( \"line\", aaLine, [ \"x1\", \"y1\", \"x2\", \"y2\" ] );\r\nfunction aaLine( screenData, options ) {\r\n\tconst x1 = utils.getFloat( options.x1, null );\r\n\tconst y1 = utils.getFloat( options.y1, null );\r\n\tconst x2 = utils.getFloat( options.x2, null );\r\n\tconst y2 = utils.getFloat( options.y2, null );\r\n\r\n\tif( x1 === null || y1 === null || x2 === null || y2 === null ) {\r\n\t\tconst error = new TypeError( \"line: Parameters x1, y1, x2, y2 must be numbers.\" );\r\n\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tscreenData.api.render();\r\n\tscreenData.context.strokeStyle = screenData.color.hex;\r\n\tscreenData.context.beginPath();\r\n\tscreenData.context.moveTo( x1, y1 );\r\n\tscreenData.context.lineTo( x2, y2 );\r\n\tscreenData.context.stroke();\r\n}\r\n\r\n\r\n// rect command\r\nscreenManager.addPixelCommand( \"rect\", rect, [ \"x\", \"y\", \"width\", \"height\", \"fillColor\" ] );\r\nfunction rect( screenData, options ) {\r\n\tlet x = utils.getInt( options.x, null );\r\n\tlet y = utils.getInt( options.y, null );\r\n\tconst width = utils.getInt( options.width, null );\r\n\tconst height = utils.getInt( options.height, null );\r\n\tlet fillColor = options.fillColor;\r\n\r\n\tif( x === null || y === null || width === null || height === null ) {\r\n\t\tconst error = new TypeError( \"rect: Paramters x, y, width, and height must be integers.\" );\r\n\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tlet isFill = false;\r\n\tif( fillColor != null ) {\r\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\r\n\t\tif( fillColor === null ) {\r\n\t\t\tconst error = new TypeError(\r\n\t\t\t\t\"rect: Parameter fillColor must be a valid color format.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tisFill = true;\r\n\t}\r\n\r\n\tconst x2 = x + width - 1;\r\n\tconst y2 = y + height - 1;\r\n\r\n\t// Draw the four lines of the rectangle\r\n\tscreenData.api.line( x, y, x2, y );\r\n\tscreenData.api.line( x2, y, x2, y2 );\r\n\tscreenData.api.line( x2, y2, x, y2 );\r\n\tscreenData.api.line( x, y2, x, y );\r\n\r\n\tif(\r\n\t\tisFill && width > screenData.penData.size && height > screenData.penData.size &&\r\n\t\twidth > 2 && height > 2\r\n\t) {\r\n\r\n\t\tconst tempColor = screenData.color;\r\n\t\tscreenData.color = fillColor;\r\n\r\n\t\trenderer.getImageData( screenData );\r\n\r\n\t\ty = y + screenData.penData.size;\r\n\t\tlet y2Adjusted = y2 - screenData.penData.size + 1;\r\n\t\tx = x + screenData.penData.size;\r\n\t\tlet x2Adjusted = x2 - screenData.penData.size + 1;\r\n\r\n\t\tif( x < 0 ) {\r\n\t\t\tx = 0;\r\n\t\t}\r\n\t\tif( x2Adjusted > screenData.width ) {\r\n\t\t\tx2Adjusted = screenData.width;\r\n\t\t}\r\n\r\n\t\tif( y < 0 ) {\r\n\t\t\ty = 0;\r\n\t\t}\r\n\t\tif( y2Adjusted > screenData.height ) {\r\n\t\t\ty2Adjusted = screenData.height;\r\n\t\t}\r\n\r\n\t\t// Draw line by line\r\n\t\tfor( ; y < y2Adjusted; y += 1 ) {\r\n\t\t\tfor( let x3 = x; x3 < x2Adjusted; x3 += 1 ) {\r\n\t\t\t\tscreenData.pen( screenData, x3, y, fillColor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.setImageDirty( screenData );\r\n\t\tscreenData.color = tempColor;\r\n\t}\r\n}\r\n\r\nscreenManager.addAACommand( \"rect\", aaRect, [ \"x\", \"y\", \"width\", \"height\", \"fillColor\" ] );\r\nfunction aaRect( screenData, options ) {\r\n\tconst x = utils.getFloat( options.x, null );\r\n\tconst y = utils.getFloat( options.y, null );\r\n\tconst width = utils.getFloat( options.width, null );\r\n\tconst height = utils.getFloat( options.height );\r\n\tlet fillColor = options.fillColor;\r\n\tlet isFill = false;\r\n\r\n\tif( x === null || y === null || width === null || height === null ) {\r\n\t\tconst error = new TypeError( \"rect: Parameters x, y, width, height must be numbers.\" );\r\n\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( fillColor != null ) {\r\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\r\n\t\tif( fillColor === null ) {\r\n\t\t\tconst error = new TypeError(\r\n\t\t\t\t\"rect: Parameter fillColor must be a valid color format.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tisFill = true;\r\n\t}\r\n\r\n\tscreenData.api.render();\r\n\tscreenData.context.beginPath();\r\n\tscreenData.context.strokeStyle = screenData.color.hex;\r\n\tscreenData.context.rect( x, y, width, height );\r\n\tif( isFill ) {\r\n\t\tscreenData.context.fillStyle = fillColor.hex;\r\n\t\tscreenData.context.fill();\r\n\t}\r\n\tscreenData.context.stroke();\r\n}\r\n\r\n\r\n// circle command\r\nscreenManager.addPixelCommand( \"circle\", circle, [ \"x\", \"y\", \"radius\", \"fillColor\" ] );\r\nfunction circle( screenData, options ) {\r\n\tconst x = utils.getInt( options.x, null );\r\n\tconst y = utils.getInt( options.y, null );\r\n\tlet radius = utils.getInt( options.radius, null );\r\n\tlet fillColor = options.fillColor;\r\n\tlet isFill = false;\r\n\r\n\tif( x === null || y === null || radius === null ) {\r\n\t\tconst error = new TypeError( \"circle: Paramters x, y, and radius must be integers.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( fillColor != null ) {\r\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\r\n\t\tif( fillColor === null ) {\r\n\t\t\tconst error = new TypeError(\r\n\t\t\t\t\"circle: Parameter fillColor must be a valid color format.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tisFill = true;\r\n\t}\r\n\r\n\trenderer.getImageData( screenData );\r\n\r\n\t// Initialize the color for the circle\r\n\tconst color = screenData.color;\r\n\r\n\t// Fill the circle first if needed (draw horizontal lines)\r\n\tif( isFill ) {\r\n\t\tconst r = radius - 1;\r\n\t\tconst rSquared = r * r;\r\n\r\n\t\t// Draw horizontal lines for each row of the circle\r\n\t\tfor( let dy = -r; dy <= r; dy++ ) {\r\n\t\t\tconst py = y + dy;\r\n\r\n\t\t\t// Skip if row is out of bounds\r\n\t\t\tif( py < 0 || py >= screenData.height ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate half-width of circle at this y coordinate\r\n\t\t\tconst dx = Math.floor( Math.sqrt( rSquared - dy * dy ) );\r\n\r\n\t\t\t// Draw horizontal line from -dx to +dx\r\n\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\r\n\r\n\t\t\t\t// Skip if pixel is out of bounds\r\n\t\t\t\tif( px < 0 || px >= screenData.width ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set individual pixel for scanline fill\r\n\t\t\t\tconst i = ( py * screenData.width + px ) * 4;\r\n\t\t\t\tconst data = screenData.imageData2;\r\n\t\t\t\tdata[ i ] = fillColor.r;\r\n\t\t\t\tdata[ i + 1 ] = fillColor.g;\r\n\t\t\t\tdata[ i + 2 ] = fillColor.b;\r\n\t\t\t\tdata[ i + 3 ] = fillColor.a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Draw the outline after fill (outline will overwrite fill pixels on border)\r\n\tradius -= 1;\r\n\tlet x2 = radius;\r\n\tlet y2 = 0;\r\n\r\n\t// Only print initial points if r > 0\r\n\tif( radius > 1 ) {\r\n\t\tscreenData.pen( screenData, x2 + x, y2 + y, color );\r\n\t\tscreenData.pen( screenData, -x2 + x, y2 + y, color );\r\n\t\tscreenData.pen( screenData, x, x2 + y, color );\r\n\t\tscreenData.pen( screenData, x, -x2 + y, color );\r\n\t} else if( radius === 1 ) {\r\n\t\tscreenData.pen( screenData, x + 1, y, color );\r\n\t\tscreenData.pen( screenData, x - 1, y, color );\r\n\t\tscreenData.pen( screenData, x, y + 1, color );\r\n\t\tscreenData.pen( screenData, x, y - 1, color );\r\n\t\ty2 = x2 + 1;\r\n\t} else if( radius === 0 ) {\r\n\t\tscreenData.pen( screenData, x, y, color );\r\n\t\ty2 = x2 + 1;\r\n\t}\r\n\r\n\t// Initialize p\r\n\tlet midPoint = 1 - radius;\r\n\twhile( x2 > y2 ) {\r\n\t\ty2 += 1;\r\n\r\n\t\tif( midPoint <= 0 ) {\r\n\r\n\t\t\t// Mid-point is inside or on the perimeter\r\n\t\t\tmidPoint = midPoint + 2 * y2 + 1;\r\n\t\t} else {\r\n\r\n\t\t\t// Mid point is outside the perimeter\r\n\t\t\tx2 -= 1;\r\n\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\r\n\t\t}\r\n\r\n\t\t// Set pixels around point and reflection in other octants\r\n\t\tscreenData.pen( screenData, x2 + x, y2 + y, color );\r\n\t\tscreenData.pen( screenData, -x2 + x, y2 + y, color );\r\n\t\tscreenData.pen( screenData, x2 + x, -y2 + y, color );\r\n\t\tscreenData.pen( screenData, -x2 + x, -y2 + y, color );\r\n\r\n\t\t// Set pixels on the perimeter points if not on x = y\r\n\t\tif( x2 != y2 ) {\r\n\t\t\tscreenData.pen( screenData, y2 + x, x2 + y, color );\r\n\t\t\tscreenData.pen( screenData, -y2 + x, x2 + y, color );\r\n\t\t\tscreenData.pen( screenData, y2 + x, -x2 + y, color );\r\n\t\t\tscreenData.pen( screenData, -y2 + x, -x2 + y, color );\r\n\t\t}\r\n\t}\r\n\r\n\trenderer.setImageDirty( screenData );\r\n}\r\n\r\nscreenManager.addAACommand( \"circle\", aaCircle, [ \"x\", \"y\", \"radius\", \"fillColor\" ] );\r\nfunction aaCircle( screenData, options ) {\r\n\tconst x = utils.getFloat( options.x + 0.5, null );\r\n\tconst y = utils.getFloat( options.y + 0.5, null );\r\n\tconst r = utils.getFloat( options.radius - 0.9, null );\r\n\tlet fillColor = options.fillColor;\r\n\r\n\tif( isNaN( x ) || isNaN( y ) || isNaN( r ) ) {\r\n\t\tconst error = new TypeError( \"circle: Parameters cx, cy, r must be numbers.\" );\r\n\t\terror.code = \"INVALID_PARAMETERS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tlet isFill = false;\r\n\tif( fillColor != null ) {\r\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor, \"circle\" );\r\n\t\tif( fillColor === null ) {\r\n\t\t\tconst error = new TypeError(\r\n\t\t\t\t\"circle: Parameter fillColor must be a valid color format.\"\r\n\t\t\t);\r\n\t\t\terror.code = \"INVALID_PARAMETER\";\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tisFill = true;\r\n\t}\r\n\r\n\tscreenData.api.render();\r\n\tconst angle1 = utils.degreesToRadian( 0 );\r\n\tconst angle2 = utils.degreesToRadian( 360 );\r\n\tscreenData.context.beginPath();\r\n\tscreenData.context.arc( x, y, r, angle1, angle2 );\r\n\tif( isFill ) {\r\n\t\tscreenData.context.fillStyle = fillColor.hex;\r\n\t\tscreenData.context.fill();\r\n\t}\r\n\tscreenData.context.strokeStyle = screenData.color.hex;\r\n\tscreenData.context.stroke();\r\n}\r\n\r\n\r\n// put command\r\nscreenManager.addCommand( \"put\", put, [ \"data\", \"x\", \"y\", \"includeZero\" ] );\r\nfunction put( screenData, options ) {\r\n\tconst data = options.data;\r\n\tconst x = Math.round( options.x );\r\n\tconst y = Math.round( options.y );\r\n\tconst includeZero = !!options.includeZero;\r\n\r\n\t// Exit if no data\r\n\tif( !data || data.length < 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( isNaN( x ) || isNaN( y ) ) {\r\n\t\tconst error = new TypeError( \"put: Parameters x and y must be integers.\" );\r\n\t\terror.code = \"INVALID_COORDINATES\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Clip x if offscreen\r\n\tlet startX;\r\n\tif( x < 0 ) {\r\n\t\tstartX = x * -1;\r\n\t} else {\r\n\t\tstartX = 0;\r\n\t}\r\n\r\n\t// Clip y if offscreen\r\n\tlet startY;\r\n\tif( y < 0 ) {\r\n\t\tstartY = y * -1;\r\n\t} else {\r\n\t\tstartY = 0;\r\n\t}\r\n\r\n\t// Calc width & height\r\n\tlet width = data[ 0 ].length - startX;\r\n\tlet height = data.length - startY;\r\n\r\n\t// Clamp width & height\r\n\tif( x + startX + width >= screenData.width ) {\r\n\t\twidth = screenData.width - x + startX;\r\n\t}\r\n\tif( y + startY + height >= screenData.height ) {\r\n\t\theight = screenData.height - y + startY;\r\n\t}\r\n\r\n\t// Exit if there is no data that fits the screen\r\n\tif( width <= 0 || height <= 0 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\trenderer.getImageData( screenData );\r\n\r\n\t// Loop through the data\r\n\tfor( let dataY = startY; dataY < startY + height; dataY++ ) {\r\n\t\tfor( let dataX = startX; dataX < startX + width; dataX++ ) {\r\n\r\n\t\t\t// Get the color\r\n\t\t\tconst c = screenData.pal[ data[ dataY ][ dataX ] ];\r\n\r\n\t\t\t// Calculate the index of the image data\r\n\t\t\tconst i = ( ( screenData.width * ( y + dataY ) ) + ( x + dataX ) ) * 4;\r\n\r\n\t\t\t// Put the color in the image data\r\n\t\t\tif( c.a > 0 || includeZero ) {\r\n\t\t\t\tscreenData.imageData2[ i ] = c.r;\r\n\t\t\t\tscreenData.imageData2[ i + 1 ] = c.g;\r\n\t\t\t\tscreenData.imageData2[ i + 2 ] = c.b;\r\n\t\t\t\tscreenData.imageData2[ i + 3 ] = c.a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderer.setImageDirty( screenData );\r\n}\r\n\r\n\r\n// get command\r\nscreenManager.addCommand( \"get\", get, [ \"x1\", \"y1\", \"x2\", \"y2\", \"tolerance\" ] );\r\nfunction get( screenData, options ) {\r\n\tlet x1 = Math.round( options.x1 );\r\n\tlet y1 = Math.round( options.y1 );\r\n\tlet x2 = Math.round( options.x2 );\r\n\tlet y2 = Math.round( options.y2 );\r\n\tlet tolerance = options.tolerance;\r\n\tconst isAddToPalette = !!options.isAddToPalette;\r\n\r\n\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\r\n\t\tconst error = new TypeError( \"get: Parameters x1, x2, y1, y2 must be integers.\" );\r\n\t\terror.code = \"INVALID_COORDINATES\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( tolerance == null ) {\r\n\t\ttolerance = 1;\r\n\t} else if( isNaN( tolerance ) ) {\r\n\t\tconst error = new TypeError( \"get: Parameter tolerance must be a number.\" );\r\n\t\terror.code = \"INVALID_TOLERANCE\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tx1 = utils.clamp( x1, 0, screenData.width - 1 );\r\n\tx2 = utils.clamp( x2, 0, screenData.width - 1 );\r\n\ty1 = utils.clamp( y1, 0, screenData.height - 1 );\r\n\ty2 = utils.clamp( y2, 0, screenData.height - 1 );\r\n\tif( x1 > x2 ) {\r\n\t\tconst t = x1;\r\n\t\tx1 = x2;\r\n\t\tx2 = t;\r\n\t}\r\n\tif( y1 > y2 ) {\r\n\t\tconst t = y1;\r\n\t\ty1 = y2;\r\n\t\ty2 = t;\r\n\t}\r\n\r\n\trenderer.getImageData( screenData );\r\n\r\n\tconst imageData2 = screenData.imageData2;\r\n\tconst data = [];\r\n\tlet colorLookupFn;\r\n\tif( tolerance === 1 ) {\r\n\t\tcolorLookupFn = ( i ) => {\r\n\t\t\tconst key = utils.generateColorKey(\r\n\t\t\t\timageData2[ i ],\r\n\t\t\t\timageData2[ i + 1],\r\n\t\t\t\timageData2[ i + 2 ],\r\n\t\t\t\timageData2[ i + 3 ]\r\n\t\t\t);\r\n\t\t\tif( screenData.palMap.has( key ) ) {\r\n\t\t\t\tdata[ row ].push( screenData.palMap.get( key ) );\r\n\t\t\t} else {\r\n\t\t\t\tdata[ row ].push( 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tcolorLookupFn = ( i ) => {\r\n\t\t\tconst colorValue = utils.rgbToColor(\r\n\t\t\t\timageData2[ i ],\r\n\t\t\t\timageData2[ i + 1],\r\n\t\t\t\timageData2[ i + 2 ],\r\n\t\t\t\timageData2[ i + 3 ]\r\n\t\t\t);\r\n\t\t\tconst c = colors.findColorIndexByColorValue( screenData, colorValue, tolerance );\r\n\t\t\tif( c === null ) {\r\n\t\t\t\tdata[ row ].push( 0 );\r\n\t\t\t} else {\r\n\t\t\t\tdata[ row ].push( c );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet row = 0;\r\n\tfor( let y = y1; y <= y2; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = x1; x <= x2; x++ ) {\r\n\r\n\t\t\t// Calculate the index of the image data\r\n\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\r\n\t\t\tcolorLookupFn( i );\r\n\t\t}\r\n\t\trow += 1;\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\n\r\n// getPixel command\r\nscreenManager.addCommand( \"getPixel\", getPixel, [ \"x\", \"y\" ] );\r\nfunction getPixel( screenData, options ) {\r\n\tconst x = Math.round( options.x );\r\n\tconst y = Math.round( options.y );\r\n\r\n\t// Make sure x and y are integers\r\n\tif( !Number.isInteger( x ) || !Number.isInteger( y ) ) {\r\n\t\tconst error = new TypeError( \"getPixel: Arguments x and y must be integers.\" );\r\n\t\terror.code = \"INVALID_COORDINATES\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Check if coordinates are within bounds\r\n\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\r\n\t\tconst error = new RangeError( \"getPixel: Coordinates are out of bounds.\" );\r\n\t\terror.code = \"OUT_OF_BOUNDS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\trenderer.getImageData( screenData );\r\n\tconst data = screenData.imageData2;\r\n\r\n\t// Calculate the index\r\n\tconst i = ( ( screenData.width * y ) + x ) * 4;\r\n\tconst colorValue = utils.rgbToColor( data[ i ], data[ i + 1], data[ i + 2 ], data[ i + 3 ] );\r\n\tconst colorIndex = colors.findColorIndexByColorValue( screenData, colorValue );\r\n\treturn colorIndex;\r\n}\r\n\r\n\r\nscreenManager.addCommand( \"getPixelColor\", getPixelColor, [ \"x\", \"y\" ] );\r\nfunction getPixelColor( screenData, options ) {\r\n\tconst x = Math.round( options.x );\r\n\tconst y = Math.round( options.y );\r\n\r\n\t// Make sure x and y are integers\r\n\tif( !Number.isInteger( x ) || !Number.isInteger( y ) ) {\r\n\t\tconst error = new TypeError( \"getPixelColor: Arguments x and y must be integers.\" );\r\n\t\terror.code = \"INVALID_COORDINATES\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Check if coordinates are within bounds\r\n\tif( x < 0 || x >= screenData.width || y < 0 || y >= screenData.height ) {\r\n\t\tconst error = new RangeError( \"getPixelColor: Coordinates are out of bounds.\" );\r\n\t\terror.code = \"OUT_OF_BOUNDS\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\trenderer.getImageData( screenData );\r\n\tconst data = screenData.imageData2;\r\n\r\n\t// Calculate the index\r\n\tconst i = ( ( screenData.width * y ) + x ) * 4;\r\n\tconst colorValue = utils.rgbToColor( data[ i ], data[ i + 1], data[ i + 2 ], data[ i + 3 ] );\r\n\t\r\n\treturn colorValue;\r\n}\r\n\r\n\r\n/***************************************************************************************************\r\n * Internal Commands\r\n **************************************************************************************************/\r\n\r\n", "/**\n * Pi.js - Advanced Graphics Module\n * \n * Advanced Graphics Commands: arc, ellipse, bezier, filterImg\n * \n * @module modules/graphics-advanced\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as utils from \"../core/utils\";\nimport * as renderer from \"../core/renderer\";\nimport * as colors from \"../core/colors\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() { /* no-op */ }\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// arc command\nscreenManager.addPixelCommand( \"arc\", arc, [ \"x\", \"y\", \"radius\", \"angle1\", \"angle2\" ] );\nfunction arc( screenData, options ) {\n\tconst x = utils.getInt( options.x, null );\n\tconst y = utils.getInt( options.y, null );\n\tlet radius = utils.getInt( options.radius, null );\n\tlet angle1 = utils.getInt( options.angle1, null );\n\tlet angle2 = utils.getInt( options.angle2, null );\n\n\t// Make sure x and y are integers\n\tif( x === null || y === null || radius === null || angle1 === null || angle2 === null ) {\n\t\tconst error = new TypeError(\n\t\t\t\"arc: Argument's x, y, radius, angle1, and angle2 must be integers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tangle1 = ( angle1 + 360 ) % 360;\n\tangle2 = ( angle2 + 360 ) % 360;\n\tconst winding = angle1 > angle2;\n\n\trenderer.getImageData( screenData );\n\n\t// Initialize the color for the circle\n\tconst color = screenData.color;\n\n\tradius -= 1;\n\tif( radius < 0 ) {\n\t\tradius = 0;\n\t}\n\tlet x2 = radius;\n\tlet y2 = 0;\n\n\t// Helper function to check if angle is within arc range\n\tfunction set( x2, y2 ) {\n\t\tlet a = utils.radiansToDegrees( Math.atan2( y2 - y, x2 - x ) );\n\t\ta = ( a + 360 ) % 360;\n\t\tif( winding ) {\n\t\t\tif( a >= angle1 || a <= angle2 ) {\n\t\t\t\tscreenData.pen( screenData, x2, y2, color );\n\t\t\t}\n\t\t} else if( a >= angle1 && a <= angle2 ) {\n\t\t\tscreenData.pen( screenData, x2, y2, color );\n\t\t}\n\t}\n\n\t// Only print initial points if r > 0\n\tif( radius > 1 ) {\n\t\tset( x2 + x, y2 + y, color );\n\t\tset( -x2 + x, y2 + y, color );\n\t\tset( x, x2 + y, color );\n\t\tset( x, -x2 + y, color );\n\t} else if( radius === 1 ) {\n\t\tset( x + 1, y, color );\n\t\tset( x - 1, y, color );\n\t\tset( x, y + 1, color );\n\t\tset( x, y - 1, color );\n\t\trenderer.setImageDirty( screenData );\n\t\treturn;\n\t} else if( radius === 0 ) {\n\t\tscreenData.pen( screenData, x, y, color );\n\t\trenderer.setImageDirty( screenData );\n\t\treturn;\n\t}\n\n\t// Initialize p\n\tlet midPoint = 1 - radius;\n\twhile( x2 > y2 ) {\n\t\ty2 += 1;\n\n\t\tif( midPoint <= 0 ) {\n\n\t\t\t// Mid-point is inside or on the perimeter\n\t\t\tmidPoint = midPoint + 2 * y2 + 1;\n\t\t} else {\n\n\t\t\t// Mid point is outside the perimeter\n\t\t\tx2 -= 1;\n\t\t\tmidPoint = midPoint + 2 * y2 - 2 * x2 + 1;\n\t\t}\n\n\t\t// Set pixels around point and reflection in other octants\n\t\tset( x2 + x, y2 + y, color );\n\t\tset( -x2 + x, y2 + y, color );\n\t\tset( x2 + x, -y2 + y, color );\n\t\tset( -x2 + x, -y2 + y, color );\n\n\t\t// Set pixels on the perimeter points if not on x = y\n\t\tif( x2 != y2 ) {\n\t\t\tset( y2 + x, x2 + y, color );\n\t\t\tset( -y2 + x, x2 + y, color );\n\t\t\tset( y2 + x, -x2 + y, color );\n\t\t\tset( -y2 + x, -x2 + y, color );\n\t\t}\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\nscreenManager.addAACommand( \"arc\", aaArc, [ \"x\", \"y\", \"radius\", \"angle1\", \"angle2\" ] );\nfunction aaArc( screenData, options ) {\n\tlet x = utils.getFloat( options.x, null );\n\tlet y = utils.getFloat( options.y, null );\n\tlet radius = utils.getFloat( options.radius, null );\n\tconst angle1 = utils.getFloat( options.angle1, null );\n\tconst angle2 = utils.getFloat( options.angle2, null );\n\n\tif( x === null || y === null || radius === null || angle1 === null || angle2 === null ) {\n\t\tconst error = new TypeError(\n\t\t\t\"arc: Argument's x, y, radius, angle1, and angle2 must be numbers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tx = x + 0.5;\n\ty = y + 0.5;\n\tradius = radius - 0.9;\n\tif( radius < 0 ) {\n\t\tradius = 0;\n\t}\n\n\tscreenData.api.render();\n\tconst angle1Rad = utils.degreesToRadian( angle1 );\n\tconst angle2Rad = utils.degreesToRadian( angle2 );\n\tscreenData.context.beginPath();\n\tscreenData.context.strokeStyle = screenData.color.hex;\n\tscreenData.context.moveTo(\n\t\tx + Math.cos( angle1Rad ) * radius,\n\t\ty + Math.sin( angle1Rad ) * radius\n\t);\n\tscreenData.context.arc( x, y, radius, angle1Rad, angle2Rad );\n\tscreenData.context.stroke();\n}\n\n\n// ellipse command\nscreenManager.addPixelCommand( \"ellipse\", ellipse, [ \"x\", \"y\", \"radiusX\", \"radiusY\", \"fillColor\" ] );\nfunction ellipse( screenData, options ) {\n\tconst x = utils.getInt( options.x, null );\n\tconst y = utils.getInt( options.y, null );\n\tconst radiusX = utils.getInt( options.radiusX, null );\n\tconst radiusY = utils.getInt( options.radiusY, null );\n\tlet fillColor = options.fillColor;\n\n\tif( x === null || y === null || radiusX === null || radiusY === null ) {\n\t\tconst error = new TypeError(\n\t\t\t\"ellipse: Parameters x, y, radiusX, radiusY must be integers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\tlet isFill = false;\n\tif( fillColor !== null ) {\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\n\t\tif( fillColor === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: Parameter fillColor must be a valid color format.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\t\tisFill = true;\n\t}\n\n\trenderer.getImageData( screenData );\n\n\t// Initialize the color for the ellipse\n\tconst color = screenData.color;\n\n\tif( radiusX === 0 && radiusY === 0 ) {\n\t\tscreenData.pen( screenData, Math.floor( x ), Math.floor( y ), color );\n\t\trenderer.setImageDirty( screenData );\n\t\treturn;\n\t}\n\n\t// Fill the ellipse first if needed (draw horizontal lines)\n\tif( isFill ) {\n\t\tconst rxSquared = radiusX * radiusX;\n\t\tconst rySquared = radiusY * radiusY;\n\n\t\t// Draw horizontal lines for each row of the ellipse\n\t\tfor( let dy = -radiusY; dy <= radiusY; dy++ ) {\n\t\t\tconst py = y + dy;\n\n\t\t\t// Skip if row is out of bounds\n\t\t\tif( py < 0 || py >= screenData.height ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Calculate half-width of ellipse at this y coordinate\n\t\t\tconst dx = Math.floor( radiusX * Math.sqrt( 1 - ( dy * dy ) / rySquared ) );\n\n\t\t\t// Draw horizontal line from -dx to +dx\n\t\t\tfor( let px = x - dx; px <= x + dx; px++ ) {\n\n\t\t\t\t// Skip if pixel is out of bounds\n\t\t\t\tif( px < 0 || px >= screenData.width ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Set individual pixel for scanline fill\n\t\t\t\tconst i = ( py * screenData.width + px ) * 4;\n\t\t\t\tconst data = screenData.imageData2;\n\t\t\t\tdata[ i ] = fillColor.r;\n\t\t\t\tdata[ i + 1 ] = fillColor.g;\n\t\t\t\tdata[ i + 2 ] = fillColor.b;\n\t\t\t\tdata[ i + 3 ] = fillColor.a;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Starting points\n\tlet x2 = 0;\n\tlet y2 = radiusY;\n\n\t// Decision parameter of region 1\n\tlet d1 = ( radiusY * radiusY ) - ( radiusX * radiusX * radiusY ) + ( 0.25 * radiusX * radiusX );\n\n\tlet dx = 2 * radiusY * radiusY * x2;\n\tlet dy = 2 * radiusX * radiusX * y2;\n\n\t// For region 1\n\twhile( dx < dy ) {\n\n\t\t// 4-way symmetry\n\t\tscreenData.pen( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t// Checking and updating value of decision parameter based on algorithm\n\t\tif( d1 < 0 ) {\n\t\t\tx2++;\n\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\td1 = d1 + dx + ( radiusY * radiusY );\n\t\t} else {\n\t\t\tx2++;\n\t\t\ty2--;\n\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\td1 = d1 + dx - dy + ( radiusY * radiusY );\n\t\t}\n\t}\n\n\t// Decision parameter of region 2\n\tlet d2 = ( ( radiusY * radiusY ) * ( ( x2 + 0.5 ) * ( x2 + 0.5 ) ) ) +\n\t\t( ( radiusX * radiusX ) * ( ( y2 - 1 ) * ( y2 - 1 ) ) ) -\n\t\t( radiusX * radiusX * radiusY * radiusY );\n\n\t// Plotting points of region 2\n\twhile( y2 >= 0 ) {\n\n\t\t// 4-way symmetry\n\t\tscreenData.pen( screenData, Math.floor( x2 + x ), Math.floor( y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( -x2 + x ), Math.floor( y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( x2 + x ), Math.floor( -y2 + y ), color );\n\t\tscreenData.pen( screenData, Math.floor( -x2 + x ), Math.floor( -y2 + y ), color );\n\n\t\t// Checking and updating parameter value based on algorithm\n\t\tif( d2 > 0 ) {\n\t\t\ty2--;\n\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\td2 = d2 + ( radiusX * radiusX ) - dy;\n\t\t} else {\n\t\t\ty2--;\n\t\t\tx2++;\n\t\t\tdx = dx + ( 2 * radiusY * radiusY );\n\t\t\tdy = dy - ( 2 * radiusX * radiusX );\n\t\t\td2 = d2 + dx - dy + ( radiusX * radiusX );\n\t\t}\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\nscreenManager.addAACommand( \"ellipse\", aaEllipse, [ \"x\", \"y\", \"radiusX\", \"radiusY\", \"fillColor\" ] );\nfunction aaEllipse( screenData, options ) {\n\tconst cx = utils.getInt( options.x, null );\n\tconst cy = utils.getInt( options.y, null );\n\tconst rx = utils.getInt( options.radiusX, null );\n\tconst ry = utils.getInt( options.radiusY, null );\n\tlet fillColor = options.fillColor;\n\n\tif( cx === null || cy === null || rx === null || ry === null ) {\n\t\tconst error = new TypeError(\n\t\t\t\"ellipse: Parameters x, y, radiusX, radiusY must be integers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\tlet isFill = false;\n\tif( fillColor != null ) {\n\t\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\n\t\tif( fillColor === null ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"ellipse: Parameter fillColor must be a valid color format.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\t\tisFill = true;\n\t}\n\n\tif( screenData.isDirty ) {\n\t\tscreenData.api.render();\n\t}\n\n\tscreenData.context.beginPath();\n\tscreenData.context.strokeStyle = screenData.color.hex;\n\tscreenData.context.moveTo( cx + rx, cy );\n\tscreenData.context.ellipse( cx, cy, rx, ry, 0, Math.PI * 2, false );\n\tif( isFill ) {\n\t\tscreenData.context.fillStyle = fillColor.hex;\n\t\tscreenData.context.fill();\n\t}\n\tscreenData.context.stroke();\n}\n\n\n// filterImg command\nscreenManager.addCommand( \"filterImg\", filterImg, [ \"filter\", \"x1\", \"y1\", \"x2\", \"y2\" ] );\nfunction filterImg( screenData, options ) {\n\tconst filter = options.filter;\n\n\t// Get optional clipping bounds (default to full screen)\n\tlet x1 = utils.getInt( options.x1, 0 );\n\tlet y1 = utils.getInt( options.y1, 0 );\n\tlet x2 = utils.getInt( options.x2, screenData.width - 1 );\n\tlet y2 = utils.getInt( options.y2, screenData.height - 1 );\n\n\tif( !utils.isFunction( filter ) ) {\n\t\tconst error = new TypeError( \"filterImg: Argument filter must be a callback function.\" );\n\t\terror.code = \"INVALID_CALLBACK\";\n\t\tthrow error;\n\t}\n\n\t// Validate and clamp bounds to screen dimensions\n\tx1 = utils.clamp( x1, 0, screenData.width - 1 );\n\ty1 = utils.clamp( y1, 0, screenData.height - 1 );\n\tx2 = utils.clamp( x2, 0, screenData.width - 1 );\n\ty2 = utils.clamp( y2, 0, screenData.height - 1 );\n\n\t// Ensure x1 <= x2 and y1 <= y2\n\tif( x1 > x2 ) {\n\t\tconst temp = x1;\n\t\tx1 = x2;\n\t\tx2 = temp;\n\t}\n\tif( y1 > y2 ) {\n\t\tconst temp = y1;\n\t\ty1 = y2;\n\t\ty2 = temp;\n\t}\n\n\trenderer.getImageData( screenData );\n\tconst data = screenData.imageData2;\n\n\t// Apply filter to specified region\n\tfor( let y = y1; y <= y2; y++ ) {\n\t\tfor( let x = x1; x <= x2; x++ ) {\n\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\tconst color = filter( {\n\t\t\t\t\"r\": data[ i ],\n\t\t\t\t\"g\": data[ i + 1 ],\n\t\t\t\t\"b\": data[ i + 2 ],\n\t\t\t\t\"a\": data[ i + 3 ]\n\t\t\t}, x, y );\n\t\t\tif(\n\t\t\t\tcolor &&\n\t\t\t\tNumber.isInteger( color.r ) &&\n\t\t\t\tNumber.isInteger( color.g ) &&\n\t\t\t\tNumber.isInteger( color.b ) &&\n\t\t\t\tNumber.isInteger( color.a )\n\t\t\t) {\n\t\t\t\tdata[ i ] = utils.clamp( color.r, 0, 255 );\n\t\t\t\tdata[ i + 1 ] = utils.clamp( color.g, 0, 255 );\n\t\t\t\tdata[ i + 2 ] = utils.clamp( color.b, 0, 255 );\n\t\t\t\tdata[ i + 3 ] = utils.clamp( color.a, 0, 255 );\n\t\t\t}\n\t\t}\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\n// bezier command\nscreenManager.addPixelCommand(\n\t\"bezier\",\n\tbezier,\n\t[ \"xStart\", \"yStart\", \"x1\", \"y1\", \"x2\", \"y2\", \"xEnd\", \"yEnd\" ]\n);\nfunction bezier( screenData, options ) {\n\tconst xStart = Math.round( options.xStart );\n\tconst yStart = Math.round( options.yStart );\n\tconst x1 = Math.round( options.x1 );\n\tconst y1 = Math.round( options.y1 );\n\tconst x2 = Math.round( options.x2 );\n\tconst y2 = Math.round( options.y2 );\n\tconst xEnd = Math.round( options.xEnd );\n\tconst yEnd = Math.round( options.yEnd );\n\n\t// Make sure all coordinates are numbers\n\tif(\n\t\tisNaN( xStart ) || isNaN( yStart ) ||\n\t\tisNaN( x1 ) || isNaN( y1 ) ||\n\t\tisNaN( x2 ) || isNaN( y2 ) ||\n\t\tisNaN( xEnd ) || isNaN( yEnd )\n\t) {\n\t\tconst error = new TypeError(\n\t\t\t\"bezier: Arguments xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd must be numbers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\t// Initialize the color for the line\n\tconst color = screenData.color;\n\n\trenderer.getImageData( screenData );\n\tconst minDistance = screenData.penData.size;\n\tconst points = [\n\t\t{ \"x\": xStart, \"y\": yStart },\n\t\t{ \"x\": x1, \"y\": y1 },\n\t\t{ \"x\": x2, \"y\": y2 },\n\t\t{ \"x\": xEnd, \"y\": yEnd }\n\t];\n\n\tlet lastPoint = calcBezierStep( 0, points );\n\n\t// Set the first pixel\n\tscreenData.pen( screenData, lastPoint.x, lastPoint.y, color );\n\n\tlet t = 0.1;\n\tlet dt = 0.1;\n\twhile( t < 1 ) {\n\t\tconst point = calcBezierStep( t, points );\n\t\tconst distance = calcBezierDistance( point, lastPoint );\n\n\t\t// Adjust the step size if it's too big\n\t\tif( distance > minDistance && dt > 0.00001 ) {\n\t\t\tt -= dt;\n\t\t\tdt = dt * 0.75;\n\t\t} else {\n\t\t\tscreenData.pen( screenData, point.x, point.y, color );\n\t\t\tlastPoint = point;\n\t\t}\n\t\tt += dt;\n\t}\n\n\t// Draw the last step\n\tconst point = calcBezierStep( 1, points );\n\tscreenData.pen( screenData, point.x, point.y, color );\n\n\trenderer.setImageDirty( screenData );\n}\n\nscreenManager.addAACommand(\n\t\"bezier\",\n\taaBezier,\n\t[ \"xStart\", \"yStart\", \"x1\", \"y1\", \"x2\", \"y2\", \"xEnd\", \"yEnd\" ]\n);\nfunction aaBezier( screenData, options ) {\n\tconst xStart = options.xStart + 0.5;\n\tconst yStart = options.yStart + 0.5;\n\tconst x1 = options.x1 + 0.5;\n\tconst y1 = options.y1 + 0.5;\n\tconst x2 = options.x2 + 0.5;\n\tconst y2 = options.y2 + 0.5;\n\tconst xEnd = options.xEnd + 0.5;\n\tconst yEnd = options.yEnd + 0.5;\n\n\tif(\n\t\tisNaN( xStart ) || isNaN( yStart ) || isNaN( x1 ) || isNaN( y1 ) ||\n\t\tisNaN( x2 ) || isNaN( y2 ) || isNaN( xEnd ) || isNaN( yEnd )\n\t) {\n\t\tconst error = new TypeError(\n\t\t\t\"bezier: Parameters xStart, yStart, x1, y1, x2, y2, xEnd, and yEnd must be numbers.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETERS\";\n\t\tthrow error;\n\t}\n\n\tscreenData.api.render();\n\n\tscreenData.context.strokeStyle = screenData.color.hex;\n\tscreenData.context.beginPath();\n\tscreenData.context.moveTo( xStart, yStart );\n\tscreenData.context.bezierCurveTo( x1, y1, x2, y2, xEnd, yEnd );\n\tscreenData.context.stroke();\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Calculate distance between two points for bezier curve\nfunction calcBezierDistance( p1, p2 ) {\n\tconst dx = p1.x - p2.x;\n\tconst dy = p1.y - p2.y;\n\treturn dx * dx + dy * dy;\n}\n\n// Calculate a point on the bezier curve at parameter t\nfunction calcBezierStep( t, points ) {\n\tconst a = ( 1 - t );\n\tconst a2 = a * a;\n\tconst a3 = a * a * a;\n\tconst t2 = t * t;\n\tconst t3 = t * t * t;\n\n\treturn {\n\t\t\"x\": Math.round(\n\t\t\ta3 * points[ 0 ].x +\n\t\t\t3 * a2 * t * points[ 1 ].x +\n\t\t\t3 * a * t2 * points[ 2 ].x +\n\t\t\tt3 * points[ 3 ].x\n\t\t),\n\t\t\"y\": Math.round(\n\t\t\ta3 * points[ 0 ].y +\n\t\t\t3 * a2 * t * points[ 1 ].y +\n\t\t\t3 * a * t2 * points[ 2 ].y +\n\t\t\tt3 * points[ 3 ].y\n\t\t)\n\t};\n}\n\n", "/**\n * Pi.js - Draw Module\n * \n * BASIC-style draw command with string syntax for procedural drawing\n * \n * @module modules/draw\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as utils from \"../core/utils\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize draw module\nexport function init() {\n\tscreenManager.addScreenDataItem( \"angle\", 0 );\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// draw command\nscreenManager.addCommand( \"draw\", draw, [ \"drawString\" ] );\nfunction draw( screenData, options ) {\n\tlet drawString = options.drawString;\n\n\tif( typeof drawString !== \"string\" ) {\n\t\tconst error = new TypeError( \"draw: drawString must be a string.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\t// Convert to uppercase\n\tdrawString = drawString.toUpperCase();\n\n\t// Get colors\n\tconst tempColors = drawString.match( /(#[A-Z0-9]+)/g );\n\tif( tempColors ) {\n\t\tfor( let i = 0; i < tempColors.length; i++ ) {\n\t\t\tdrawString = drawString.replace( \"C\" + tempColors[ i ], \"O\" + i );\n\t\t}\n\t}\n\n\t// Remove spaces and invalid characters (keep only valid commands, numbers, #, and commas)\n\t// Note: Z is not included because Z is a replacement character and not allowed in original\n\t// string\n\tdrawString = drawString.replace( /[^CRBFGLATDHUENMPSO0-9#,]/g, \"\" );\n\t\n\t// Convert TA to T\n\tdrawString = drawString.replace( /(TA)/gi, \"T\" );\n\n\t// Convert ARC to Z\n\tdrawString = drawString.replace( /(ARC)/gi, \"Z\" );\n\t\n\t// Regular expression for the draw commands\n\tconst reg = /(?=C|O|R|B|F|G|L|A|T|D|G|H|U|E|N|M|P|S|Z)/;\n\n\t// Run the regular expression and split into separate commands\n\tconst parts = drawString.split( reg );\n\n\t// This triggers a move back after drawing the next command\n\tlet isReturn = false;\n\n\t// Store the last cursor - use current angle, not 0\n\tlet lastCursor = {\n\t\t\"x\": screenData.cursor.x, \"y\": screenData.cursor.y, \"angle\": screenData.angle\n\t};\n\n\t// Move without drawing\n\tlet isBlind = false;\n\n\tlet isArc = false;\n\tlet arcRadius, arcAngle1, arcAngle2;\n\tlet scale = 1;\n\n\tfor( let i = 0; i < parts.length; i++ ) {\n\t\tconst drawArgs = parts[ i ].split( /(\\d+)/ );\n\n\t\tswitch( drawArgs[ 0 ] ) {\n\n\t\t\t// C - Change Color - Using integer\n\t\t\tcase \"C\": {\n\t\t\t\tconst colorNum = Number( drawArgs[ 1 ] );\n\t\t\t\tscreenData.api.setColor( colorNum );\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// O - Change Color - Using string\n\t\t\tcase \"O\": {\n\t\t\t\tconst colorStr = tempColors[ drawArgs[ 1 ] ];\n\t\t\t\tscreenData.api.setColor( colorStr );\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// D - Down\n\t\t\tcase \"D\": {\n\t\t\t\tconst len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tconst angle = utils.degreesToRadian( 90 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// E - Up and Right\n\t\t\tcase \"E\": {\n\t\t\t\tlet len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\tconst angle = utils.degreesToRadian( 315 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// F - Down and Right\n\t\t\tcase \"F\": {\n\t\t\t\tlet len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\tconst angle = utils.degreesToRadian( 45 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// G - Down and Left\n\t\t\tcase \"G\": {\n\t\t\t\tlet len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\tconst angle = utils.degreesToRadian( 135 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// H - Up and Left\n\t\t\tcase \"H\": {\n\t\t\t\tlet len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tlen = Math.sqrt( len * len + len * len );\n\t\t\t\tconst angle = utils.degreesToRadian( 225 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// L - Left\n\t\t\tcase \"L\": {\n\t\t\t\tconst len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tconst angle = utils.degreesToRadian( 180 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// R - Right\n\t\t\tcase \"R\": {\n\t\t\t\tconst len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tconst angle = utils.degreesToRadian( 0 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// U - Up\n\t\t\tcase \"U\": {\n\t\t\t\tconst len = utils.getInt( drawArgs[ 1 ], 1 ) * scale;\n\t\t\t\tconst angle = utils.degreesToRadian( 270 ) + screenData.angle;\n\t\t\t\tscreenData.cursor.x += Math.round( Math.cos( angle ) * len );\n\t\t\t\tscreenData.cursor.y += Math.round( Math.sin( angle ) * len );\n\t\t\tbreak;\n\t\t}\n\n\t\t\t// P - Paint Exact Match\n\t\t\tcase \"P\": {\n\t\t\t\tconst colorNum = utils.getInt( drawArgs[ 1 ], 0 );\n\t\t\t\tconst boundryNumber = utils.getInt( drawArgs[ 3 ], null );\n\t\t\t\tscreenData.api.paint(\n\t\t\t\t\tscreenData.cursor.x, screenData.cursor.y, colorNum, 1, boundryNumber\n\t\t\t\t);\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// S - Scale\n\t\t\t/*\n\t\t\t\tSet scale factor. n may range from 1 to 255. n is divided by 4 to derive the scale \n\t\t\t\tfactor. The scale factor is multiplied by the distances given with U, D, L, R, E, \n\t\t\t\tF, G, H, or relative M commands to get the actual distance traveled. The default \n\t\t\t\tfor S is 4.\n\t\t\t*/\n\t\t\tcase \"S\": {\n\t\t\t\tconst scaleNum = utils.getInt( drawArgs[ 1 ], 4 );\n\t\t\t\tscale = scaleNum / 4;\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Z - Arc Line\n\t\t\tcase \"Z\":\n\t\t\t\tarcRadius = utils.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\tarcAngle1 = utils.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\tarcAngle2 = utils.getInt( drawArgs[ 5 ], 1 );\n\t\t\t\tisArc = true;\n\t\t\t\tbreak;\n\n\t\t\t// A - Angle\n\t\t\t/*\n\t\t\t\tSet angle n. n may range from 0 to 3, where 0 is 0\u00B0, 1 is 90\u00B0, 2 is 180\u00B0, and 3 is\n\t\t\t\t270\u00B0. Figures rotated 90\u00B0 or 270\u00B0 are scaled so that they will appear the same size\n\t\t\t\tas with 0\u00B0 or 180\u00B0 on a monitor screen with the standard aspect ratio of 4:3.\n\t\t\t*/\n\t\t\tcase \"A\":\n\t\t\t\tscreenData.angle = utils.degreesToRadian(\n\t\t\t\t\tutils.clamp( utils.getInt( drawArgs[ 1 ], 0 ), 0, 3 ) * 90\n\t\t\t\t);\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\n\t\t\t// TA - T - Turn Angle\n\t\t\tcase \"T\":\n\t\t\t\tscreenData.angle = utils.degreesToRadian(\n\t\t\t\t\tutils.clamp( utils.getInt( drawArgs[ 1 ], 0 ), -360, 360 )\n\t\t\t\t);\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\n\t\t\t// M - Move\n\t\t\tcase \"M\":\n\t\t\t\tscreenData.cursor.x = utils.getInt( drawArgs[ 1 ], 1 );\n\t\t\t\tscreenData.cursor.y = utils.getInt( drawArgs[ 3 ], 1 );\n\t\t\t\tisBlind = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tisBlind = true;\n\t\t}\n\n\t\tif( !isBlind ) {\n\t\t\tif( isArc ) {\n\t\t\t\tscreenData.api.arc(\n\t\t\t\t\tscreenData.cursor.x,\n\t\t\t\t\tscreenData.cursor.y,\n\t\t\t\t\tarcRadius,\n\t\t\t\t\tarcAngle1,\n\t\t\t\t\tarcAngle2\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tscreenData.api.line(\n\t\t\t\t\tlastCursor.x,\n\t\t\t\t\tlastCursor.y,\n\t\t\t\t\tscreenData.cursor.x,\n\t\t\t\t\tscreenData.cursor.y\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tisBlind = false;\n\t\tisArc = false;\n\n\t\tif( isReturn ) {\n\t\t\tisReturn = false;\n\t\t\tscreenData.cursor.x = lastCursor.x;\n\t\t\tscreenData.cursor.y = lastCursor.y;\n\t\t\tscreenData.angle = lastCursor.angle;\n\t\t}\n\n\t\tif( drawArgs[ 0 ] === \"N\" ) {\n\t\t\tisReturn = true;\n\t\t} else {\n\t\t\tlastCursor = {\n\t\t\t\t\"x\": screenData.cursor.x,\n\t\t\t\t\"y\": screenData.cursor.y,\n\t\t\t\t\"angle\": screenData.angle\n\t\t\t};\n\t\t}\n\n\t\tif( drawArgs[ 0 ] === \"B\" ) {\n\t\t\tisBlind = true;\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n", "/**\n * Pi.js - Paint Module\n * \n * Flood fill algorithm with tolerance support\n * \n * @module modules/paint\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as colors from \"../core/colors\";\nimport * as utils from \"../core/utils\";\nimport * as renderer from \"../core/renderer\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize paint module\nexport function init() {\n\t// No initialization needed\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// paint command\nscreenManager.addCommand( \"paint\", paint, [ \"x\", \"y\", \"fillColor\", \"tolerance\", \"boundaryColor\" ] );\nfunction paint( screenData, options ) {\n\tconst x = utils.getInt( options.x, null );\n\tconst y = utils.getInt( options.y, null );\n\tlet fillColor = options.fillColor;\n\tlet tolerance = utils.getFloat( options.tolerance, 1 );\n\tlet boundaryColor = options.boundaryColor;\n\n\tif( x === null || y === null ) {\n\t\tconst error = new TypeError( \"paint: Parameters x and y must be integers\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\tif( tolerance < 0 || tolerance > 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"paint: Parameter tolerance must be a number between 0 and 1.\"\n\t\t);\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\n\t// Get fill color\n\tfillColor = colors.getColorValueByRawInput( screenData, fillColor );\n\tif( fillColor === null ) {\n\t\tconst error = new RangeError( \"paint: Parameter fillColor is not a valid color format.\" );\n\t\terror.code = \"INVALID_PARAMETER\";\n\t\tthrow error;\n\t}\n\trenderer.getImageData( screenData );\n\tconst data = screenData.imageData2;\n\tconst width = screenData.width;\n\tconst height = screenData.height;\n\n\t// Check if starting point is in bounds\n\tif( x < 0 || x >= width || y < 0 || y >= height ) {\n\t\treturn;\n\t}\n\n\t// Get the starting pixel color\n\tconst startIndex = ( y * width + x ) * 4;\n\tconst startR = data[ startIndex ];\n\tconst startG = data[ startIndex + 1 ];\n\tconst startB = data[ startIndex + 2 ];\n\tconst startA = data[ startIndex + 3 ];\n\n\t// Don't fill if the color is the same\n\tif(\n\t\tstartR === fillColor.r && startG === fillColor.g &&\n\t\tstartB === fillColor.b && startA === fillColor.a\n\t) {\n\t\treturn;\n\t}\n\n\t// Calculate tolerance threshold for color comparison\n\t// Using perceptual weights: [0.2, 0.68, 0.07, 0.05] for R, G, B, A\n\tconst weights = [ 0.2, 0.68, 0.07, 0.05 ];\n\tconst maxDifference = ( 255 * 255 ) * weights.reduce( ( a, b ) => a + b );\n\tconst toleranceThreshold = tolerance * ( 2 - tolerance ) * maxDifference;\n\n\t// Use Uint8Array for efficient visited pixel tracking\n\tconst visited = new Uint8Array( width * height );\n\n\t// BFS queue for flood fill - using head pointer for O(1) dequeue\n\tconst queue = [];\n\tqueue.push( { \"x\": x, \"y\": y } );\n\n\t// Mark starting pixel as visited\n\tvisited[ y * width + x ] = 1;\n\n\t// Define color comparison function based on fill mode (no conditionals in hot loop)\n\tlet shouldSkipPixel;\n\tif( boundaryColor !== null ) {\n\n\t\t// Boundary fill mode: skip pixels that match boundary color\n\t\tboundaryColor = colors.getColorValueByRawInput( screenData, boundaryColor );\n\t\tif( boundaryColor === null ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"paint: Parameter boundaryColor is not a valid color format.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\t\tconst refColor = {\n\t\t\t\"r\": boundaryColor.r, \"g\": boundaryColor.g, \"b\": boundaryColor.b, \"a\": boundaryColor.a\n\t\t};\n\t\tshouldSkipPixel = ( pixelColor ) => {\n\t\t\tconst difference = utils.calcColorDifference( refColor, pixelColor, weights );\n\t\t\tconst similarity = maxDifference - difference;\n\t\t\treturn similarity >= toleranceThreshold;\n\t\t};\n\n\t} else {\n\n\t\t// Flood fill mode: skip pixels that don't match start color\n\t\tconst startColor = { \"r\": startR, \"g\": startG, \"b\": startB, \"a\": startA };\n\t\tshouldSkipPixel = ( pixelColor ) => {\n\t\t\tconst difference = utils.calcColorDifference( startColor, pixelColor, weights );\n\t\t\tconst similarity = maxDifference - difference;\n\t\t\treturn similarity < toleranceThreshold;\n\t\t};\n\t}\n\n\tlet head = 0;\n\twhile( head < queue.length ) {\n\n\t\t// Dequeue using head pointer (O(1) instead of O(n) with shift)\n\t\tconst pixel = queue[ head++ ];\n\t\tconst px = pixel.x;\n\t\tconst py = pixel.y;\n\t\tconst i = ( py * width + px ) * 4;\n\n\t\t// Get pixel color\n\t\tconst pixelColor = {\n\t\t\t\"r\": data[ i ], \"g\": data[ i + 1 ], \"b\": data[ i + 2 ], \"a\": data[ i + 3 ]\n\t\t};\n\n\t\t// Skip if color comparison fails\n\t\tif( shouldSkipPixel( pixelColor ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Fill this pixel using the current blend mode\n\t\tscreenData.blend( screenData, pixel.x, pixel.y, fillColor );\n\n\t\t// Add adjacent pixels to queue if not visited and in bounds\n\t\taddToQueue( queue, visited, px + 1, py, width, height );\n\t\taddToQueue( queue, visited, px - 1, py, width, height );\n\t\taddToQueue( queue, visited, px, py + 1, width, height );\n\t\taddToQueue( queue, visited, px, py - 1, width, height );\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Add pixel to queue if valid and not visited\nfunction addToQueue( queue, visited, x, y, width, height ) {\n\tif( x < 0 || x >= width || y < 0 || y >= height ) {\n\t\treturn;\n\t}\n\n\tconst index = y * width + x;\n\tif( visited[ index ] === 0 ) {\n\t\tvisited[ index ] = 1;\n\t\tqueue.push( { \"x\": x, \"y\": y } );\n\t}\n}\n", "/**\n * Pi.js - Images Module\n * \n * Image loading, sprites, and spritesheet management\n * \n * @module modules/images\n */\n\n\"use strict\";\n\nimport * as commands from \"../core/commands\";\nimport * as screenManager from \"../core/screen-manager\";\nimport * as utils from \"../core/utils\";\n\nconst m_images = {};\nlet m_imageCount = 0;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize images module\nexport function init() {\n\n\t// No initialization needed\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// loadImage command\ncommands.addCommand( \"loadImage\", loadImage, [ \"src\", \"name\", \"onLoad\", \"onError\" ] );\nfunction loadImage( options ) {\n\tconst src = options.src;\n\tlet name = options.name;\n\tconst onLoadCallback = options.onLoad;\n\tconst onErrorCallback = options.onError;\n\tconst srcErrMsg = \"loadImage: Parameter src must be a string URL, Image element, or Canvas \" +\n\t\t\"element.\";\n\n\t// Validate src parameter - can be string URL, Image element, or Canvas element\n\tif( typeof src === \"string\" ) {\n\t\tif( src === \"\" ) {\n\t\t\tconst error = new TypeError( srcErrMsg );\n\t\t\terror.code = \"INVALID_SRC\";\n\t\t\tthrow error;\n\t\t}\n\t} else if( src && typeof src === \"object\" ) {\n\t\tif( src.tagName !== \"IMG\" && src.tagName !== \"CANVAS\" ) {\n\t\t\tconst error = new TypeError( srcErrMsg );\n\t\t\terror.code = \"INVALID_SRC\";\n\t\t\tthrow error;\n\t\t}\n\t} else {\n\t\tconst error = new TypeError( srcErrMsg );\n\t\terror.code = \"INVALID_SRC\";\n\t\tthrow error;\n\t}\n\n\tif( name && typeof name !== \"string\" ) {\n\t\tconst error = new TypeError( \"loadImage: Parameter name must be a string.\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\t// Generate a name if none is provided\n\tif( !name || name === \"\" ) {\n\t\tm_imageCount += 1;\n\t\tname = \"\" + m_imageCount;\n\t}\n\n\tif( m_images[ name ] ) {\n\t\tconst error = new TypeError( \"loadImage: Parameter name must be unique.\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\t// Validate callbacks if provided\n\tif( onLoadCallback != null && !utils.isFunction( onLoadCallback ) ) {\n\t\tconst error = new TypeError( \"loadImage: Parameter onLoad must be a function.\" );\n\t\terror.code = \"INVALID_CALLBACK\";\n\t\tthrow error;\n\t}\n\n\tif( onErrorCallback != null && !utils.isFunction( onErrorCallback ) ) {\n\t\tconst error = new TypeError( \"loadImage: Parameter onError must be a function.\" );\n\t\terror.code = \"INVALID_CALLBACK\";\n\t\tthrow error;\n\t}\n\n\tlet img;\n\n\t// Handle Image or Canvas element passed directly\n\tif( typeof src !== \"string\" ) {\n\n\t\t// Use the element directly\n\t\timg = src;\n\n\t\t// Store immediately since element is already loaded\n\t\tm_images[ name ] = {\n\t\t\t\"status\": \"ready\",\n\t\t\t\"type\": \"image\",\n\t\t\t\"image\": img,\n\t\t\t\"width\": img.width,\n\t\t\t\"height\": img.height\n\t\t};\n\n\t\t// Call user callback if provided\n\t\tif( onLoadCallback ) {\n\t\t\tonLoadCallback( img );\n\t\t}\n\n\t\treturn name;\n\t}\n\n\t// Handle string URL - requires async loading\n\tm_images[ name ] = { \"status\": \"loading\" };\n\n\timg = new Image();\n\n\t// Set up handlers before setting src\n\t// Increment wait count for ready() - will be decremented in onload/onerror\n\tcommands.wait();\n\n\timg.onload = function() {\n\n\t\t// Store the loaded image\n\t\tm_images[ name ] = {\n\t\t\t\"status\": \"ready\",\n\t\t\t\"type\": \"image\",\n\t\t\t\"image\": img,\n\t\t\t\"width\": img.width,\n\t\t\t\"height\": img.height\n\t\t};\n\n\t\t// Call user callback if provided\n\t\tif( onLoadCallback ) {\n\t\t\tonLoadCallback( img );\n\t\t}\n\n\t\t// Decrement wait count\n\t\tcommands.done();\n\t};\n\n\timg.onerror = function( error ) {\n\n\t\t// Mark image as failed\n\t\tm_images[ name ] = {\n\t\t\t\"status\": \"error\",\n\t\t\t\"error\": error\n\t\t};\n\n\t\t// Call user error callback if provided\n\t\tif( onErrorCallback ) {\n\t\t\tonErrorCallback( error );\n\t\t}\n\n\t\t// Decrement wait count even on error\n\t\tcommands.done();\n\t};\n\n\t// Set source - may trigger onload synchronously if cached\n\timg.src = src;\n\n\treturn name;\n}\n\n// loadSpritesheet command\ncommands.addCommand(\n\t\"loadSpritesheet\", loadSpritesheet, [ \"src\", \"name\", \"width\", \"height\", \"margin\" ]\n);\nfunction loadSpritesheet( options ) {\n\tconst src = options.src;\n\tlet name = options.name;\n\tlet spriteWidth = options.width;\n\tlet spriteHeight = options.height;\n\tlet margin = options.margin;\n\tlet isAuto = false;\n\n\tif( margin == null ) {\n\t\tmargin = 0;\n\t}\n\n\tif( spriteWidth == null && spriteHeight == null ) {\n\t\tisAuto = true;\n\t\tspriteWidth = 0;\n\t\tspriteHeight = 0;\n\t\tmargin = 0;\n\t} else {\n\t\tspriteWidth = Math.round( spriteWidth );\n\t\tspriteHeight = Math.round( spriteHeight );\n\t\tmargin = Math.round( margin );\n\t}\n\n\t// Validate spriteWidth and spriteHeight for fixed mode\n\tif( !isAuto && ( !Number.isInteger( spriteWidth ) || !Number.isInteger( spriteHeight ) ) ) {\n\t\tconst error = new TypeError( \"loadSpriteSheet: width and height must be integers.\" );\n\t\terror.code = \"INVALID_DIMENSIONS\";\n\t\tthrow error;\n\t}\n\n\t// Size cannot be less than 1\n\tif( !isAuto && ( spriteWidth < 1 || spriteHeight < 1 ) ) {\n\t\tconst error = new RangeError(\n\t\t\t\"loadSpriteSheet: width and height must be greater than 0.\"\n\t\t);\n\t\terror.code = \"INVALID_DIMENSIONS\";\n\t\tthrow error;\n\t}\n\n\t// Validate margin\n\tif( !Number.isInteger( margin ) ) {\n\t\tconst error = new TypeError( \"loadSpriteSheet: margin must be an integer.\" );\n\t\terror.code = \"INVALID_MARGIN\";\n\t\tthrow error;\n\t}\n\n\t// Generate a name if none is provided\n\tif( !name || name === \"\" ) {\n\t\tm_imageCount += 1;\n\t\tname = \"\" + m_imageCount;\n\t}\n\n\t// Load the image first, then process frames in callback\n\tloadImage( {\n\t\t\"src\": src,\n\t\t\"name\": name,\n\t\t\"onLoad\": function() {\n\n\t\t\t// Update the image data to spritesheet type\n\t\t\tconst imageData = m_images[ name ];\n\t\t\timageData.type = \"spritesheet\";\n\t\t\timageData.spriteWidth = spriteWidth;\n\t\t\timageData.spriteHeight = spriteHeight;\n\t\t\timageData.margin = margin;\n\t\t\timageData.frames = [];\n\t\t\timageData.isAuto = isAuto;\n\n\t\t\tconst width = imageData.image.width;\n\t\t\tconst height = imageData.image.height;\n\n\t\t\tif( isAuto ) {\n\n\t\t\t\t// Auto-detect sprites using connected component analysis\n\t\t\t\tprocessSpriteSheetAuto( imageData, width, height );\n\t\t\t} else {\n\n\t\t\t\t// Fixed grid of sprites\n\t\t\t\tprocessSpriteSheetFixed( imageData, width, height );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn name;\n}\n\n\n// removeImage command\ncommands.addCommand( \"removeImage\", removeImage, [ \"name\" ] );\nfunction removeImage( options ) {\n\tconst name = options.name;\n\n\tif( typeof name !== \"string\" ) {\n\t\tconst error = new TypeError( \"removeImage: name must be a string.\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\tdelete m_images[ name ];\n}\n\n// getImage command - captures region of screen as an image\nscreenManager.addCommand( \"getImage\", getImage, [ \"name\", \"x1\", \"y1\", \"x2\", \"y2\" ] );\nfunction getImage( screenData, options ) {\n\tlet name = options.name;\n\tconst x1 = Math.round( options.x1 );\n\tconst y1 = Math.round( options.y1 );\n\tconst x2 = Math.round( options.x2 );\n\tconst y2 = Math.round( options.y2 );\n\n\tif( isNaN( x1 ) || isNaN( y1 ) || isNaN( x2 ) || isNaN( y2 ) ) {\n\t\tconst error = new TypeError( \"getImage: parameters x1, x2, y1, y2 must be integers.\" );\n\t\terror.code = \"INVALID_COORDINATES\";\n\t\tthrow error;\n\t}\n\n\t// Generate a name if none is provided\n\tif( !name || name === \"\" ) {\n\t\tm_imageCount += 1;\n\t\tname = \"\" + m_imageCount;\n\t} else if( typeof name !== \"string\" ) {\n\t\tconst error = new TypeError( \"getImage: name must be a string.\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t} else if( m_images[ name ] ) {\n\t\tconst error = new Error( `getImage: name \"${name}\" is already used; name must be unique.` );\n\t\terror.code = \"DUPLICATE_NAME\";\n\t\tthrow error;\n\t}\n\n\tconst canvas = document.createElement( \"canvas\" );\n\tconst context = canvas.getContext( \"2d\" );\n\tconst width = Math.abs( x1 - x2 );\n\tconst height = Math.abs( y1 - y2 );\n\tcanvas.width = width;\n\tcanvas.height = height;\n\tscreenData.api.render();\n\tcontext.drawImage( screenData.canvas, x1, y1, width, height, 0, 0, width, height );\n\n\tm_images[ name ] = {\n\t\t\"status\": \"ready\",\n\t\t\"image\": canvas,\n\t\t\"type\": \"image\",\n\t\t\"width\": width,\n\t\t\"height\": height\n\t};\n\n\treturn name;\n}\n\n// getSpritesheetData command\nscreenManager.addCommand( \"getSpritesheetData\", getSpritesheetData, [ \"name\" ] );\nfunction getSpritesheetData( screenData, options ) {\n\tconst name = options.name;\n\n\t// Validate name\n\tif( !m_images[ name ] ) {\n\t\tconst error = new Error( \"getSpritesheetData: invalid sprite name\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\tconst sprite = m_images[ name ];\n\n\tif( sprite.type !== \"spritesheet\" ) {\n\t\tconst error = new Error( \"getSpritesheetData: image is not a spritesheet\" );\n\t\terror.code = \"NOT_A_SPRITESHEET\";\n\t\tthrow error;\n\t}\n\n\tconst spriteData = {\n\t\t\"frameCount\": sprite.frames.length,\n\t\t\"frames\": []\n\t};\n\n\tfor( let i = 0; i < sprite.frames.length; i++ ) {\n\t\tspriteData.frames.push( {\n\t\t\t\"index\": i,\n\t\t\t\"x\": sprite.frames[ i ].x,\n\t\t\t\"y\": sprite.frames[ i ].y,\n\t\t\t\"width\": sprite.frames[ i ].width,\n\t\t\t\"height\": sprite.frames[ i ].height,\n\t\t\t\"left\": sprite.frames[ i ].x,\n\t\t\t\"top\": sprite.frames[ i ].y,\n\t\t\t\"right\": sprite.frames[ i ].right,\n\t\t\t\"bottom\": sprite.frames[ i ].bottom\n\t\t} );\n\t}\n\n\treturn spriteData;\n}\n\n// drawImage command\nscreenManager.addCommand(\n\t\"drawImage\",\n\tdrawImage,\n\t[ \"name\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\", \"alpha\", \"scaleX\", \"scaleY\" ]\n);\nfunction drawImage( screenData, options ) {\n\tconst name = options.name;\n\tconst x = options.x || 0;\n\tconst y = options.y || 0;\n\tconst angle = options.angle;\n\tconst anchorX = options.anchorX;\n\tconst anchorY = options.anchorY;\n\tconst alpha = options.alpha;\n\tconst scaleX = options.scaleX;\n\tconst scaleY = options.scaleY;\n\n\tlet image;\n\n\tif( typeof name === \"string\" ) {\n\n\t\t// Handle string image name\n\t\tif( !m_images[ name ] ) {\n\t\t\tconst error = new Error(\n\t\t\t\t`drawImage: Image \"${name}\" not found.`\n\t\t\t);\n\t\t\terror.code = \"IMAGE_NOT_FOUND\";\n\t\t\tthrow error;\n\t\t}\n\t\n\t\tconst imageData = m_images[ name ];\n\t\n\t\tif( imageData.status === \"loading\" ) {\n\t\t\tconst error = new Error(\n\t\t\t\t`drawImage: Image \"${name}\" is still loading. Use $.ready() to wait for it.`\n\t\t\t);\n\t\t\terror.code = \"IMAGE_NOT_READY\";\n\t\t\tthrow error;\n\t\t}\n\t\n\t\tif( imageData.status === \"error\" ) {\n\t\t\tconst error = new Error( `drawImage: Image \"${name}\" failed to load.` );\n\t\t\terror.code = \"IMAGE_LOAD_FAILED\";\n\t\t\tthrow error;\n\t\t}\n\n\t\timage = imageData.image;\n\t} else if( name && typeof name === \"object\" ) {\n\n\t\t// Handle screen API object\n\t\tif( name.screen === true ) {\n\t\t\timage = name.canvas();\n\t\t\tif( !image ) {\n\t\t\t\tconst error = new Error( \"drawImage: Screen has no canvas.\" );\n\t\t\t\terror.code = \"INVALID_SCREEN\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} else if( name.tagName === \"CANVAS\" || name.tagName === \"IMG\" ) {\n\n\t\t\t// Handle Canvas or Image element\n\t\t\timage = name;\n\t\t} else {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"drawImage: Parameter name must be a string, screen object, Canvas element, \" +\n\t\t\t\t\"or Image element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_NAME\";\n\t\t\tthrow error;\n\t\t}\n\t} else {\n\t\tconst error = new TypeError(\n\t\t\t\"drawImage: Parameter name must be a string, screen object, Canvas element, \" +\n\t\t\t\"or Image element.\"\n\t\t);\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\tif( isNaN( x ) || isNaN( y ) ) {\n\t\tconst error = new TypeError( \"drawImage: parameters x and y must be numbers\" );\n\t\terror.code = \"INVALID_COORDINATES\";\n\t\tthrow error;\n\t}\n\n\tdrawItem(\n\t\tscreenData, image, x, y, angle, anchorX, anchorY, alpha, null, scaleX, scaleY\n\t);\n}\n\n// drawSprite command\nscreenManager.addCommand(\n\t\"drawSprite\", drawSprite,\n\t[ \"name\", \"frame\", \"x\", \"y\", \"angle\", \"anchorX\", \"anchorY\", \"alpha\", \"scaleX\", \"scaleY\" ]\n);\nfunction drawSprite( screenData, options ) {\n\tconst name = options.name;\n\tconst frame = options.frame || 0;\n\tconst x = options.x || 0;\n\tconst y = options.y || 0;\n\tconst angle = options.angle;\n\tconst anchorX = options.anchorX;\n\tconst anchorY = options.anchorY;\n\tconst alpha = options.alpha;\n\tconst scaleX = options.scaleX;\n\tconst scaleY = options.scaleY;\n\n\t// Validate name\n\tif( !m_images[ name ] ) {\n\t\tconst error = new Error( \"drawSprite: invalid sprite name\" );\n\t\terror.code = \"INVALID_NAME\";\n\t\tthrow error;\n\t}\n\n\tconst spriteData = m_images[ name ];\n\n\t// Validate it's a spritesheet\n\tif( spriteData.type !== \"spritesheet\" ) {\n\t\tconst error = new Error( \"drawSprite: image is not a spritesheet\" );\n\t\terror.code = \"NOT_A_SPRITESHEET\";\n\t\tthrow error;\n\t}\n\n\t// Validate frame\n\tif( !Number.isInteger( frame ) || frame >= spriteData.frames.length || frame < 0 ) {\n\t\tconst error = new RangeError( \"drawSprite: frame number is not valid\" );\n\t\terror.code = \"INVALID_FRAME\";\n\t\tthrow error;\n\t}\n\n\tif( isNaN( x ) || isNaN( y ) ) {\n\t\tconst error = new TypeError( \"drawSprite: parameters x and y must be numbers\" );\n\t\terror.code = \"INVALID_COORDINATES\";\n\t\tthrow error;\n\t}\n\n\tconst img = spriteData.image;\n\tconst frameData = spriteData.frames[ frame ];\n\n\tdrawItem( screenData, img, x, y, angle, anchorX, anchorY, alpha, frameData, scaleX, scaleY );\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Shared function to draw images and sprites with transformations\nfunction drawItem(\n\tscreenData, img, x, y, angle, anchorX, anchorY, alpha, frameData, scaleX, scaleY\n) {\n\n\t// Default values for scale\n\tif( scaleX == null || isNaN( Number( scaleX ) ) ) {\n\t\tscaleX = 1;\n\t}\n\n\tif( scaleY == null || isNaN( Number( scaleY ) ) ) {\n\t\tscaleY = 1;\n\t}\n\n\t// Default value for angle\n\tif( angle == null ) {\n\t\tangle = 0;\n\t}\n\n\t// Convert angle from degrees to radians\n\tangle = utils.degreesToRadian( angle );\n\n\t// Default values for anchor\n\tif( !anchorX ) {\n\t\tanchorX = 0;\n\t}\n\tif( !anchorY ) {\n\t\tanchorY = 0;\n\t}\n\n\t// Default value for alpha\n\tif( !alpha && alpha !== 0 ) {\n\t\talpha = 255;\n\t}\n\n\t// Calculate anchor position in pixels\n\tif( frameData ) {\n\t\tanchorX = Math.round( frameData.width * anchorX );\n\t\tanchorY = Math.round( frameData.height * anchorY );\n\t} else {\n\t\tanchorX = Math.round( img.width * anchorX );\n\t\tanchorY = Math.round( img.height * anchorY );\n\t}\n\n\tconst context = screenData.context;\n\n\t// Save current alpha\n\tconst oldAlpha = context.globalAlpha;\n\tcontext.globalAlpha = ( alpha / 255 );\n\n\t// Render any pending changes\n\tscreenData.api.render();\n\n\t// Apply transformations\n\tcontext.translate( x, y );\n\tcontext.rotate( angle );\n\tcontext.scale( scaleX, scaleY );\n\n\t// Draw image or sprite frame\n\tif( frameData == null ) {\n\n\t\t// Draw full image\n\t\tcontext.drawImage( img, -anchorX, -anchorY );\n\t} else {\n\n\t\t// Draw sprite frame\n\t\tcontext.drawImage(\n\t\t\timg,\n\t\t\tframeData.x,\n\t\t\tframeData.y,\n\t\t\tframeData.width,\n\t\t\tframeData.height,\n\t\t\t-anchorX,\n\t\t\t-anchorY,\n\t\t\tframeData.width,\n\t\t\tframeData.height\n\t\t);\n\t}\n\n\t// Restore transformations\n\tcontext.scale( 1 / scaleX, 1 / scaleY );\n\tcontext.rotate( -angle );\n\tcontext.translate( -x, -y );\n\n\t// Restore alpha\n\tcontext.globalAlpha = oldAlpha;\n}\n\n// Process spritesheet with fixed grid dimensions\nfunction processSpriteSheetFixed( imageData, width, height ) {\n\tlet x1 = imageData.margin;\n\tlet y1 = imageData.margin;\n\tlet x2 = x1 + imageData.spriteWidth;\n\tlet y2 = y1 + imageData.spriteHeight;\n\n\t// Loop through all the frames in a grid pattern\n\twhile( y2 <= height - imageData.margin ) {\n\t\twhile( x2 <= width - imageData.margin ) {\n\t\t\timageData.frames.push( {\n\t\t\t\t\"x\": x1,\n\t\t\t\t\"y\": y1,\n\t\t\t\t\"width\": imageData.spriteWidth,\n\t\t\t\t\"height\": imageData.spriteHeight,\n\t\t\t\t\"right\": x1 + imageData.spriteWidth - 1,\n\t\t\t\t\"bottom\": y1 + imageData.spriteHeight - 1\n\t\t\t} );\n\t\t\tx1 += imageData.spriteWidth + imageData.margin;\n\t\t\tx2 = x1 + imageData.spriteWidth;\n\t\t}\n\t\tx1 = imageData.margin;\n\t\tx2 = x1 + imageData.spriteWidth;\n\t\ty1 += imageData.spriteHeight + imageData.margin;\n\t\ty2 = y1 + imageData.spriteHeight;\n\t}\n}\n\n// Process spritesheet with auto-detection (finds connected pixel clusters)\nfunction processSpriteSheetAuto( imageData, width, height ) {\n\n\t// Create canvas to read pixel data\n\tconst canvas = document.createElement( \"canvas\" );\n\tcanvas.width = width;\n\tcanvas.height = height;\n\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\tcontext.drawImage( imageData.image, 0, 0 );\n\n\tconst data = context.getImageData( 0, 0, width, height ).data;\n\tconst searched = new Uint8Array( width * height );\n\n\t// 8-directional neighbors\n\tconst dirs = [\n\t\t[ -1, -1 ], [ 0, -1 ], [ 1, -1 ],\n\t\t[ -1,  0 ],            [ 1,  0 ],\n\t\t[ -1,  1 ], [ 0,  1 ], [ 1,  1 ]\n\t];\n\n\t// Find clusters of non-transparent pixels\n\tfor( let i = 3; i < data.length; i += 4 ) {\n\t\tif( data[ i ] > 0 ) {\n\t\t\tconst index = ( i - 3 ) / 4;\n\t\t\tconst x1 = index % width;\n\t\t\tconst y1 = Math.floor( index / width );\n\t\t\tconst pixelIndex = y1 * width + x1;\n\n\t\t\t// Skip if already searched\n\t\t\tif( searched[ pixelIndex ] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Find bounding box of this cluster\n\t\t\tconst frameData = {\n\t\t\t\t\"x\": width,\n\t\t\t\t\"y\": height,\n\t\t\t\t\"width\": 0,\n\t\t\t\t\"height\": 0,\n\t\t\t\t\"right\": 0,\n\t\t\t\t\"bottom\": 0\n\t\t\t};\n\n\t\t\t// BFS to find all connected pixels\n\t\t\tconst queue = [];\n\t\t\tqueue.push( { \"x\": x1, \"y\": y1 } );\n\t\t\tsearched[ pixelIndex ] = 1;\n\n\t\t\tlet head = 0;\n\t\t\twhile( head < queue.length ) {\n\t\t\t\tconst pixel = queue[ head++ ];\n\t\t\t\tconst px = pixel.x;\n\t\t\t\tconst py = pixel.y;\n\n\t\t\t\t// Update bounding box\n\t\t\t\tframeData.x = Math.min( frameData.x, px );\n\t\t\t\tframeData.y = Math.min( frameData.y, py );\n\t\t\t\tframeData.right = Math.max( frameData.right, px );\n\t\t\t\tframeData.bottom = Math.max( frameData.bottom, py );\n\n\t\t\t\t// Check all 8 neighbors\n\t\t\t\tfor( const dir of dirs ) {\n\t\t\t\t\tconst nx = px + dir[ 0 ];\n\t\t\t\t\tconst ny = py + dir[ 1 ];\n\n\t\t\t\t\t// Skip if out of bounds\n\t\t\t\t\tif( nx < 0 || nx >= width || ny < 0 || ny >= height ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst nIndex = ny * width + nx;\n\n\t\t\t\t\t// Skip if already searched\n\t\t\t\t\tif( searched[ nIndex ] ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if pixel is non-transparent\n\t\t\t\t\tconst dataIndex = nIndex * 4;\n\t\t\t\t\tif( data[ dataIndex + 3 ] > 0 ) {\n\t\t\t\t\t\tsearched[ nIndex ] = 1;\n\t\t\t\t\t\tqueue.push( { \"x\": nx, \"y\": ny } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Calculate final dimensions\n\t\t\tframeData.width = frameData.right - frameData.x + 1;\n\t\t\tframeData.height = frameData.bottom - frameData.y + 1;\n\n\t\t\t// Only add frames larger than 4 pixels (filters out noise)\n\t\t\tif( ( frameData.width + frameData.height ) > 4 ) {\n\t\t\t\timageData.frames.push( frameData );\n\t\t\t}\n\t\t}\n\t}\n}\n", "/**\n * Pi.js - Font Module\n * \n * Font loading, management, and character data\n * \n * @module modules/font\n */\n\n\"use strict\";\n\nimport * as commands from \"../core/commands\";\nimport * as screenManager from \"../core/screen-manager\";\nimport * as utils from \"../core/utils\";\n\nconst m_fonts = [];\nconst m_fontBitmaps = {};\nlet m_defaultFont = null;\nlet m_nextFontId = 0;\nlet m_nextFontBitmapId = 0;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize font module\nexport function init() {\n\tscreenManager.addScreenDataItemGetter( \"font\", () => m_defaultFont );\n}\n\nexport function getFontBitmap( bitmapId ) {\n\treturn m_fontBitmaps[ bitmapId ];\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// loadFont command\ncommands.addCommand(\n\t\"loadFont\", loadFont, [ \"fontSrc\", \"width\", \"height\", \"charSet\", \"isEncoded\" ]\n);\nfunction loadFont( options ) {\n\tconst fontSrc = options.fontSrc;\n\tconst width = Math.round( options.width );\n\tconst height = Math.round( options.height );\n\tlet charSet = options.charSet;\n\tconst isEncoded = !!options.isEncoded;\n\n\tif( isNaN( width ) || isNaN( height ) ) {\n\t\tconst error = new TypeError( \"loadFont: width and height must be integers.\" );\n\t\terror.code = \"INVALID_DIMENSIONS\";\n\t\tthrow error;\n\t}\n\n\t// Default charset to 0 to 255\n\tif( !charSet ) {\n\t\tcharSet = [];\n\t\tfor( let i = 0; i < 256; i += 1 ) {\n\t\t\tcharSet.push( i );\n\t\t}\n\t}\n\n\tif( !( Array.isArray( charSet ) || typeof charSet === \"string\" ) ) {\n\t\tconst error = new TypeError( \"loadFont: charSet must be an array or a string.\" );\n\t\terror.code = \"INVALID_CHARSET\";\n\t\tthrow error;\n\t}\n\n\t// Convert charSet to array of integers (character codes)\n\tif( typeof charSet === \"string\" ) {\n\t\tconst temp = [];\n\t\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\t\ttemp.push( charSet.charCodeAt( i ) );\n\t\t}\n\t\tcharSet = temp;\n\t}\n\n\t// Build chars lookup map\n\tconst chars = {};\n\tfor( let i = 0; i < charSet.length; i += 1 ) {\n\t\tchars[ charSet[ i ] ] = i;\n\t}\n\n\t// Create font object\n\tconst font = {\n\t\t\"id\": m_nextFontId,\n\t\t\"width\": width,\n\t\t\"height\": height,\n\t\t\"data\": [],\n\t\t\"chars\": chars,\n\t\t\"charSet\": charSet,\n\t\t\"mode\": isEncoded ? \"pixel\" : \"bitmap\",\n\t\t\"bitmapId\": null\n\t};\n\n\t// Add to fonts array\n\tm_fonts[ font.id ] = font;\n\tm_nextFontId += 1;\n\n\tif( isEncoded ) {\n\n\t\t// Decompress base32-encoded font data\n\t\tfont.data = decompressFont( fontSrc, width, height );\n\t} else {\n\n\t\t// Load from image source\n\t\tloadFontFromImage( fontSrc, font );\n\t}\n\n\treturn font.id;\n}\n\n// setDefaultFont command\ncommands.addCommand( \"setDefaultFont\", setDefaultFont, [ \"fontId\" ] );\nfunction setDefaultFont( options ) {\n\tconst fontId = parseInt( options.fontId );\n\n\tif( isNaN( fontId ) || fontId < 0 || !m_fonts[ fontId ] ) {\n\t\tconst error = new RangeError( \"setDefaultFont: invalid fontId\" );\n\t\terror.code = \"INVALID_FONT_ID\";\n\t\tthrow error;\n\t}\n\n\tm_defaultFont = m_fonts[ fontId ];\n}\n\n// setFont command\nscreenManager.addCommand( \"setFont\", setFont, [ \"font\" ] );\nfunction setFont( screenData, options ) {\n\tconst fontInput = options.font;\n\n\tlet font;\n\n\t// Check if this is a valid font\n\tif( typeof fontInput === \"string\" ) {\n\t\tscreenData.context.font = fontInput;\n\t\tscreenData.context.textBaseline = \"top\";\n\t\tfont = {\n\t\t\t\"name\": screenData.context.font,\n\t\t\t\"width\": 10,\n\t\t\t\"height\": 10,\n\t\t\t\"mode\": \"canvas\"\n\t\t};\n\t} else if( m_fonts[ fontInput ] ) {\n\t\tfont = m_fonts[ fontInput ];\n\t} else {\n\t\tconst error = new RangeError( \"setFont: invalid fontId\" );\n\t\terror.code = \"INVALID_FONT_ID\";\n\t\tthrow error;\n\t}\n\n\t// Set the screenData font and print cursor\n\tscreenData.font = font;\n\tupdatePrintCursorDimensions( screenData );\n}\n\n// setFontSize command\nscreenManager.addCommand( \"setFontSize\", setFontSize, [ \"width\", \"height\" ] );\nfunction setFontSize( screenData, options ) {\n\tif( screenData.font.mode !== \"bitmap\" ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setFontSize: only bitmap fonts can change sizes. Load a bitmap font before setting \" +\n\t\t\t\"the font size.\"\n\t\t);\n\t\terror.code = \"INVALID_SIZE\";\n\t\tthrow error;\n\t}\n\n\tconst width = utils.getInt( options.width, null );\n\tconst height = utils.getInt( options.height, null );\n\n\tif( !width || width < 1 || !height || height < 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setFontSize: width and height must be an integer greater than 0\"\n\t\t);\n\t\terror.code = \"INVALID_SIZE\";\n\t\tthrow error;\n\t}\n\n\tscreenData.font.width = width;\n\tscreenData.font.height = height;\n\n\t// Update print cursor dimensions\n\tupdatePrintCursorDimensions( screenData );\n}\n\n// getAvailableFonts command\ncommands.addCommand( \"getAvailableFonts\", getAvailableFonts, [] );\nfunction getAvailableFonts() {\n\tconst fonts = [];\n\tfor( let i = 0; i < m_fonts.length; i++ ) {\n\t\tif( m_fonts[ i ] ) {\n\t\t\tfonts.push( {\n\t\t\t\t\"id\": m_fonts[ i ].id,\n\t\t\t\t\"width\": m_fonts[ i ].width,\n\t\t\t\t\"height\": m_fonts[ i ].height,\n\t\t\t\t\"mode\": m_fonts[ i ].mode\n\t\t\t} );\n\t\t}\n\t}\n\treturn fonts;\n}\n\n// setChar command - allows custom character bitmaps\nscreenManager.addCommand( \"setChar\", setChar, [ \"charCode\", \"data\" ] );\nfunction setChar( screenData, options ) {\n\tlet charCode = options.charCode;\n\tlet data = options.data;\n\n\t// Convert string to char code\n\tif( typeof charCode === \"string\" ) {\n\t\tcharCode = charCode.charCodeAt( 0 );\n\t} else {\n\t\tcharCode = utils.getInt( charCode, null );\n\t\tif( charCode === null ) {\n\t\t\tconst error = new TypeError( \"setChar: charCode must be an integer or a string\" );\n\t\t\terror.code = \"INVALID_CHAR_CODE\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tconst font = screenData.font;\n\n\tif( !Array.isArray( data ) ) {\n\t\tif( typeof data === \"string\" ) {\n\t\t\tdata = utils.hexToData( data, font.width, font.height );\n\t\t} else {\n\t\t\tconst error = new TypeError( \"setChar: data must be a 2D array or an encode string\" );\n\t\t\terror.code = \"INVALID_DATA\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Validate data dimensions match font\n\tif( data.length !== font.height ) {\n\t\tconst error = new RangeError(\n\t\t\t`setChar: data height (${data.length}) must match font height (${font.height})`\n\t\t);\n\t\terror.code = \"INVALID_DATA_HEIGHT\";\n\t\tthrow error;\n\t}\n\n\t// Validate data items\n\tfor( let i = 0; i < data.length; i++ ) {\n\t\tif( !Array.isArray( data[ i ] ) || data[ i ].length !== font.width ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t`setChar: data width at row ${i} must match font width (${font.width})`\n\t\t\t);\n\t\t\terror.code = \"INVALID_DATA_WIDTH\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Get character index in font\n\tconst charIndex = font.chars[ charCode ];\n\tif( charIndex === undefined ) {\n\t\tconst error = new RangeError( \"setChar: character not in font character set\" );\n\t\terror.code = \"CHAR_NOT_IN_FONT\";\n\t\tthrow error;\n\t}\n\n\t// Set the character data\n\tfont.data[ charIndex ] = data;\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Update print cursor rows and columns based on font and size\nfunction updatePrintCursorDimensions( screenData ) {\n\tconst font = screenData.font;\n\n\tif( font.mode === \"canvas\" ) {\n\n\t\t// Measure the actual size of the font by actually drawing the font on a temp canvas and\n\t\t// checking the color values\n\t\tconst tempSize = Math.round( screenData.context.measureText( \"M\" ).width * 2 );\n\t\tconst tempCanvas = document.createElement( \"canvas\" );\n\t\ttempCanvas.width = tempSize;\n\t\ttempCanvas.height = tempSize;\n\t\tconst tempContext = tempCanvas.getContext( \"2d\", { \"willReadFrequently\": true } );\n\t\ttempContext.font = screenData.context.font;\n\t\ttempContext.textBaseline = \"top\";\n\t\ttempContext.fillStyle = \"#FF0000\";\n\n\t\t// Fill some text with characters at a fixed spot\n\t\tconst tempMessage = \"WHMGLIyzjpgl_|,.\";\n\t\tfor( const c of tempMessage ) {\n\t\t\ttempContext.fillText( c, 0, 0 );\n\t\t}\n\n\t\t// Loop through the tempCanvas pixel data\n\t\tlet minX = Infinity;\n\t\tlet maxX = 0;\n\t\tlet minY = Infinity;\n\t\tlet maxY = 0;\n\t\tconst data = tempContext.getImageData( 0, 0, tempSize, tempSize ).data;\n\t\tfor( let y = 0; y < tempSize; y++ ) {\n\t\t\tfor( let x = 0; x < tempSize; x++ ) {\n\t\t\t\tconst index = (y * tempSize + x) * 4;\n\t\t\t\tif( data[ index ] === 255 ) {\n\t\t\t\t\tminX = Math.min( x, minX );\n\t\t\t\t\tmaxX = Math.max( x, maxX );\n\t\t\t\t\tminY = Math.min( y, minY );\n\t\t\t\t\tmaxY = Math.max( y, maxY );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tscreenData.font.width = maxX - minX;\n\t\tscreenData.font.height = maxY - minY;\n\t}\n\n\tscreenData.printCursor.cols = Math.floor( screenData.width / screenData.font.width );\n\tscreenData.printCursor.rows = Math.floor( screenData.height / screenData.font.height );\n}\n\n// Decompress base32-encoded font data\nfunction decompressFont( numStr, width, height ) {\n\tconst size = 32;\n\tconst base = 32;\n\tlet bin = \"\";\n\tconst data = [];\n\n\tnumStr = \"\" + numStr;\n\tconst nums = numStr.split( \",\" );\n\n\t// Loop through all the base-32 numbers\n\tfor( let i = 0; i < nums.length; i++ ) {\n\n\t\t// Convert base-32 string to binary string\n\t\tlet num = parseInt( nums[ i ], base ).toString( 2 );\n\n\t\t// Pad the front with 0's so that num has length of 32\n\t\twhile( num.length < size ) {\n\t\t\tnum = \"0\" + num;\n\t\t}\n\n\t\t// Add to the binary string\n\t\tbin += num;\n\t}\n\n\t// Loop through all the bits and build character data\n\tlet i = 0;\n\tif( bin.length % size > 0 ) {\n\t\tconsole.warn( \"loadFont: Invalid font data.\" );\n\t\treturn data;\n\t}\n\n\twhile( i < bin.length ) {\n\n\t\t// Push a new character onto data\n\t\tdata.push( [] );\n\n\t\t// Store the index of the font character\n\t\tconst index = data.length - 1;\n\n\t\t// Loop through all rows\n\t\tfor( let y = 0; y < height; y += 1 ) {\n\n\t\t\t// Push a new row onto the character data\n\t\t\tdata[ index ].push( [] );\n\n\t\t\t// Loop through columns in this row\n\t\t\tfor( let x = 0; x < width; x += 1 ) {\n\n\t\t\t\tlet num;\n\t\t\t\tif( i >= bin.length ) {\n\t\t\t\t\tnum = 0;\n\t\t\t\t} else {\n\t\t\t\t\tnum = parseInt( bin[ i ] );\n\t\t\t\t\tif( isNaN( num ) ) {\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Push the bit onto the character\n\t\t\t\tdata[ index ][ y ].push( num );\n\n\t\t\t\t// Increment the bit position\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// Load font from image source\nfunction loadFontFromImage( fontSrc, font ) {\n\tlet img;\n\n\tconst bitmap = {\n\t\t\"image\": null,\n\t\t\"width\": font.width,\n\t\t\"height\": font.height\n\t};\n\n\tif( typeof fontSrc === \"string\" ) {\n\n\t\t// Create a new image\n\t\timg = new Image();\n\n\t\t// Increment wait count\n\t\tcommands.wait();\n\n\t\timg.onload = function() {\n\t\t\tbitmap.image = img;\n\t\t\tcommands.done();\n\t\t};\n\n\t\timg.onerror = function( err ) {\n\t\t\tconsole.warn( \"loadFont: unable to load image for font.\" );\n\t\t\tcommands.done();\n\t\t};\n\n\t\t// Set source after handlers\n\t\timg.src = fontSrc;\n\t} else if( fontSrc instanceof HTMLImageElement ) {\n\n\t\t// Use image element directly\n\t\tbitmap.image = fontSrc;\n\t} else {\n\t\tconst error = new TypeError( \"loadFont: fontSrc must be a string or Image element.\" );\n\t\terror.code = \"INVALID_FONT_SRC\";\n\t\tthrow error;\n\t}\n\t\n\t// Set the bitmapId\n\tfont.bitmapId = m_nextFontBitmapId;\n\tm_nextFontBitmapId += 1;\n\n\t// Set the bitmap object\n\tm_fontBitmaps[ font.bitmapId ] = bitmap;\n\n}\n\n", "/**\n * Pi.js - Print Module\n * \n * Text printing, cursor positioning, and word wrapping\n * \n * @module modules/print\n */\n\n\"use strict\";\n\nimport * as screenManager from \"../core/screen-manager\";\nimport * as renderer from \"../core/renderer\";\nimport * as fontModule from \"./font\";\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\n// Initialize print module\nexport function init() {\n\tscreenManager.addScreenDataItem( \"printCursor\", {\n\t\t\"x\": 0,\n\t\t\"y\": 0,\n\t\t\"cols\": 0,\n\t\t\"rows\": 0,\n\t\t\"breakWord\": true\n\t} );\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n// TODO: add printf command that has format printing that allows for colors, spacing, variable \n// injection and maybe more formating stuff. Research other languages like c/c++ and others.\n\n\n// print command\nscreenManager.addCommand( \"print\", print, [ \"msg\", \"isInline\", \"isCentered\" ] );\nfunction print( screenData, options ) {\n\tlet msg = options.msg;\n\tconst isInline = !!options.isInline;\n\tconst isCentered = !!options.isCentered;\n\n\t// Bail if not possible to print an entire line on screen\n\tif( screenData.font.height > screenData.height ) {\n\t\treturn;\n\t}\n\n\tif( msg === undefined || msg === null ) {\n\t\tmsg = \"\";\n\t} else if( typeof msg !== \"string\" ) {\n\t\tmsg = \"\" + msg;\n\t}\n\n\t// Replace tabs with spaces\n\tmsg = msg.replace( /\\t/g, \"    \" );\n\n\t// Split messages by newlines\n\tconst parts = msg.split( /\\n/ );\n\tfor( let i = 0; i < parts.length; i++ ) {\n\t\tstartPrint( screenData, parts[ i ], isInline, isCentered );\n\t}\n}\n\n// setPos command - Set cursor position by row/column\nscreenManager.addCommand( \"setPos\", setPos, [ \"col\", \"row\" ] );\nfunction setPos( screenData, options ) {\n\tconst col = options.col;\n\tconst row = options.row;\n\n\t// Set the x value\n\tif( col != null ) {\n\t\tif( isNaN( col ) ) {\n\t\t\tconst error = new TypeError( \"setPos: parameter col must be a number\" );\n\t\t\terror.code = \"INVALID_COL\";\n\t\t\tthrow error;\n\t\t}\n\t\tlet x = Math.floor( col * screenData.font.width );\n\t\tif( x > screenData.width ) {\n\t\t\tx = screenData.width - screenData.font.width;\n\t\t}\n\t\tscreenData.printCursor.x = x;\n\t}\n\n\t// Set the y value\n\tif( row != null ) {\n\t\tif( isNaN( row ) ) {\n\t\t\tconst error = new TypeError( \"setPos: parameter row must be a number\" );\n\t\t\terror.code = \"INVALID_ROW\";\n\t\t\tthrow error;\n\t\t}\n\t\tlet y = Math.floor( row * screenData.font.height );\n\t\tif( y > screenData.height ) {\n\t\t\ty = screenData.height - screenData.font.height;\n\t\t}\n\t\tscreenData.printCursor.y = y;\n\t}\n}\n\n// setPosPx command - Set cursor position by pixels\nscreenManager.addCommand( \"setPosPx\", setPosPx, [ \"x\", \"y\" ] );\nfunction setPosPx( screenData, options ) {\n\tconst x = options.x;\n\tconst y = options.y;\n\n\tif( x != null ) {\n\t\tif( isNaN( x ) ) {\n\t\t\tconst error = new TypeError( \"setPosPx: parameter x must be a number\" );\n\t\t\terror.code = \"INVALID_X\";\n\t\t\tthrow error;\n\t\t}\n\t\tscreenData.printCursor.x = Math.round( x );\n\t}\n\n\tif( y != null ) {\n\t\tif( isNaN( y ) ) {\n\t\t\tconst error = new TypeError( \"setPosPx: parameter y must be a number\" );\n\t\t\terror.code = \"INVALID_Y\";\n\t\t\tthrow error;\n\t\t}\n\t\tscreenData.printCursor.y = Math.round( y );\n\t}\n}\n\n// getPos command - Get cursor position as row/column\nscreenManager.addCommand( \"getPos\", getPos, [] );\nfunction getPos( screenData ) {\n\treturn {\n\t\t\"col\": Math.floor(\n\t\t\tscreenData.printCursor.x / screenData.font.width\n\t\t),\n\t\t\"row\": Math.floor(\n\t\t\tscreenData.printCursor.y / screenData.font.height\n\t\t)\n\t};\n}\n\n// getPosPx command - Get cursor position in pixels\nscreenManager.addCommand( \"getPosPx\", getPosPx, [] );\nfunction getPosPx( screenData ) {\n\treturn {\n\t\t\"x\": screenData.printCursor.x,\n\t\t\"y\": screenData.printCursor.y\n\t};\n}\n\n// getCols command - Get number of columns\nscreenManager.addCommand( \"getCols\", getCols, [] );\nfunction getCols( screenData ) {\n\treturn screenData.printCursor.cols;\n}\n\n// getRows command - Get number of rows\nscreenManager.addCommand( \"getRows\", getRows, [] );\nfunction getRows( screenData ) {\n\treturn screenData.printCursor.rows;\n}\n\n// setWordBreak command - Enable/disable word breaking\nscreenManager.addCommand( \"setWordBreak\", setWordBreak, [ \"isEnabled\" ] );\nfunction setWordBreak( screenData, options ) {\n\tscreenData.printCursor.breakWord = !!options.isEnabled;\n}\n\n// piCalcWidth command - Calculate text width for pixel fonts\nscreenManager.addCommand( \"piCalcWidth\", piCalcWidth, [ \"msg\" ] );\nfunction piCalcWidth( screenData, options ) {\n\tconst msg = options.msg || \"\";\n\treturn screenData.font.width * msg.length;\n}\n\n// canvasCalcWidth command - Calculate text width for canvas fonts\nscreenManager.addCommand( \"canvasCalcWidth\", canvasCalcWidth, [ \"msg\" ] );\nfunction canvasCalcWidth( screenData, options ) {\n\tconst msg = options.msg || \"\";\n\treturn screenData.context.measureText( msg ).width;\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Start printing text\nfunction startPrint( screenData, msg, isInline, isCentered ) {\n\tconst printCursor = screenData.printCursor;\n\tconst font = screenData.font;\n\n\t// Calculate text width\n\tconst width = calcWidth( screenData, msg );\n\n\t// Handle centering\n\tif( isCentered ) {\n\t\tprintCursor.x = Math.floor( ( printCursor.cols - msg.length ) / 2 ) * font.width;\n\t}\n\n\t// Handle text wrapping if text is too wide\n\tif(\n\t\t!isInline &&\n\t\t!isCentered &&\n\t\twidth + printCursor.x > screenData.width &&\n\t\tmsg.length > 1\n\t) {\n\t\tconst overlap = ( width + printCursor.x ) - screenData.width;\n\t\tconst onScreen = width - overlap;\n\t\tconst onScreenPct = onScreen / width;\n\t\tlet msgSplit = Math.floor( msg.length * onScreenPct );\n\t\tlet msg1 = msg.substring( 0, msgSplit );\n\t\tlet msg2 = msg.substring( msgSplit, msg.length );\n\n\t\t// Word breaking\n\t\tif( printCursor.breakWord ) {\n\t\t\tconst index = msg1.lastIndexOf( \" \" );\n\t\t\tif( index > -1 ) {\n\t\t\t\tmsg2 = msg1.substring( index ).trim() + msg2;\n\t\t\t\tmsg1 = msg1.substring( 0, index );\n\t\t\t}\n\t\t}\n\n\t\tstartPrint( screenData, msg1, isInline, isCentered );\n\t\tstartPrint( screenData, msg2, isInline, isCentered );\n\t\treturn;\n\t}\n\n\t// Handle auto-scroll if text is too tall\n\tif( printCursor.y + font.height > screenData.height ) {\n\n\t\t// Render canvas fonts before scrolling\n\t\tif( font.mode === \"canvas\" ) {\n\t\t\tscreenData.api.render();\n\t\t}\n\n\t\t// Shift image up by font height\n\t\tshiftImageUp( screenData, font.height );\n\n\t\t// Move cursor up\n\t\tprintCursor.y -= font.height;\n\t}\n\n\t// Call the appropriate print function based on font mode\n\tif( font.mode === \"pixel\" ) {\n\t\tpiPrint( screenData, msg, printCursor.x, printCursor.y );\n\t} else if( font.mode === \"bitmap\" ) {\n\t\tbitmapPrint( screenData, msg, printCursor.x, printCursor.y );\n\t} else if( font.mode === \"canvas\" ) {\n\t\tcanvasPrint( screenData, msg, printCursor.x, printCursor.y );\n\t}\n\n\t// Advance cursor position\n\tif( !isInline ) {\n\t\tprintCursor.y += font.height;\n\t\tprintCursor.x = 0;\n\t} else {\n\t\tprintCursor.x += font.width * msg.length;\n\t\tif( printCursor.x > screenData.width - font.width ) {\n\t\t\tprintCursor.x = 0;\n\t\t\tprintCursor.y += font.height;\n\t\t}\n\t}\n}\n\n// Shift screen image up by yOffset pixels\nfunction shiftImageUp( screenData, yOffset ) {\n\tif( yOffset <= 0 ) {\n\t\treturn;\n\t}\n\n\t// Get the image data\n\trenderer.getImageData( screenData );\n\n\t// Loop through all pixels after the yOffset\n\tfor( let y = yOffset; y < screenData.height; y++ ) {\n\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\n\t\t\t// Get the index of the source and destination pixels\n\t\t\tconst iDest = ( ( screenData.width * y ) + x ) * 4;\n\t\t\tconst iSrc = ( ( screenData.width * ( y - yOffset ) ) + x ) * 4;\n\n\t\t\t// Move the pixel up\n\t\t\tconst data = screenData.imageData2;\n\t\t\tdata[ iSrc ] = data[ iDest ];\n\t\t\tdata[ iSrc + 1 ] = data[ iDest + 1 ];\n\t\t\tdata[ iSrc + 2 ] = data[ iDest + 2 ];\n\t\t\tdata[ iSrc + 3 ] = data[ iDest + 3 ];\n\t\t}\n\t}\n\n\t// Clear the bottom pixels\n\tfor( let y = screenData.height - yOffset; y < screenData.height; y++ ) {\n\t\tfor( let x = 0; x < screenData.width; x++ ) {\n\t\t\tconst i = ( ( screenData.width * y ) + x ) * 4;\n\t\t\tscreenData.imageData2[ i ] = 0;\n\t\t\tscreenData.imageData2[ i + 1 ] = 0;\n\t\t\tscreenData.imageData2[ i + 2 ] = 0;\n\t\t\tscreenData.imageData2[ i + 3 ] = 0;\n\t\t}\n\t}\n\n\trenderer.setImageDirty( screenData );\n}\n\n// Calculate text width based on font mode\nfunction calcWidth( screenData, msg ) {\n\tconst font = screenData.font;\n\tif( font.mode === \"canvas\" ) {\n\t\treturn screenData.context.measureText( msg ).width;\n\t}\n\treturn font.width * msg.length;\n}\n\n// Print using pixel font data (base32-encoded fonts)\nfunction piPrint( screenData, msg, x, y ) {\n\tconst font = screenData.font;\n\n\t// Setup a temporary palette with the fore color and transparent\n\tconst defaultPal = screenData.pal;\n\tscreenData.pal = [ screenData.pal[ 0 ], screenData.color ];\n\n\t// Loop through each character in the message\n\tfor( let i = 0; i < msg.length; i++ ) {\n\n\t\t// Get the character index for the character data\n\t\tconst charIndex = font.chars[ msg.charCodeAt( i ) ];\n\n\t\t// Draw the character on the screen using put\n\t\tif( charIndex !== undefined ) {\n\t\t\tscreenData.api.put( font.data[ charIndex ], x + font.width * i, y );\n\t\t}\n\t}\n\n\t// Reset the palette to the default\n\tscreenData.pal = defaultPal;\n}\n\n// Print using canvas text rendering\nfunction canvasPrint( screenData, msg, x, y ) {\n\tscreenData.api.render();\n\tscreenData.context.fillText( msg, x, y );\n\n\t// Invalidate cached image data since we drew directly to canvas\n\tscreenData.imageData = null;\n}\n\n// Print using bitmap font image\nfunction bitmapPrint( screenData, msg, x, y ) {\n\tscreenData.api.render();\n\n\tconst font = screenData.font;\n\tconst bitmap = fontModule.getFontBitmap( font.bitmapId );\n\tif( !bitmap ) {\n\t\tconst error = new TypeError( \"print: font bitmap not found\" );\n\t\terror.code = \"FONT_BITMAP_NOT_FOUND\";\n\t\tthrow error;\n\t}\n\n\tconst bitmapWidth = bitmap.image.width;\n\t\n\t// Get the source width & height of bitmap characters\n\tconst sw = bitmap.width;\n\tconst sh = bitmap.height;\n\tconst columns = Math.floor( bitmapWidth / sw );\n\n\t// Loop through each character in the message\n\tfor( let i = 0; i < msg.length; i++ ) {\n\n\t\t// Get the character index for the character data\n\t\tconst charIndex = font.chars[ msg.charCodeAt( i ) ];\n\n\t\tif( charIndex !== undefined ) {\n\n\t\t\t// Get the source x & y coordinates\n\t\t\tconst sx = ( charIndex % columns ) * sw;\n\t\t\tconst sy = Math.floor( charIndex / columns ) * sh;\n\n\t\t\t// Get the destination x coordinate\n\t\t\tconst dx = x + font.width * i;\n\n\t\t\t// Draw the character on the screen\n\t\t\tscreenData.context.drawImage(\n\t\t\t\tbitmap.image,\n\t\t\t\tsx, sy, sw, sh,\n\t\t\t\tdx, y, font.width, font.height\n\t\t\t);\n\t\t}\n\t}\n\n\t// Invalidate cached image data since we drew directly to canvas\n\tscreenData.imageData = null;\n}\n\n", "/**\n * Pi.js - Sound Module\n * \n * Sound effects, audio pools, and volume control using Web Audio API.\n * \n * @module modules/sound\n */\n\n\"use strict\";\n\nimport * as commands from \"../core/commands.js\";\nimport * as utils from \"../core/utils.js\";\n\nlet m_audioContext = null;\nlet m_audioPools = {};\nlet m_nextAudioId = 0;\nlet m_soundPool = {};\nlet m_nextSoundId = 0;\nlet m_volume = 0.75;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// Volume is stored globally, not per-screen\n\t// No additional initialization needed\n}\n\n/**\n * Stop a sound by ID (internal function for play module)\n * \n * @param {string} soundId - Sound ID to stop\n */\nexport function stopSoundById( soundId ) {\n\tif( m_soundPool[ soundId ] ) {\n\t\tm_soundPool[ soundId ].oscillator.stop( 0 );\n\t}\n}\n\n/**\n * Create a sound using Web Audio API (internal function exported for play module)\n * \n * @param {AudioContext} audioContext - Audio context\n * @param {number} frequency - Frequency in Hz\n * @param {number} volume - Volume (0-1)\n * @param {number} attackTime - Attack time in seconds\n * @param {number} sustainTime - Sustain time in seconds\n * @param {number} decayTime - Decay time in seconds\n * @param {number} stopTime - Total sound duration\n * @param {string} oType - Oscillator type\n * @param {Array} waveTables - Custom wave tables (if oType is \"custom\")\n * @param {number} delay - Delay before playing\n * @returns {string} Sound ID\n */\nexport function createSound(\n\taudioContext, frequency, volume, attackTime, sustainTime,\n\tdecayTime, stopTime, oType, waveTables, delay\n) {\n\tconst oscillator = audioContext.createOscillator();\n\tconst envelope = audioContext.createGain();\n\tconst master = audioContext.createGain();\n\n\tmaster.gain.value = m_volume;\n\toscillator.frequency.value = frequency;\n\n\t// Set oscillator type\n\tif( oType === \"custom\" ) {\n\t\tconst real = waveTables[ 0 ];\n\t\tconst imag = waveTables[ 1 ];\n\t\tconst wave = audioContext.createPeriodicWave( real, imag );\n\t\toscillator.setPeriodicWave( wave );\n\t} else {\n\t\toscillator.type = oType;\n\t}\n\n\t// Set initial envelope gain\n\tif( attackTime === 0 ) {\n\t\tenvelope.gain.value = volume;\n\t} else {\n\t\tenvelope.gain.value = 0;\n\t}\n\n\t// Connect audio nodes\n\toscillator.connect( envelope );\n\tenvelope.connect( master );\n\tmaster.connect( audioContext.destination );\n\n\tconst currentTime = audioContext.currentTime + delay;\n\n\t// Set attack envelope\n\tif( attackTime > 0 ) {\n\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\tnew Float32Array( [ 0, volume ] ),\n\t\t\tcurrentTime,\n\t\t\tattackTime\n\t\t);\n\t}\n\n\t// Set sustain envelope\n\tif( sustainTime > 0 ) {\n\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\tnew Float32Array( [ volume, 0.8 * volume ] ),\n\t\t\tcurrentTime + attackTime,\n\t\t\tsustainTime\n\t\t);\n\t}\n\n\t// Set decay envelope\n\tif( decayTime > 0 ) {\n\t\tenvelope.gain.setValueCurveAtTime(\n\t\t\tnew Float32Array( [ 0.8 * volume, 0.1 * volume, 0 ] ),\n\t\t\tcurrentTime + attackTime + sustainTime,\n\t\t\tdecayTime\n\t\t);\n\t}\n\n\t// Start and stop oscillator\n\toscillator.start( currentTime );\n\toscillator.stop( currentTime + stopTime );\n\n\t// Add to sound pool\n\tconst soundId = \"sound_\" + m_nextSoundId;\n\tm_nextSoundId += 1;\n\tm_soundPool[ soundId ] = {\n\t\t\"oscillator\": oscillator,\n\t\t\"master\": master,\n\t\t\"audioContext\": audioContext\n\t};\n\n\t// Auto-cleanup when done\n\tsetTimeout( () => {\n\t\tdelete m_soundPool[ soundId ];\n\t}, ( currentTime + stopTime ) * 1000 );\n\n\treturn soundId;\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n/**\n * Create an audio pool for playing multiple instances of the same sound file\n * \n * @param {Object} options - Command options\n * @param {string} options.src - Audio file URL\n * @param {number} options.poolSize - Number of audio instances (default: 1)\n * @returns {string} Audio pool ID for use with playAudioPool\n */\ncommands.addCommand( \"createAudioPool\", createAudioPool, [ \"src\", \"poolSize\" ] );\nfunction createAudioPool( options ) {\n\tconst src = options.src;\n\tlet poolSize = utils.getInt( options.poolSize, 1 );\n\n\t// Validate src\n\tif( !src || typeof src !== \"string\" ) {\n\t\tconst error = new TypeError( \"createAudioPool: Parameter src must be a non-empty string.\" );\n\t\terror.code = \"INVALID_SRC\";\n\t\tthrow error;\n\t}\n\n\t// Validate poolSize\n\tif( poolSize < 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"createAudioPool: Parameter poolSize must be an integer greater than 0.\"\n\t\t);\n\t\terror.code = \"INVALID_POOL_SIZE\";\n\t\tthrow error;\n\t}\n\n\t// Create the audio pool item\n\tconst audioItem = {\n\t\t\"pool\": [],\n\t\t\"index\": 0\n\t};\n\n\t// Create each audio instance in the pool\n\tfor( let i = 0; i < poolSize; i++ ) {\n\t\tconst audio = new Audio( src );\n\t\tloadAudio( audioItem, audio );\n\t}\n\n\t// Generate unique ID for this pool\n\tconst audioId = \"audioPool_\" + m_nextAudioId;\n\tm_audioPools[ audioId ] = audioItem;\n\tm_nextAudioId += 1;\n\n\treturn audioId;\n}\n\n/**\n * Delete an audio pool and free its resources\n * \n * @param {Object} options - Command options\n * @param {string} options.audioId - Audio pool ID returned from createAudioPool\n */\ncommands.addCommand( \"deleteAudioPool\", deleteAudioPool, [ \"audioId\" ] );\nfunction deleteAudioPool( options ) {\n\tconst audioId = options.audioId;\n\n\t// Validate audioId\n\tif( !m_audioPools[ audioId ] ) {\n\t\tconst error = new Error( `deleteAudioPool: Audio pool \"${audioId}\" not found.` );\n\t\terror.code = \"AUDIO_POOL_NOT_FOUND\";\n\t\tthrow error;\n\t}\n\n\t// Stop all audio and clear timeouts in the pool\n\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\tconst poolItem = m_audioPools[ audioId ].pool[ i ];\n\t\tpoolItem.audio.pause();\n\t\tclearTimeout( poolItem.timeout );\n\t}\n\n\t// Delete the pool\n\tdelete m_audioPools[ audioId ];\n}\n\n/**\n * Play audio from an audio pool\n * \n * @param {Object} options - Command options\n * @param {string} options.audioId - Audio pool ID\n * @param {number} options.volume - Volume (0-1, default: 1)\n * @param {number} options.startTime - Start time in seconds (default: 0)\n * @param {number} options.duration - Play duration in seconds (default: 0 = play full)\n */\ncommands.addCommand(\n\t\"playAudioPool\", playAudioPool, [ \"audioId\", \"volume\", \"startTime\", \"duration\" ]\n);\nfunction playAudioPool( options ) {\n\tconst audioId = options.audioId;\n\tconst volume = utils.getFloat( options.volume, 1 );\n\tconst startTime = utils.getFloat( options.startTime, 0 );\n\tconst duration = utils.getFloat( options.duration, 0 );\n\n\t// Validate audioId\n\tif( !m_audioPools[ audioId ] ) {\n\t\tconst error = new Error( `playAudioPool: Audio pool \"${audioId}\" not found.` );\n\t\terror.code = \"AUDIO_POOL_NOT_FOUND\";\n\t\tthrow error;\n\t}\n\n\t// Validate volume\n\tif( volume < 0 || volume > 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"playAudioPool: Parameter volume must be a number between 0 and 1.\"\n\t\t);\n\t\terror.code = \"INVALID_VOLUME\";\n\t\tthrow error;\n\t}\n\n\t// Validate startTime\n\tif( startTime < 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"playAudioPool: Parameter startTime must be a number greater than or equal to 0.\"\n\t\t);\n\t\terror.code = \"INVALID_START_TIME\";\n\t\tthrow error;\n\t}\n\n\t// Validate duration\n\tif( duration < 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"playAudioPool: Parameter duration must be a number greater than or equal to 0.\"\n\t\t);\n\t\terror.code = \"INVALID_DURATION\";\n\t\tthrow error;\n\t}\n\n\t// Get the audio pool\n\tconst audioItem = m_audioPools[ audioId ];\n\n\t// Make sure pool has sounds loaded\n\tif( audioItem.pool.length === 0 ) {\n\t\tconst error = new Error( \"playAudioPool: Audio pool has no sounds loaded.\" );\n\t\terror.code = \"EMPTY_POOL\";\n\t\tthrow error;\n\t}\n\n\t// Get the next audio player from the pool\n\tconst poolItem = audioItem.pool[ audioItem.index ];\n\tconst audio = poolItem.audio;\n\n\t// Set volume and start time\n\taudio.volume = m_volume * volume;\n\tpoolItem.volume = volume;\n\taudio.currentTime = startTime;\n\n\t// Set duration if specified\n\tif( duration > 0 ) {\n\t\tclearTimeout( poolItem.timeout );\n\t\tpoolItem.timeout = setTimeout( () => {\n\t\t\taudio.pause();\n\t\t\taudio.currentTime = 0;\n\t\t}, duration * 1000 );\n\t}\n\n\t// Play the sound\n\taudio.play();\n\n\t// Move to next sound in pool (round-robin)\n\taudioItem.index += 1;\n\tif( audioItem.index >= audioItem.pool.length ) {\n\t\taudioItem.index = 0;\n\t}\n}\n\n/**\n * Stop audio from an audio pool or all audio pools\n * \n * @param {Object} options - Command options\n * @param {string} options.audioId - Audio pool ID (null to stop all pools)\n */\ncommands.addCommand( \"stopAudioPool\", stopAudioPool, [ \"audioId\" ] );\nfunction stopAudioPool( options ) {\n\tconst audioId = options.audioId;\n\n\t// If no audioId, stop all audio pools\n\tif( audioId == null ) {\n\t\tfor( const poolId in m_audioPools ) {\n\t\t\tfor( let j = 0; j < m_audioPools[ poolId ].pool.length; j++ ) {\n\t\t\t\tconst poolItem = m_audioPools[ poolId ].pool[ j ];\n\t\t\t\tpoolItem.audio.pause();\n\t\t\t\tclearTimeout( poolItem.timeout );\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\t// Validate audioId\n\tif( !m_audioPools[ audioId ] ) {\n\t\tconst error = new Error( `stopAudioPool: Audio pool \"${audioId}\" not found.` );\n\t\terror.code = \"AUDIO_POOL_NOT_FOUND\";\n\t\tthrow error;\n\t}\n\n\t// Stop all audio and clear timeouts in the specified pool\n\tfor( let i = 0; i < m_audioPools[ audioId ].pool.length; i++ ) {\n\t\tconst poolItem = m_audioPools[ audioId ].pool[ i ];\n\t\tpoolItem.audio.pause();\n\t\tclearTimeout( poolItem.timeout );\n\t}\n}\n\n/**\n * Play a sound by frequency using Web Audio API\n * \n * @param {Object} options - Command options\n * @param {number} options.frequency - Frequency in Hz\n * @param {number} options.duration - Duration in seconds (default: 1)\n * @param {number} options.volume - Volume 0-1 (default: 1)\n * @param {string|Array} options.oType - Oscillator type or custom wave table (default: \"triangle\")\n * @param {number} options.delay - Delay before playing in seconds (default: 0)\n * @param {number} options.attack - Attack time in seconds (default: 0)\n * @param {number} options.decay - Decay time in seconds (default: 0.1)\n * @returns {string} Sound ID for use with stopSound\n */\ncommands.addCommand( \"sound\", sound, [\n\t\"frequency\", \"duration\", \"volume\", \"oType\", \"delay\", \"attack\", \"decay\"\n] );\nfunction sound( options ) {\n\tconst frequency = Math.round( utils.getFloat( options.frequency, 440 ) );\n\tconst duration = utils.getFloat( options.duration, 1 );\n\tconst volume = utils.getFloat( options.volume, 1 );\n\tlet oType = options.oType != null ? options.oType : \"triangle\";\n\tconst delay = utils.getFloat( options.delay, 0 );\n\tconst attack = utils.getFloat( options.attack, 0 );\n\tconst decay = utils.getFloat( options.decay, 0.1 );\n\n\t// Validate duration\n\tif( duration < 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"sound: Parameter duration must be a number greater than or equal to 0.\"\n\t\t);\n\t\terror.code = \"INVALID_DURATION\";\n\t\tthrow error;\n\t}\n\n\t// Validate volume\n\tif( volume < 0 || volume > 1 ) {\n\t\tconst error = new RangeError( \"sound: Parameter volume must be a number between 0 and 1.\" );\n\t\terror.code = \"INVALID_VOLUME\";\n\t\tthrow error;\n\t}\n\n\t// Validate attack\n\tif( attack < 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"sound: Parameter attack must be a number greater than or equal to 0.\"\n\t\t);\n\t\terror.code = \"INVALID_ATTACK\";\n\t\tthrow error;\n\t}\n\n\t// Validate delay\n\tif( delay < 0 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"sound: Parameter delay must be a number greater than or equal to 0.\"\n\t\t);\n\t\terror.code = \"INVALID_DELAY\";\n\t\tthrow error;\n\t}\n\n\tlet waveTables = null;\n\n\t// Check for custom waveform (array)\n\tif( Array.isArray( oType ) ) {\n\t\tif(\n\t\t\toType.length !== 2 ||\n\t\t\toType[ 0 ].length === 0 ||\n\t\t\toType[ 1 ].length === 0 ||\n\t\t\toType[ 0 ].length !== oType[ 1 ].length\n\t\t) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"sound: Parameter oType array must contain two non-empty arrays of equal length.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_WAVE_TABLE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\twaveTables = [];\n\n\t\t// Validate all values are numbers\n\t\tfor( let i = 0; i < oType.length; i++ ) {\n\t\t\tfor( let j = 0; j < oType[ i ].length; j++ ) {\n\t\t\t\tif( isNaN( oType[ i ][ j ] ) ) {\n\t\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\t\"sound: Parameter oType array must only contain numbers.\"\n\t\t\t\t\t);\n\t\t\t\t\terror.code = \"INVALID_WAVE_TABLE_VALUE\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t\twaveTables.push( new Float32Array( oType[ i ] ) );\n\t\t}\n\n\t\toType = \"custom\";\n\t} else if( typeof oType !== \"string\" ) {\n\t\tconst error = new TypeError( \"sound: Parameter oType must be a string or an array.\" );\n\t\terror.code = \"INVALID_OTYPE\";\n\t\tthrow error;\n\t} else {\n\n\t\t// Validate oType string\n\t\tconst validTypes = [ \"triangle\", \"sine\", \"square\", \"sawtooth\" ];\n\t\tif( validTypes.indexOf( oType ) === -1 ) {\n\t\t\tconst error = new Error(\n\t\t\t\t\"sound: Parameter oType must be one of: triangle, sine, square, sawtooth.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_OTYPE\";\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Create audio context if needed\n\tif( !m_audioContext ) {\n\t\tconst AudioContextClass = window.AudioContext || window.webkitAudioContext;\n\t\tm_audioContext = new AudioContextClass();\n\t}\n\n\t// Calculate stop time\n\tconst stopTime = attack + duration + decay;\n\n\treturn createSound(\n\t\tm_audioContext, frequency, volume, attack, duration,\n\t\tdecay, stopTime, oType, waveTables, delay\n\t);\n}\n\n/**\n * Stop a playing sound or all sounds\n * \n * @param {Object} options - Command options\n * @param {string} options.soundId - Sound ID (null to stop all sounds)\n */\ncommands.addCommand( \"stopSound\", stopSound, [ \"soundId\" ] );\nfunction stopSound( options ) {\n\tconst soundId = options.soundId;\n\n\t// If no soundId, stop all sounds\n\tif( soundId == null ) {\n\t\tfor( const id in m_soundPool ) {\n\t\t\tm_soundPool[ id ].oscillator.stop( 0 );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Validate soundId exists\n\tif( !m_soundPool[ soundId ] ) {\n\t\treturn;\n\t}\n\n\t// Stop the sound\n\tm_soundPool[ soundId ].oscillator.stop( 0 );\n}\n\n/**\n * Set global volume for all sounds\n * \n * @param {Object} options - Command options\n * @param {number} options.volume - Volume (0-1)\n */\ncommands.addCommand( \"setVolume\", setVolume, [ \"volume\" ] );\nfunction setVolume( options ) {\n\tconst volume = utils.getFloat( options.volume, 0.75 );\n\n\t// Validate volume\n\tif( volume < 0 || volume > 1 ) {\n\t\tconst error = new RangeError(\n\t\t\t\"setVolume: Parameter volume must be a number between 0 and 1.\"\n\t\t);\n\t\terror.code = \"INVALID_VOLUME\";\n\t\tthrow error;\n\t}\n\n\tm_volume = volume;\n\n\t// Update all active sounds\n\tfor( const soundId in m_soundPool ) {\n\t\tconst sound = m_soundPool[ soundId ];\n\t\tif( volume === 0 ) {\n\n\t\t\t// Use exponential ramp to near-zero, then set to zero\n\t\t\tsound.master.gain.exponentialRampToValueAtTime(\n\t\t\t\t0.01, sound.audioContext.currentTime + 0.1\n\t\t\t);\n\t\t\tsound.master.gain.setValueAtTime(\n\t\t\t\t0, sound.audioContext.currentTime + 0.11\n\t\t\t);\n\t\t} else {\n\t\t\tsound.master.gain.exponentialRampToValueAtTime(\n\t\t\t\tvolume, sound.audioContext.currentTime + 0.1\n\t\t\t);\n\t\t}\n\t}\n\n\t// Update all audio pools\n\tfor( const poolId in m_audioPools ) {\n\t\tfor( let j = 0; j < m_audioPools[ poolId ].pool.length; j++ ) {\n\t\t\tconst poolItem = m_audioPools[ poolId ].pool[ j ];\n\t\t\tpoolItem.audio.volume = m_volume * poolItem.volume;\n\t\t}\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n/**\n * Load an audio element and add to pool when ready\n * \n * @param {Object} audioItem - Audio pool item\n * @param {HTMLAudioElement} audio - Audio element\n * @param {number} retryCount - Number of retries remaining\n */\nfunction loadAudio( audioItem, audio, retryCount = 3 ) {\n\n\t// Audio ready callback\n\tfunction audioReady() {\n\t\taudioItem.pool.push( {\n\t\t\t\"audio\": audio,\n\t\t\t\"timeout\": 0,\n\t\t\t\"volume\": 1\n\t\t} );\n\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\tcommands.done();\n\t}\n\n\t// Audio error callback\n\tfunction audioError() {\n\t\tconst errors = [\n\t\t\t\"MEDIA_ERR_ABORTED - fetching process aborted by user\",\n\t\t\t\"MEDIA_ERR_NETWORK - error occurred when downloading\",\n\t\t\t\"MEDIA_ERR_DECODE - error occurred when decoding\",\n\t\t\t\"MEDIA_ERR_SRC_NOT_SUPPORTED - audio/video not supported\"\n\t\t];\n\n\t\tconst errorCode = audio.error.code;\n\t\tconst index = errorCode - 1;\n\n\t\tif( index >= 0 && index < errors.length ) {\n\t\t\tconsole.error( \"createAudioPool: \" + errors[ index ] );\n\n\t\t\t// Retry loading if retries remain\n\t\t\tif( retryCount > 0 ) {\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\taudio.removeEventListener( \"canplay\", audioReady );\n\t\t\t\t\taudio.removeEventListener( \"error\", audioError );\n\t\t\t\t\tconst newAudio = new Audio( audio.src );\n\t\t\t\t\tloadAudio( audioItem, newAudio, retryCount - 1 );\n\t\t\t\t}, 100 );\n\t\t\t} else {\n\t\t\t\tconsole.error( \"createAudioPool: Max retries exceeded for \" + audio.src );\n\t\t\t\tcommands.done();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error( \"createAudioPool: Unknown error - \" + errorCode );\n\t\t\tcommands.done();\n\t\t}\n\t}\n\n\t// Wait for audio to load (only on first attempt)\n\tif( retryCount === 3 ) {\n\t\tcommands.wait();\n\t}\n\n\t// Set up event listeners\n\taudio.addEventListener( \"canplay\", audioReady );\n\taudio.addEventListener( \"error\", audioError );\n}\n\n", "/**\n * Pi.js - Play Module\n * \n * BASIC-style music notation playback (inspired by QBasic PLAY command).\n * \n * @module modules/play\n */\n\n\"use strict\";\n\nimport * as commands from \"../core/commands.js\";\nimport * as utils from \"../core/utils.js\";\nimport { createSound, stopSoundById } from \"./sound.js\";\n\nconst m_tracks = {};\nconst m_allTracks = [];\nlet m_lastTrackId = 0;\nlet m_playData = [];\n\n// Note frequency data (in Hz) by note name and octave\nconst m_notesData = {\n\t\"A\": [ 27.50, 55.00, 110, 220, 440, 880, 1760, 3520, 7040, 14080 ],\n\t\"A#\": [ 29.14, 58.27, 116.541, 233.082, 466.164, 932.328, 1864.655, 3729.31, 7458.62, 14917.24 ],\n\t\"B\": [ 30.87, 61.74, 123.471, 246.942, 493.883, 987.767, 1975.533, 3951.066, 7902.132, 15804.264 ],\n\t\"C\": [ 16.35, 32.70, 65.41, 130.813, 261.626, 523.251, 1046.502, 2093.005, 4186.009, 8372.018 ],\n\t\"C#\": [ 17.32, 34.65, 69.296, 138.591, 277.183, 554.365, 1108.731, 2217.461, 4434.922, 8869.844 ],\n\t\"D\": [ 18.35, 36.71, 73.416, 146.832, 293.665, 587.33, 1174.659, 2349.318, 4698.636, 9397.272 ],\n\t\"D#\": [ 19.45, 38.89, 77.782, 155.563, 311.127, 622.254, 1244.508, 2489.016, 4978.032, 9956.064 ],\n\t\"E\": [ 20.60, 41.20, 82.407, 164.814, 329.628, 659.255, 1318.51, 2637.021, 5274.042, 10548.084 ],\n\t\"F\": [ 21.83, 43.65, 87.307, 174.614, 349.228, 698.456, 1396.913, 2793.826, 5587.652, 11175.304 ],\n\t\"F#\": [ 23.12, 46.25, 92.499, 184.997, 369.994, 739.989, 1479.978, 2959.955, 5919.91, 11839.82 ],\n\t\"G\": [ 24.50, 49.00, 97.999, 195.998, 391.995, 783.991, 1567.982, 3135.964, 6271.928, 12543.856 ],\n\t\"G#\": [ 25.96, 51.91, 103.826, 207.652, 415.305, 830.609, 1661.219, 3322.438, 6644.876, 13289.752 ]\n};\n\n// All notes by number (for N command)\nconst m_allNotes = [\n\t0, 16.35, 17.32, 18.35, 19.45, 20.60, 21.83, 23.12, 24.50, 25.96, 27.50, 29.14, 30.87, 32.70,\n\t34.65, 36.71, 38.89, 41.20, 43.65, 46.25, 49.00, 51.91, 55.00, 58.27, 61.74, 65.406, 69.296,\n\t73.416, 77.782, 82.407, 87.307, 92.499, 97.999, 103.826, 110, 116.541, 123.471, 130.813,\n\t138.591, 146.832, 155.563, 164.814, 174.614, 184.997, 195.998, 207.652, 220, 233.082, 246.942,\n\t261.626, 277.183, 293.665, 311.127, 329.628, 349.228, 369.994, 391.995, 415.305, 440, 466.164,\n\t493.883, 523.251, 554.365, 587.33, 622.254, 659.255, 698.456, 739.989, 783.991, 830.609, 880,\n\t932.328, 987.767, 1046.502, 1108.731, 1174.659, 1244.508, 1318.51, 1396.913, 1479.978, 1567.982,\n\t1661.219, 1760, 1864.655, 1975.533, 2093.005, 2217.461, 2349.318, 2489.016, 2637.021, 2793.826,\n\t2959.955, 3135.964, 3322.438, 3520, 3729.31, 3951.066, 4186.009, 4434.922, 4698.636, 4978.032,\n\t5274.042, 5587.652, 5919.91, 6271.928, 6644.876, 7040, 7458.62, 7902.132, 8372.018, 8869.844,\n\t9397.272, 9956.064, 10548.084, 11175.304, 11839.82, 13289.752, 14080, 14917.24, 15804.264\n];\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\n\t// No initialization needed\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n/**\n * Play music using BASIC-style notation\n * \n * Format: \"NOTE[length][.][#|+|-] ...\"\n * - Notes: A-G (can include sharps # or +, flats -)\n * - Length: 1-64 (1=whole, 4=quarter, etc.)\n * - Dot modifiers: . (1.5x), .. (1.75x)\n * - Multiple tracks: separated by commas\n * \n * Commands:\n * - O[n]: Set octave (0-9)\n * - L[n]: Set default note length\n * - T[n]: Set tempo (32-255 BPM)\n * - V[n]: Set volume (0-100)\n * - P[n]: Pause for note length\n * - N[n]: Play note by number (0-127)\n * - W[type]: Set waveform (SINE, SQUARE, SAWTOOTH, TRIANGLE)\n * - MS: Staccato (75% of note length)\n * - MN: Normal (87.5% of note length)\n * - ML: Legato (100% of note length)\n * - MW: Toggle full note mode\n * - MO[n]: Modify octave offset\n * - MA[n]: Modify attack rate (0-100)\n * - MT[n]: Modify sustain rate (0-100)\n * - MD[n]: Modify decay rate (0-100)\n * - <: Decrease octave\n * - >: Increase octave\n * \n * @param {Object} options - Command options\n * @param {string} options.playString - Music notation string\n */\ncommands.addCommand( \"play\", play, [ \"playString\" ] );\nfunction play( options ) {\n\tlet playString = options.playString;\n\n\t// Validate playString\n\tif( typeof playString !== \"string\" ) {\n\t\tconst error = new TypeError( \"play: Parameter playString must be a string.\" );\n\t\terror.code = \"INVALID_PLAY_STRING\";\n\t\tthrow error;\n\t}\n\n\t// Create track from play string\n\tconst trackId = createTrack( playString );\n\n\t// Generate all play data\n\tm_playData = [];\n\tplayTrack( trackId );\n\n\t// Sort by time\n\tm_playData.sort( ( a, b ) => a.time - b.time );\n\n\t// Create audio context\n\tconst AudioContextClass = window.AudioContext || window.webkitAudioContext;\n\tconst audioContext = new AudioContextClass();\n\n\t// Create all sounds\n\tfor( let i = 0; i < m_playData.length; i++ ) {\n\t\tconst playData = m_playData[ i ];\n\t\tplayData.track.sounds.push(\n\t\t\tcreateSound(\n\t\t\t\taudioContext, playData.frequency, playData.volume, playData.attackTime,\n\t\t\t\tplayData.sustainTime, playData.decayTime, playData.stopTime, playData.oType,\n\t\t\t\tplayData.waveTables, playData.time\n\t\t\t)\n\t\t);\n\t}\n}\n\n/**\n * Stop playing music\n * \n * @param {Object} options - Command options\n * @param {number} options.trackId - Track ID to stop (null to stop all tracks)\n */\ncommands.addCommand( \"stopPlay\", stopPlay, [ \"trackId\" ] );\nfunction stopPlay( options ) {\n\tconst trackId = options.trackId;\n\n\t// Stop all tracks\n\tif( trackId === null ) {\n\t\tfor( let i = 0; i < m_allTracks.length; i++ ) {\n\t\t\tconst track = m_tracks[ m_allTracks[ i ] ];\n\t\t\tif( track ) {\n\t\t\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\t\t\tstopSoundById( track.sounds[ j ] );\n\t\t\t\t}\n\t\t\t\tdelete m_tracks[ m_allTracks[ i ] ];\n\t\t\t}\n\t\t}\n\t\tm_allTracks.length = 0;\n\t\treturn;\n\t}\n\n\t// Stop specific track\n\tif( m_tracks[ trackId ] ) {\n\t\tconst track = m_tracks[ trackId ];\n\t\tfor( let j = 0; j < track.sounds.length; j++ ) {\n\t\t\tstopSoundById( track.sounds[ j ] );\n\t\t}\n\t\tremoveTrack( trackId );\n\t}\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n/**\n * Create a track from a play string\n * \n * @param {string} playString - Music notation string\n * @returns {number} First track ID\n */\nfunction createTrack( playString ) {\n\tlet firstTrackId;\n\n\t// Convert to uppercase and remove spaces\n\tplayString = playString.split( /\\s+/ ).join( \"\" ).toUpperCase();\n\n\t// Find and extract wavetables\n\tconst waveTables = [];\n\tlet start = 0;\n\twhile( start > -1 ) {\n\t\tstart = playString.indexOf( \"[[\" );\n\t\tif( start > -1 ) {\n\t\t\tconst end = playString.indexOf( \"]]\", start );\n\t\t\twaveTables.push( playString.substring( start, end + 2 ) );\n\t\t\tconst i = waveTables.length - 1;\n\t\t\tplayString = playString.replace( waveTables[ i ], \"W\" + i );\n\t\t}\n\t}\n\n\t// Convert wavetables to arrays\n\tfor( let i = 0; i < waveTables.length; i++ ) {\n\t\twaveTables[ i ] = JSON.parse( waveTables[ i ] );\n\n\t\t// Validate wavetable\n\t\tif(\n\t\t\twaveTables[ i ].length !== 2 ||\n\t\t\twaveTables[ i ][ 0 ].length !== waveTables[ i ][ 1 ].length\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t\"play: Wavetables must have 2 arrays of same length. Defaulting to triangle wave.\"\n\t\t\t);\n\t\t\twaveTables[ i ] = \"triangle\";\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Validate all values are numbers\n\t\tfor( let j = 0; j < 2; j++ ) {\n\t\t\tfor( let k = 0; k < waveTables[ i ][ j ].length; k++ ) {\n\t\t\t\twaveTables[ i ][ j ][ k ] = parseFloat( waveTables[ i ][ j ][ k ] );\n\t\t\t\tif( isNaN( waveTables[ i ][ j ][ k ] ) ) {\n\t\t\t\t\twaveTables[ i ][ j ][ k ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\twaveTables[ i ][ j ] = new Float32Array( waveTables[ i ][ j ] );\n\t\t}\n\t}\n\n\t// Split tracks by commas\n\tconst trackStrings = playString.split( \",\" );\n\tconst trackIds = [];\n\n\t// Regular expression for parsing play commands\n\tconst regString =\n\t\t\"(?=WS|WQ|WW|WT|W\\\\d[\\\\d]?|V\\\\d|Q\\\\d|O\\\\d|\\\\<|\\\\>|N\\\\d\\\\d?|\" +\n\t\t\"L\\\\d\\\\d?|MS|MN|ML|MU\\\\d|MU\\\\-\\\\d|MK\\\\d[\\\\d]?[\\\\d]?|\" +\n\t\t\"MZ\\\\d[\\\\d]?[\\\\d]?|MX\\\\d[\\\\d]?[\\\\d]?|MY\\\\d[\\\\d]?[\\\\d]?|\" +\n\t\t\"MW|P[\\\\d]?|T\\\\d|\" +\n\t\t\"[[A|B|C|D|E|F|G][\\\\d]?[\\\\+|\\\\-|\\\\#|\\\\.\\\\.?]?)\";\n\tconst reg = new RegExp( regString );\n\n\tlet lastNote;\n\n\tfor( let i = 0; i < trackStrings.length; i++ ) {\n\n\t\t// Replace complex keywords with short symbols\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /SINE/g, \"WS\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /SQUARE/g, \"WQ\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /SAWTOOTH/g, \"WW\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /TRIANGLE/g, \"WT\" );\n\n\t\t// Replace conflicting symbols\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MD/g, \"MZ\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MA/g, \"MY\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MT/g, \"MX\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MO/g, \"MU\" );\n\n\t\t// Remove deprecated symbols\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MB/g, \"\" );\n\t\ttrackStrings[ i ] = trackStrings[ i ].replace( /MF/g, \"\" );\n\n\t\t// Create track\n\t\tconst trackId = m_lastTrackId;\n\t\tif( firstTrackId === undefined ) {\n\t\t\tfirstTrackId = trackId;\n\t\t}\n\t\tm_lastTrackId += 1;\n\n\t\tm_tracks[ trackId ] = {\n\t\t\t\"id\": trackId,\n\t\t\t\"notes\": [],\n\t\t\t\"noteId\": 0,\n\t\t\t\"decayRate\": 0.20,\n\t\t\t\"attackRate\": 0.15,\n\t\t\t\"sustainRate\": 0.65,\n\t\t\t\"fullNote\": false,\n\t\t\t\"extra\": 1,\n\t\t\t\"space\": \"normal\",\n\t\t\t\"interval\": 0,\n\t\t\t\"time\": 0,\n\t\t\t\"simultaneousPlay\": i > 0,\n\t\t\t\"tempo\": 60 / 120,\n\t\t\t\"noteLength\": 0.25,\n\t\t\t\"pace\": 0.875,\n\t\t\t\"octave\": 4,\n\t\t\t\"octaveExtra\": 0,\n\t\t\t\"volume\": 1,\n\t\t\t\"trackIds\": trackIds,\n\t\t\t\"type\": \"triangle\",\n\t\t\t\"waveTables\": waveTables,\n\t\t\t\"sounds\": []\n\t\t};\n\t\tm_allTracks.push( trackId );\n\t\ttrackIds.push( trackId );\n\n\t\t// Mark previous note for simultaneous play\n\t\tif( i > 0 ) {\n\t\t\tlastNote.simultaneousPlay = trackId;\n\t\t}\n\n\t\t// Split track into command parts\n\t\tconst trackParts = trackStrings[ i ].split( reg );\n\n\t\tfor( let j = 0; j < trackParts.length; j++ ) {\n\t\t\tconst index = trackParts[ j ].indexOf( \"-\" );\n\n\t\t\t// Split minus symbol (only if not a music note)\n\t\t\tif( index > -1 && \"ABCDEFG\".indexOf( trackParts[ j ][ 0 ] ) === -1 ) {\n\t\t\t\tconst noteData = {\n\t\t\t\t\t\"name\": trackParts[ j ].substring( 0, index ),\n\t\t\t\t\t\"val\": trackParts[ j ].substring( index )\n\t\t\t\t};\n\t\t\t\tm_tracks[ trackId ].notes.push( noteData );\n\t\t\t\tlastNote = noteData;\n\t\t\t} else {\n\t\t\t\tconst noteParts = trackParts[ j ].split( /(\\d+)/ );\n\t\t\t\tconst noteData = {\n\t\t\t\t\t\"name\": noteParts[ 0 ]\n\t\t\t\t};\n\t\t\t\tif( noteParts.length > 1 ) {\n\t\t\t\t\tnoteData.val = noteParts[ 1 ];\n\t\t\t\t}\n\t\t\t\tm_tracks[ trackId ].notes.push( noteData );\n\t\t\t\tlastNote = noteData;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn firstTrackId;\n}\n\n/**\n * Play a track recursively\n * \n * @param {number} trackId - Track ID to play\n */\nfunction playTrack( trackId ) {\n\tconst track = m_tracks[ trackId ];\n\tif( track.noteId >= track.notes.length ) {\n\t\treturn;\n\t}\n\n\tconst cmd = track.notes[ track.noteId ];\n\tlet frequency = 0;\n\tlet val;\n\tlet wait = false;\n\ttrack.extra = 0;\n\n\tswitch( cmd.name.charAt( 0 ) ) {\n\t\tcase \"A\":\n\t\tcase \"B\":\n\t\tcase \"C\":\n\t\tcase \"D\":\n\t\tcase \"E\":\n\t\tcase \"F\":\n\t\tcase \"G\":\n\t\t\tfrequency = processNote( track, cmd );\n\t\t\twait = true;\n\t\t\tbreak;\n\t\tcase \"N\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\tval = utils.getInt( cmd.val, 0 );\n\t\t\t\tif( val >= 0 && val < m_allNotes.length ) {\n\t\t\t\t\tfrequency = m_allNotes[ val ];\n\t\t\t\t}\n\t\t\t\twait = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"O\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\tval = utils.getInt( cmd.val, 4 );\n\t\t\t\tif( val >= 0 && val < m_notesData[ \"A\" ].length ) {\n\t\t\t\t\ttrack.octave = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \">\":\n\t\t\ttrack.octave += 1;\n\t\t\tif( track.octave >= m_notesData[ \"A\" ].length ) {\n\t\t\t\ttrack.octave = m_notesData[ \"A\" ].length - 1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"<\":\n\t\t\ttrack.octave -= 1;\n\t\t\tif( track.octave < 0 ) {\n\t\t\t\ttrack.octave = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"L\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\tval = utils.getInt( cmd.val, 1 );\n\t\t\t\ttrack.noteLength = getNoteLength( val );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"T\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\tval = utils.getInt( cmd.val, 120 );\n\t\t\t\tif( val >= 32 && val < 256 ) {\n\t\t\t\t\ttrack.tempo = 60 / val;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"M\":\n\t\t\tprocessMusic( track, cmd );\n\t\t\tbreak;\n\t\tcase \"P\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\twait = true;\n\t\t\t\tval = utils.getInt( cmd.val, 1 );\n\t\t\t\ttrack.extra = getNoteLength( val );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"V\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\t\t\tval = utils.getInt( cmd.val, 50 );\n\t\t\t\tif( val < 0 ) {\n\t\t\t\t\tval = 0;\n\t\t\t\t} else if( val > 100 ) {\n\t\t\t\t\tval = 100;\n\t\t\t\t}\n\t\t\t\ttrack.volume = val / 100;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"W\":\n\t\t\tprocessWaveform( track, cmd );\n\t\t\tbreak;\n\t}\n\n\t// Calculate interval for next note\n\tif( track.extra > 0 ) {\n\t\ttrack.interval = track.tempo * track.extra * track.pace * 4;\n\t} else {\n\t\ttrack.interval = track.tempo * track.noteLength * track.pace * 4;\n\t}\n\n\t// Play simultaneous track\n\tif( m_tracks[ cmd.simultaneousPlay ] ) {\n\t\tm_tracks[ cmd.simultaneousPlay ].time = track.time;\n\t\tcopyTrackData( m_tracks[ cmd.simultaneousPlay ].id, trackId );\n\t\tplayTrack( m_tracks[ cmd.simultaneousPlay ].id );\n\t}\n\n\t// Play note if frequency > 0\n\tif( frequency > 0 ) {\n\t\tplayNote( track, frequency );\n\t}\n\n\t// Move to next instruction\n\ttrack.noteId += 1;\n\n\t// Continue playing track\n\tif( track.noteId < track.notes.length ) {\n\t\tif( wait ) {\n\t\t\ttrack.time += track.interval;\n\t\t}\n\t\tplayTrack( trackId );\n\t} else {\n\n\t\t// Schedule track removal after completion\n\t\tsetTimeout( () => {\n\t\t\tif( m_tracks[ trackId ] ) {\n\t\t\t\tremoveTrack( trackId );\n\t\t\t}\n\t\t}, ( track.time + track.interval ) * 1000 );\n\t}\n}\n\n/**\n * Process a note command (A-G)\n * \n * @param {Object} track - Track object\n * @param {Object} cmd - Command object\n * @returns {number} Frequency in Hz\n */\nfunction processNote( track, cmd ) {\n\tlet note = cmd.name;\n\n\t// Convert + to sharp\n\tnote = note.replace( /\\+/g, \"#\" );\n\n\t// Convert flats to equivalent sharps\n\tnote = note.replace( \"C-\", \"B\" );\n\tnote = note.replace( \"D-\", \"C#\" );\n\tnote = note.replace( \"E-\", \"D#\" );\n\tnote = note.replace( \"G-\", \"F#\" );\n\tnote = note.replace( \"A-\", \"G#\" );\n\tnote = note.replace( \"B-\", \"A#\" );\n\n\t// Convert enharmonic equivalents\n\tnote = note.replace( \"E#\", \"F\" );\n\tnote = note.replace( \"B#\", \"C\" );\n\n\t// Check for extra note length (dotted notes)\n\tif( cmd.name.indexOf( \"..\" ) > 0 ) {\n\t\ttrack.extra = 1.75 * track.noteLength;\n\t} else if( cmd.name.indexOf( \".\" ) > 0 ) {\n\t\ttrack.extra = 1.5 * track.noteLength;\n\t}\n\n\t// Remove dots from note\n\tnote = note.replace( /\\./g, \"\" );\n\n\t// Get note frequency\n\tlet frequency = 0;\n\tif( m_notesData[ note ] ) {\n\t\tconst octave = track.octave + track.octaveExtra;\n\t\tif( octave < m_notesData[ note ].length ) {\n\t\t\tfrequency = m_notesData[ note ][ octave ];\n\t\t}\n\t}\n\n\t// Check if note length included\n\tif( !isNaN( Number( cmd.val ) ) ) {\n\t\tconst val = utils.getInt( cmd.val, 1 );\n\t\ttrack.extra = getNoteLength( val );\n\t}\n\n\treturn frequency;\n}\n\n/**\n * Process music style commands (M...)\n * \n * @param {Object} track - Track object\n * @param {Object} cmd - Command object\n */\nfunction processMusic( track, cmd ) {\n\tswitch( cmd.name ) {\n\t\tcase \"MS\":\n\n\t\t\t// Staccato\n\t\t\ttrack.pace = 0.75;\n\t\t\tbreak;\n\t\tcase \"MN\":\n\n\t\t\t// Normal\n\t\t\ttrack.pace = 0.875;\n\t\t\tbreak;\n\t\tcase \"ML\":\n\n\t\t\t// Legato\n\t\t\ttrack.pace = 1;\n\t\t\tbreak;\n\t\tcase \"MU\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\n\t\t\t\t// Modify octave\n\t\t\t\tconst val = utils.getInt( cmd.val, 0 );\n\t\t\t\ttrack.octaveExtra = val;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"MY\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\n\t\t\t\t// Modify attack rate\n\t\t\t\tconst val = utils.getInt( cmd.val, 25 );\n\t\t\t\ttrack.attackRate = val / 100;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"MX\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\n\t\t\t\t// Modify sustain rate\n\t\t\t\tconst val = utils.getInt( cmd.val, 25 );\n\t\t\t\ttrack.sustainRate = val / 100;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"MZ\":\n\t\t\tif( !isNaN( Number( cmd.val ) ) ) {\n\n\t\t\t\t// Modify decay rate\n\t\t\t\tconst val = utils.getInt( cmd.val, 25 );\n\t\t\t\ttrack.decayRate = val / 100;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"MW\":\n\n\t\t\t// Toggle full note\n\t\t\ttrack.fullNote = !track.fullNote;\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Process waveform commands (W...)\n * \n * @param {Object} track - Track object\n * @param {Object} cmd - Command object\n */\nfunction processWaveform( track, cmd ) {\n\tif( cmd.name === \"WS\" ) {\n\t\ttrack.type = \"sine\";\n\t} else if( cmd.name === \"WQ\" ) {\n\t\ttrack.type = \"square\";\n\t} else if( cmd.name === \"WW\" ) {\n\t\ttrack.type = \"sawtooth\";\n\t} else if( cmd.name === \"WT\" ) {\n\t\ttrack.type = \"triangle\";\n\t} else if( !isNaN( Number( cmd.val ) ) ) {\n\n\t\t// Custom wavetable\n\t\tconst val = utils.getInt( cmd.val, -1 );\n\t\tif( track.waveTables[ val ] ) {\n\t\t\ttrack.type = val;\n\t\t}\n\t}\n}\n\n/**\n * Play a single note\n * \n * @param {Object} track - Track object\n * @param {number} frequency - Frequency in Hz\n */\nfunction playNote( track, frequency ) {\n\tconst volume = track.volume;\n\tconst attackTime = track.interval * track.attackRate;\n\tconst sustainTime = track.interval * track.sustainRate;\n\tconst decayTime = track.interval * track.decayRate;\n\n\tlet stopTime;\n\tif( track.fullNote && attackTime + sustainTime + decayTime > track.interval ) {\n\t\tstopTime = track.interval;\n\t} else {\n\t\tstopTime = attackTime + sustainTime + decayTime;\n\t}\n\n\tlet oType;\n\tlet waveTables = null;\n\tif( typeof track.type === \"string\" ) {\n\t\toType = track.type;\n\t} else {\n\t\twaveTables = track.waveTables[ track.type ];\n\t\tif( Array.isArray( waveTables ) ) {\n\t\t\toType = \"custom\";\n\t\t} else {\n\t\t\toType = waveTables;\n\t\t\twaveTables = null;\n\t\t}\n\t}\n\n\tconst soundData = {\n\t\t\"frequency\": frequency,\n\t\t\"volume\": volume,\n\t\t\"attackTime\": attackTime,\n\t\t\"sustainTime\": sustainTime,\n\t\t\"decayTime\": decayTime,\n\t\t\"stopTime\": stopTime,\n\t\t\"oType\": oType,\n\t\t\"waveTables\": waveTables,\n\t\t\"time\": track.time,\n\t\t\"track\": track\n\t};\n\n\tm_playData.push( soundData );\n}\n\n/**\n * Copy track data from source to destination\n * \n * @param {number} trackDestId - Destination track ID\n * @param {number} trackSourceId - Source track ID\n */\nfunction copyTrackData( trackDestId, trackSourceId ) {\n\tconst trackDest = m_tracks[ trackDestId ];\n\tconst trackSource = m_tracks[ trackSourceId ];\n\n\ttrackDest.decayRate = trackSource.decayRate;\n\ttrackDest.attackRate = trackSource.attackRate;\n\ttrackDest.sustainRate = trackSource.sustainRate;\n\ttrackDest.fullNote = trackSource.fullNote;\n\ttrackDest.extra = trackSource.extra;\n\ttrackDest.space = trackSource.space;\n\ttrackDest.interval = trackSource.interval;\n\ttrackDest.tempo = trackSource.tempo;\n\ttrackDest.noteLength = trackSource.noteLength;\n\ttrackDest.pace = trackSource.pace;\n\ttrackDest.octave = trackSource.octave;\n\ttrackDest.octaveExtra = trackSource.octaveExtra;\n\ttrackDest.volume = trackSource.volume;\n\ttrackDest.type = trackSource.type;\n}\n\n/**\n * Remove a track and all its sub-tracks\n * \n * @param {number} trackId - Track ID to remove\n */\nfunction removeTrack( trackId ) {\n\n\t// Delete all sub-tracks as well as main track\n\tconst trackIds = m_tracks[ trackId ].trackIds;\n\tfor( let i = trackIds.length; i >= 0; i-- ) {\n\t\tdelete m_tracks[ trackIds[ i ] ];\n\t}\n\n\t// Remove track from all tracks array\n\tfor( let i = m_allTracks.length - 1; i >= 0; i-- ) {\n\t\tif( !m_tracks[ m_allTracks[ i ] ] ) {\n\t\t\tm_allTracks.splice( i, 1 );\n\t\t}\n\t}\n}\n\n/**\n * Get note length from note value\n * \n * @param {number} val - Note value (1-64)\n * @returns {number} Note length\n */\nfunction getNoteLength( val ) {\n\tif( val >= 1 && val < 65 ) {\n\t\treturn 1 / val;\n\t}\n\treturn 0.875;\n}\n\n", "/**\n * Pi.js - Plugin System\n * \n * Plugin registration and management for extending Pi.js functionality.\n * \n * @module core/plugins\n */\n\n\"use strict\";\n\nimport * as commands from \"./commands.js\";\nimport * as screenManager from \"./screen-manager.js\";\nimport * as utils from \"./utils.js\";\n\nconst m_plugins = [];\nlet m_api = null;\nlet m_isInitialized = false;\n\n\n/***************************************************************************************************\n * Module Commands\n **************************************************************************************************/\n\n\nexport function init() {\n\tm_api = commands.getApi();\n\tm_isInitialized = true;\n\n\t// Process any plugins that were registered before init\n\tprocessEarlyRegistrations();\n}\n\n\n/***************************************************************************************************\n * External API Commands\n **************************************************************************************************/\n\n\n/**\n * Register a plugin with Pi.js\n * \n * @param {Object} options - Plugin configuration\n * @param {string} options.name - Unique name for the plugin\n * @param {Function} options.init - Initialization function that receives pluginApi\n * @param {string} [options.version] - Optional version string\n * @param {string} [options.description] - Optional description\n * @returns {void}\n * \n * @example\n * pi.registerPlugin( {\n *   \"name\": \"my-plugin\",\n *   \"version\": \"1.0.0\",\n *   \"description\": \"My custom plugin\",\n *   \"init\": ( pluginApi ) => {\n *     pluginApi.addCommand( \"myCommand\", myFn, [ \"param1\" ] );\n *   }\n * } );\n */\ncommands.addCommand( \"registerPlugin\", registerPlugin, [ \"name\", \"version\", \"description\", \"init\" ] );\nfunction registerPlugin( options ) {\n\n\t// Validate required parameters\n\tif( !options.name || typeof options.name !== \"string\" ) {\n\t\tconst error = new TypeError( \"registerPlugin: Plugin must have a 'name' property.\" );\n\t\terror.code = \"INVALID_PLUGIN_NAME\";\n\t\tthrow error;\n\t}\n\n\tif( !options.init || typeof options.init !== \"function\" ) {\n\t\tconst error = new TypeError(\n\t\t\t`registerPlugin: Plugin '${options.name}' must have an 'init' function.`\n\t\t);\n\t\terror.code = \"INVALID_PLUGIN_INIT\";\n\t\tthrow error;\n\t}\n\n\t// Check for duplicate\n\tif( m_plugins.find( p => p.name === options.name ) ) {\n\t\tconst error = new Error(\n\t\t\t`registerPlugin: Plugin '${options.name}' is already registered.`\n\t\t);\n\t\terror.code = \"DUPLICATE_PLUGIN\";\n\t\tthrow error;\n\t}\n\n\t// Store plugin info\n\tconst pluginInfo = {\n\t\t\"name\": options.name,\n\t\t\"version\": options.version || \"unknown\",\n\t\t\"description\": options.description || \"\",\n\t\t\"config\": options,\n\t\t\"initialized\": false\n\t};\n\n\tm_plugins.push( pluginInfo );\n\n\t// If system is initialized, process immediately\n\tif( m_isInitialized ) {\n\t\tinitializePlugin( pluginInfo );\n\t}\n}\n\n/**\n * Get list of registered plugins\n * \n * @returns {Array<Object>} Array of plugin info objects with name, version, description\n * \n * @example\n * const plugins = pi.getPlugins();\n * console.log( plugins ); // [{ name: \"my-plugin\", version: \"1.0.0\", ... }]\n */\ncommands.addCommand( \"getPlugins\", getPlugins, [] );\nfunction getPlugins() {\n\treturn m_plugins.map( p => ( {\n\t\t\"name\": p.name,\n\t\t\"version\": p.version,\n\t\t\"description\": p.description,\n\t\t\"initialized\": p.initialized\n\t} ) );\n}\n\n\n/***************************************************************************************************\n * Internal Commands\n **************************************************************************************************/\n\n\n// Initialize a plugin\nfunction initializePlugin( pluginInfo ) {\n\tif( pluginInfo.initialized ) {\n\t\treturn;\n\t}\n\n\t// Create plugin API\n\tconst pluginApi = {\n\t\t\"addCommand\": commands.addCommand,\n\t\t\"addScreenCommand\": screenManager.addCommand,\n\t\t\"addPixelCommand\": screenManager.addPixelCommand,\n\t\t\"addAACommand\": screenManager.addAACommand,\n\t\t\"addScreenDataItem\": screenManager.addScreenDataItem,\n\t\t\"addScreenDataItemGetter\": screenManager.addScreenDataItemGetter,\n\t\t\"addScreenInternalCommands\": screenManager.addScreenInternalCommands,\n\t\t\"addScreenInitFunction\": screenManager.addScreenInitFunction,\n\t\t\"addScreenCleanupFunction\": screenManager.addScreenCleanupFunction,\n\t\t\"getApi\": () => m_api,\n\t\t\"utils\": utils\n\t};\n\n\t// Initialize plugin\n\ttry {\n\t\tpluginInfo.config.init( pluginApi );\n\t\tpluginInfo.initialized = true;\n\t} catch( error ) {\n\t\tconst pluginError = new Error(\n\t\t\t`registerPlugin: Failed to initialize plugin '${pluginInfo.name}': ${error.message}`\n\t\t);\n\t\tpluginError.code = \"PLUGIN_INIT_FAILED\";\n\t\tpluginError.originalError = error;\n\t\tthrow pluginError;\n\t}\n\n\t// Reprocess API to include new commands\n\tcommands.processApi();\n}\n\n// Process plugins that were registered before system was initialized\nfunction processEarlyRegistrations() {\n\tfor( const pluginInfo of m_plugins ) {\n\t\tif( !pluginInfo.initialized ) {\n\t\t\tinitializePlugin( pluginInfo );\n\t\t}\n\t}\n}\n\n", "/**\n * Pi.js - Built-in Font Data\n * \n * Base32-encoded pixel fonts for retro-style text rendering.\n * \n * @module assets/font-data\n */\n\n\"use strict\";\n\nexport function loadBuiltInFonts( api ) {\n\n\t// Font 0: 6x6\n\tapi.loadFont(\n\t\t\"0,14004,2602800,oidnrt,3po8cff,3vnhgs4,1uv77og,3hpuv70,73g00,3vjgoef,3o00000,0,71ji,k9o000,1sg,1ogoc3p,jp4ir8,19fvt51,31ovfn3,cevfh,31vrooc,1tv52h8,2g0kula,2d2hcsp,8r2jg0,3vvvj,f33opv,8efh0g,3ho84fj,2200idv,2c40237,3r4g000,87000i,3vv901h,3jptvvv,3vnjpsc,0,g8420,22h800,57p9,3p80ea7,237000i,889019,111cc02,0,88420g,g4211,28oc,140011o,1000000,11000,1s00000,400,3333100,sjam9o,1g8423,203i888,1s060ho,hg0654,2fgg1sg,1o2e01p,3p4e07,211hgg0,oi64hg,1h4e13,31g0c,o00100,gg444,41000v,v0010,1088803,2110080,sqb41o,1h4if4,20729oi,1o07421,1o0s94,19701sg,1sgf03p,3p0g03,384p4c0,14if4i8,1o8423,201o84i,s04ihg,2h40842,43o12r,1ul8g25,2blej03,28ka4s0,s97i10,1h4ib3,10729oi,140321g,ho0v21,21014i,14i6025,a4k404,1al9ok0,12a22i4,24k421,7g8og,1s06210,21g1gc3,30g0c2,42300g,2g00000,1v,o40000,1o2f3,10210s9,s003i1,1o0211,251g00c,14s700g,23gg800,6kjo4s,ge4i94,8021,g04,1884218,3180421,21000a,1ul8g01,3294i00,64i8o0,c5310,200ca30,2102ok8,g003j0,3jo0023,221000i,14i6g00,24k400,8lbsk0,a2118,14i70,2e01s44,u02230,20g0630,31g082,622019,1000001,74a5u0,sg83go,3i80i93,30110oi,1oe22jg,joqh07,17hlg4,1o2f39g,33g4u6j,2841o66,gkc971,34g0oie,e411h4,3gsi030,211osh6,423hg0,1g84720,230g8e9,c94jp4,1goi97i,133p0u8,u06pmr,1sjf94j,34i8c93,94hg0c,14i604l,3inbvgk,2603ooc,1tdvstn,3phsif4,2prfurv,2qc67i1,3ooe4n,42rp8k,gs473h,jh8ua3,561igo,ggc231,30gg842,e110oi,14c2229,i8o887,94i9si,1km94jh,301s003,2703o00,40108,3g000f4,u,40g951,108d0kc,630gg0,g84000,2a8i000,92a800,1404g28,2mkll5,1lbfvdv,2rv210g,10g8421,u10g9s,84u118,2hbka50,7oka,1s217g,11bka5e,252h8ka,ka0fg8,n8kat0,21fg0ka,lu000j,30g9s00,7g84,8421o0,g84vg,1v,84210g,1og8000,vg0084,9v210g,1og8722,252hcka,kb421s,u842,352nc00,3u00fo0,7cka5i,42p81v,vg1b,2o01r51,vg03u0,ka5fo0,3u00f,320001v,ka52h8,3o0043h,21o007,843h00,ua52,252nska,9v217s,10g84u0,7,84vvvv,3vvu000,vvvtgo,1goc60o,1goc63f,3vvo000,2e53g,hp5upf,287i90g,10g003s,2h81uh4,44no00,1ska200,18s880,etgg84,1sc94hh,3hh4u94,267k631,15jfk3p,2i9s0fb,1f0004u,2iuo01p,221so70,64i94i,3u0vg7s,gs40,e01088,1o0020g,23g0452,421042,425110,3g0800,5500kk,oi6000,400,c,1gg,12go062,252g1o2,88f000,1ose00\",\n\t\t6, 6, null, true\n\t);\n\n\t// Font 1: 6x8 (default)\n\tapi.loadFont(\n\t\t\"0,ugs,3gvtm2u,1tvmss7,vtskvf,2v710g0,g8efjg,21008e2,vfl8gs,g8e77p,311o003,f7hg00,3vvpoc7,vvu045,h8igg0,3v1mrdm,3efu71h,1ep4i8o,oi94hg,33oof4j,34233hg,u97i95,cq08mn,2pspiqc,21gsfn3,400233,2v3go40,gsv213,3jggka5,a50180,1val6h8,2h80e9j,94hj4s,3p,3jo08ef,24fjghv,gsvah0,2100842,lfjgg0,82fgg,2000044,v41000,8421,3g00098,1voa800,8477r,3g000vf,2e21000,0,8e7,4200g0,18ka000,kaf,2afih80,gug70b,33000p9,442ac0,gk4aki,1380844,0,ggg841,100g41,211100,k4fh1,1000021,fh0g00,0,2110000,f00000,0,210000g,2222200,1p2jamb,jg08ca,4213s0,1p21332,no0sh0,260k9o0,8ca97o,11o1ug8,u0k9o0,oggf4a,jg1uh1,442100,1p2h74a,jg0sh8,2f0g9o0,84000,2100042,10gg,888820,20g000f,2007o00,10820gg,2200sh0,22200g0,1p2nalq,3g08a8,2hfka40,3oi9729,ng0c98,g828o0,3oi94i9,ng1u94,e42bs0,3si8721,700c98,g9i8s0,252hfka,k80s42,4211o0,s4214i,1301ia5,c52j60,3gg8421,no12ra,2l8ka40,25il9ka,k80sh8,2h8k9o0,3oi9721,700sh8,2h8l9o3,3oi9731,1680sh8,e0k9o0,3ta4210,23g12h8,2h8k9o0,252h8k9,11012h8,2lal980,24ka22h,14812h5,4211o0,3t22222,no1og8,g843g0,210820g,g41o42,4213g0,gkh8g0,0,1v,g82000,7,17k9u0,30g8539,lg0007,h849o0,c216kq,1jc0007,hfk1o0,oi8e21,700006,2h8jo5s,30ga6i9,m80806,4211o0,4030ga,k9pg84,2a62h40,1g84210,23g000d,lalak0,mcka,k80007,h8k9o0,u4i9,323g006,2i93g8e,r6i1,700007,2g70bo0,10gu421,hg0008,2h8kpk0,h8k9,1100008,2lal980,h511,1480008,2h8jo5s,v111,7o0642,o210c0,g84010,2101g42,321300,15c0000,45,h8kbs0,1p2g8jg,309o0i0,i94hs0,o0e8nq,3g0sh6,274hs0,240c13i,13o0o06,274hs0,g0c13i,13o0007,g83gcc,1p2e8nq,3g1207,hfk1o0,1g0e8nq,3g1406,4211o0,1p2c210,23g0o06,4211o0,248a8nq,k80840,e8nq40,c0v43h,7o000c,267khk0,skifki,14o08a0,e8k9o0,12074a,jg0g40,e8k9o0,gk08ka,jg0g40,h8k9o0,1208k9,3g9p245,h8igg0,240h8ka,jg0847,2g83og8,oi8e22,ng12af,24fh0g0,3ome4it,if4c52,e212go,o0c13i,13o0c06,4211o0,88074a,jg0022,h8k9o0,1lc0f4a,k80qj0,pakq40,1p4i7g3,3g00oi9,c07g00,g04442,jg0000,v84000,fg8,g00iq6,r5cecv,15kbdiq,3s84080,842100,aaa2g,2g000k5,555000,1348p26,1268ll5,1l5d9ba,3ctreup,3erm842,4210g8,g84270,210g84e,4e10g8,ka52n8,2h8k000,fh8ka,s270,210ga5e,21eh8ka,ka52h8,2h8k00f,21eh8ka,kat0no,a52,25fg000,g8s270,0,e10g8,g8421s,842,4fo000,7s,210g842,43p0g8,7s,842,4fp0g8,g87i1s,210ga52,252p8ka,ka5i1s,3,342p8ka,katg7s,f,30ep8ka,ka5i1c,2h8k00f,30fo000,katg7c,2h8k84f,30fo000,ka52ns,f,30fp0g8,7s,2h8ka52,253o000,g87i1s,3,343p0g8,1s,2h8ka52,25fp8ka,g8vi7s,210g842,4e0000,1s,210hvvv,3vvvvvv,7v,3vvvose,se73ho,e73hos,1osfvvv,3vg0000,cqki,2i400e8,2u8ni10,1uh842,4000fq,252h8k0,3t28322,no0007,2ka5100,i94jl,2200cp,2210g80,3s8e8k9,313sc98,1voa8o0,oigoa9,mc0e83,f8c5s0,impdd,g00117,2iqbp10,oggf41,1g0sh8,2h8ka40,v07o1,3o0084f,24203s0,g41110,7o0888,8203s0,c94i10,210g842,4252go,oc0fo0,31g00cp,206co00,oi9300,0,630000,1g,721,216h8c,3h4i94g,oi2,8f0000,e73h,3000000\",\n\t\t6, 8, null, true\n\t);\n\n\t// Font 2: 8x8\n\tapi.loadFont(\n\t\t\"0,0,1v839c1,2upj0bu,1vfvmvv,31ufvru,1mftvnu,1u3g400,83gv7u,1u3g400,s7oe7u,3v7oe3s,810e3s,3v7oe3s,61s,u1g000,3vvvpu3,31ufvvv,3opi2,116cf00,3vs76dt,2upjgvv,7ge3rt,36cpj3o,u6cpj6,u1gvgo,vj6fpg,o71s70,1vm6vr3,1hmfpm0,2clkf77,3jjomkp,20e1u7u,3se1000,10sfnu,v0s0g0,c3ovgo,c7sf0o,1j6cpj6,1j00pg0,1vtnmrr,dhm6o0,v66e3c,1m3hj3o,0,1v7svg0,c3ovgo,1v3o67v,c3ovgo,c1g600,c1g60o,1v3o600,1g37u,61g000,30o7u,1g30000,1g60,30fs000,28pnv,1j28000,1gf3u,3vvu000,fvvru,u1g000,0,0,o7gu1g,o00c00,1m6or00,0,1m6pvjc,3v6or00,o7pg3o,6fgc00,cdj0o,o6dhg0,s6oe3m,3ecotg0,1g61g00,0,c30o30,1g30600,1g3060o,c30o00,6cf7v,u6c000,30c7s,o30000,0,30c30,7s,0,0,30c00,30o61g,1gc1000,1ucdjmu,3recv00,o70c1g,o31v00,1sco31o,1gcpv00,1sco31o,6cou00,e3or6c,3v0o7g0,3uc1u0c,6cou00,s61g7o,36cou00,3uco30o,o30c00,1scpj3o,36cou00,1scpj3s,61gs00,30c00,30c00,30c00,30c30,c30o60,1g30600,1v00,fo000,1g3060c,c30o00,1sco30o,o00c00,1ucdnmu,3fc0u00,o7hj6c,3ucpj00,3u6cpjs,1j6dv00,u6dg60,306cf00,3s6opj6,1j6pu00,3v64q3o,1k65vg0,3v64q3o,1k61s00,u6dg60,376cfg0,36cpj7s,36cpj00,1s30c1g,o30u00,f0o30c,36cou00,3j6cr3o,1m6dpg0,3o60o30,1h6dvg0,33etvnu,3bcdhg0,33edtmu,37cdhg0,s6phm6,336oe00,3u6cpjs,1g61s00,1scpj6c,3e7g700,3u6cpjs,1m6dpg0,1scpo3g,ecou00,3ub8c1g,o30u00,36cpj6c,36cpv00,36cpj6c,367gc00,33cdhmm,3vethg0,33ccr1o,s6phg0,36cpj3o,o30u00,3vcd30o,p6dvg0,1s60o30,1g60u00,3060c0o,60c0g0,1s1g60o,c1gu00,83gr66,0,0,7v,o30600,0,u0c,1ucotg0,3g60o3s,1j6dn00,u6c,30cou00,e0o33s,36cotg0,u6c,3uc0u00,s6oo7g,1g61s00,tmc,367o37o,3g60r3m,1j6dpg0,o00s1g,o30u00,60030c,6cpj3o,3g60pjc,1s6ppg0,1o30c1g,o30u00,1j7u,3vddhg0,1u6c,36cpj00,u6c,36cou00,1n36,1j7oo7g,tmc,367o30u,1n3m,1j61s00,v60,1s0pu00,830v1g,o38600,1j6c,36cotg0,1j6c,367gc00,1hmm,3vfsr00,1hjc,s6phg0,1j6c,367o37o,1v4o,o69v00,e30c70,o30700,c1g600,c1g600,3g30c0s,o31o00,1rdo000,0,10e3c,33cdvg0,1scpg6c,1s1g33o,co06c,36covg0,e00u6c,3uc0u00,1vc6f06,v6cfo0,3600u0c,1ucovg0,3g00u0c,1ucovg0,o30u0c,1ucovg0,u60,307g31o,1vc6f36,1v60f00,3600u6c,3uc0u00,3g00u6c,3uc0u00,3600s1g,o30u00,1ucce0o,c1gf00,3g00s1g,o30u00,333gr66,3vcdhg0,o3003o,36fpj00,e01v30,1s61v00,voc,1vsovo0,v6pj7u,36cpjg0,1sco03o,36cou00,co03o,36cou00,e003o,36cou00,1sco06c,36covg0,e006c,36covg0,co06c,367o37o,31hgf36,1j3o600,3601j6c,36cou00,c1gvm0,307s60o,s6op7g,1gedv00,36cou7s,ofoc1g,3scpj7q,33cvhm7,71m61s,c1hm3g,e00u0c,1ucovg0,s00s1g,o30u00,1o03o,36cou00,1o06c,36covg0,fg07o,36cpj00,3u01j7c,3udpj00,u6or1u,7s000,s6or1o,7o000,o00c30,30cou00,7s,30c0000,7s,60o000,31sdj6u,pmdj0f,31sdj6r,rmvjo3,c1g00o,c1g600,36pmc,1j36000,cophj,1jco000,h8g8k8,h8g8k8,1aqklda,1aqklda,3dnfmve,3dnfmve,c1g60o,c1g60o,c1g60o,3s1g60o,c1hu0o,3s1g60o,r3cdhm,3r3cdhm,0,3v3cdhm,1u0o,3s1g60o,r3dtg6,3r3cdhm,r3cdhm,r3cdhm,1vg6,3r3cdhm,r3dtg6,3v00000,r3cdhm,3v00000,c1hu0o,3s00000,0,3s1g60o,c1g60o,fg0000,c1g60o,3vg0000,0,3vhg60o,c1g60o,fhg60o,0,3vg0000,c1g60o,3vhg60o,c1g7oo,fhg60o,r3cdhm,rjcdhm,r3cdpg,vg0000,fpg,rjcdhm,r3dto0,3vg0000,1vo0,3rjcdhm,r3cdpg,rjcdhm,1vo0,3vg0000,r3dto0,3rjcdhm,c1hvo0,3vg0000,r3cdhm,3vg0000,1vo0,3vhg60o,0,3vjcdhm,r3cdhm,vg0000,c1g7oo,fg0000,7oo,fhg60o,0,vjcdhm,r3cdhm,3vjcdhm,c1hvoo,3vhg60o,c1g60o,3s00000,0,fhg60o,3vvvvvv,3vvvvvv,0,3vvvvvv,3of1s7g,3of1s7g,7gu3of,7gu3of,3vvvvvv,0,tms,34dotg0,7hj7o,36fhg60,fpj60,30c1g00,fsr3c,1m6or00,3ucoo1g,1gcpv00,vmo,3cdgs00,6cpj6,1j7oo60,7dn0o,c1g600,3u30u6c,367gc7s,s6phnu,336oe00,s6phm6,1m6prg0,e3063s,36cou00,vmr,3dns000,30ovmr,3dnso60,s61g7o,3060e00,1scpj6c,36cpj00,fo07s,fo000,o31v1g,o01v00,1g3061g,1g01v00,c30o1g,c01v00,71m6oo,c1g60o,c1g60o,cdhm3g,o3007s,30c00,7dn00,1rdo000,s6or1o,0,o,c00000,0,c00000,7go30c,3m6of0s,1s6or3c,1m00000,1o1gc30,1s00000,f1s,u3o000\",\n\t\t8, 8, null, true \n\t);\n\t\t\n\t// Font 3: 8x14\n\tapi.loadFont(\n\t\t\"0,0,0,0,1v839c1,20rr6c1,1v00000,vnv,3dvvvu3,3jvuvg0,0,6pvnu,3vfsv1o,800000,g,s7pvjs,s10000,0,c3of77,3jue60o,u00000,61s,1vfvvru,c1gf00,0,o,u3o600,0,3vvvvvv,3vufgu3,3jvvvvv,3vvu000,f36,1144phs,0,3vvvvvv,31pjfdt,2cs7vvv,3vvu000,f0s6hi,1scpj6c,1s00000,f36,1j6cf0o,1v1g600,0,vj6fpg,o30s7g,3g00000,vr3,1vm6or3,1jufpm0,0,c1hmps,3jjpmoo,c00000,1060,3gfhvno,3gc1000,0,10c3hu,3v3s3g6,100000,61s,1v1g60o,1v3o600,0,1j6cpj6,1j6c036,1j00000,vur,3dtmuor,dhm6o0,3s,3360e3c,33ccr1o,6ccv00,0,0,3vftvg0,0,c3ovgo,c1gvhs,c7s000,61s,1v1g60o,c1g600,0,c1g60o,c1gvhs,c00000,0,c0pvgc,c00000,0,c30,3v60c00,0,0,c1g60,3v00000,0,a3c,3v6oa00,0,g,s3gv3s,3vfs000,0,ftvjs,1u3ge0g,0,0,0,0,0,c3of1s,c1g00o,c00000,6cpj6,i00000,0,0,1m6pvjc,1m6pvjc,1m00000,c1gv66,31c0v06,23ccv0o,c00000,1gm6,61gc36,3300000,e3c,1m3gtms,36cotg0,1g,o30o00,0,0,30o,o30c1g,o1g300,0,o1g30c,60o30o,o00000,0,1j3pvps,1j00000,0,60o,1v1g600,0,0,0,c1g61g,0,0,3v00000,0,0,0,1g600,0,10c30o,o61g40,0,v66,37dttn6,33ccv00,0,c3gu0o,c1g60o,1v00000,v66,30o61g,1gcdvg0,0,1ucc1g6,u0c1m6,1u00000,30s,u6pj7u,60o7g0,0,3vc1g60,3u0c1m6,1u00000,e30,30c1v66,33ccv00,0,3vcc1gc,c30c1g,o00000,v66,33ccv66,33ccv00,0,1ucdhm6,1v0c1gc,1s00000,o,c00000,c1g000,0,1g600,60o,o00000,1gc,c30o1g,c0o1g0,0,3u,vg0,0,o1g,c0o1gc,c30o00,0,1ucdhgc,c1g00o,c00000,v66,33dtnmu,3ec0v00,0,83gr66,33fthm6,3300000,1v36,1j6cv36,1j6dv00,0,u6dgm0,30c1gj6,u00000,1u3c,1j6cpj6,1j6pu00,0,3v6coj8,1s6goj6,3v00000,1vj6,1h6gu38,1g61s00,0,u6dgm0,30dthj6,t00000,1hm6,33cdvm6,33cdhg0,0,u1g60o,c1g60o,u00000,7gc,60o30c,36cou00,0,3j6cr3c,1s6or36,3j00000,1s30,1g60o30,1h6dvg0,0,33etvnu,3bcdhm6,3300000,1hn6,3rftnme,33cdhg0,0,s6phm6,33cdhjc,s00000,1v36,1j6cv30,1g61s00,0,1ucdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6dpg0,0,1ucdhj0,s0phm6,1u00000,vju,1d1g60o,c1gf00,0,33cdhm6,33cdhm6,1u00000,1hm6,33cdhm6,1m3g400,0,33cdhm6,3bddvjs,1m00000,1hm6,1m3ge1o,1mcdhg0,0,1j6cpj6,u1g60o,u00000,1vm6,261gc30,31cdvg0,0,u30c1g,o30c1g,u00000,1060,3g70e0s,70c0g0,0,u0o30c,60o30c,u00000,83gr66,0,0,0,0,0,1vo0,o30600,0,0,0,3o,67pj6c,1r00000,1o30,1g7gr36,1j6cv00,0,3s,33c1g66,1u00000,70c,63or6c,36cotg0,0,3s,33ftg66,1u00000,e3c,1i61s30,1g61s00,0,3m,36cpj3s,6cou00,1o30,1g6otj6,1j6dpg0,0,c1g01o,c1g60o,u00000,1g6,s1g6,30cpj6,u00000,3g60o36,1m7gr36,3j00000,e0o,c1g60o,c1gf00,0,7c,3vddlmm,3300000,0,dopj6,1j6cpg0,0,3s,33cdhm6,1u00000,0,dopj6,1j7oo30,3o00000,3m,36cpj3s,60o7g0,0,dotj6,1g61s00,0,3s,3370766,1u00000,41g,ofoc1g,o3c700,0,6c,36cpj6c,1r00000,0,6cpj6,1j3o600,0,66,33ddlnu,1m00000,0,ccr1o,s6phg0,0,66,33cdhju,30pu00,0,ftj0o,o6dvg0,0,71g60o,1o1g60o,700000,60o,c1g00o,c1g600,0,1o1g60o,71g60o,1o00000,tms,0,0,0,41o,1mcdhnu,0,f36,31c1g62,1j3o306,1u00000,36co06c,36cpj6c,1r00000,o61g,7phnu,30ccv00,g,s6o03o,67pj6c,1r00000,1j6c,7g33s,36cotg0,30,o1g03o,67pj6c,1r00000,3gr1o,7g33s,36cotg0,0,f36,1g6cf0c,33o000,10e3c,7phnu,30ccv00,0,36co03s,33ftg66,1u00000,60c0o,7phnu,30ccv00,0,1j6c01o,c1g60o,u00000,1gf36,3g60o,c1gf00,30,o1g01o,c1g60o,u00000,cdhgg,s6phm6,3vcdhg0,e3c,s00e3c,33cdvm6,3300000,c30o00,3v6co3s,1g6dvg0,0,1j3m,r7tm6o,1n00000,fjc,36cpvmc,36cpjg0,g,s6o03s,33cdhm6,1u00000,1hm6,7phm6,33ccv00,30,o1g03s,33cdhm6,1u00000,30u6c,cpj6c,36cotg0,30,o1g06c,36cpj6c,1r00000,1hm6,cdhm6,337s1gc,1s00066,333gr66,33cdhjc,s00000,cdhg0,33cdhm6,33ccv00,o,c3opj0,1g6cf0o,c00000,3gr34,1gf0o30,1gedv00,0,1j6cf0o,1v1gvgo,c00000,fhj6c,3sc9j6u,36cphg0,e,dhg60o,1v1g60o,cdgs00,1gc30,7g33s,36cotg0,c,c3001o,c1g60o,u00000,1gc30,7phm6,33ccv00,o,o6006c,36cpj6c,1r00000,tms,dopj6,1j6cpg0,tms,cdpnm,3vdtjm6,3300000,3or3c,v00vg0,0,1o,1m6oe00,1u00000,0,c1g,30c30,33ccv00,0,0,3vc1g60,0,0,1vg6,30c000,60,30cdj6o,o61n46,61gfg0,c1g66,36dgc36,379sfg6,300000,c1g00o,c3of1s,c00000,0,r6pm3c,r00000,0,1m3c,r6pm00,0,8k84a4,8k84a4,8k84a4,8k8lda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3ene60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g67o,cfg60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3c000,0,fsdhm,r3cdhm,0,fg67o,c1g60o,c1gdhm,r3cdnm,3fcdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3c000,7u,3fcdhm,r3cdhm,r3cdhm,rfc1nu,0,dhm,r3cdhm,rfs000,0,c1g60o,cfg67o,0,0,0,fg60o,c1g60o,c1g60o,c1g60v,0,60o,c1g60o,cfu000,0,0,7v,c1g60o,c1g60o,c1g60o,c1u60o,c1g60o,0,7v,0,60o,c1g60o,cfu60o,c1g60o,c1g60o,c1u60v,c1g60o,c1gdhm,r3cdhm,r3edhm,r3cdhm,r3cdhm,r3ec1v,0,0,1v,o3edhm,r3cdhm,r3cdhm,rfe07v,0,0,7v,fedhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3c000,7v,fu000,0,r3cdhm,rfe07n,r3cdhm,r3c60o,c1g67v,fu000,0,r3cdhm,r3cdnv,0,0,7v,fu60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3u000,0,c1g60o,c1u60v,0,0,v,c1u60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,rfudhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,cfg000,0,0,v,c1g60o,c1hvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvs7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gvvvv,3vvvvvv,3vg0000,0,0,7dn6o,3cdotg0,0,v66,3ucdhns,30c0g00,1vm6,33c1g60,30c1g00,0,1vjc,1m6or3c,1m00000,1vm6,1g3061g,1gcdvg0,0,3u,3cdhm6o,1o00000,0,1j6cpj6,1u60o60,0,tms,c1g60o,c00000,vgo,u6cpj6,u1gvg0,0,s6phm6,3vcdhjc,s00000,e3c,33cdhjc,1m6prg0,0,f3060c,v6cpj6,u00000,0,7tmur,1v00000,0,1gcvmr,3dv6vj0,3000000,71g,1g60v30,1g30700,0,7phm6,33cdhm6,3300000,7u,1vg0,fs000,0,1g63u,c1g000,3vg0000,c0o,60c30o,o00vg0,0,61gc30,o1g300,1v00000,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1hm6o,1o00000,o,c00vg0,c1g000,0,tms,7dn00,0,3gr3c,s00000,0,0,0,c1g000,0,0,o,0,f,60o30c,6eor1s,e00000,dgr3c,1m6or00,0,3g,3c30o68,3s00000,0,0,1u7ov3s,1u7o000,0\",\n\t\t8, 14, null, true\n\t);\n\n\t// Font 4: 8x16\n\tapi.loadFont(\n\t\t\"0,0,0,0,vk1,2io30dt,2co30bu,0,vnv,3dvvvu3,3jvvvru,0,0,1mftvnu,3v7oe0g,0,0,83gv7u,1u3g400,0,o,u3ppv7,3jhg61s,0,o,u7tvvv,1v1g61s,0,0,0,0,0,3vvvvvv,3vvvpu3,31ufvvv,3vvvvvv,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,vr3,1vm6or3,1hmfpv6,3000000,o,cdmf77,udm60o,0,81g70,3ofhvno,3oe1g40,0,41ge,f3tvhu,f0s1g2,0,61s,1v1g60o,1v3o600,0,pj6,1j6cpj6,1j00pj6,0,vur,3dtmuor,dhm6or,0,7phj0,s6phm6,1m3g366,1u00000,0,0,3vftvnu,0,61s,1v1g60o,1v3o63u,0,61s,1v1g60o,c1g60o,0,60o,c1g60o,c7sf0o,0,0,1g37u,61g000,0,0,30o7u,1g30000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61s,u3o60o,c0060o,0,6cpj6,i00000,0,0,3c,1mfsr3c,1mfsr3c,0,c1gv66,31c0v06,38dhjs,c1g000,0,31cc30o,o61hk6,0,e3c,1m3gtms,36cpj3m,0,30c1g,1g00000,0,0,30o,o30c1g,o3060c,0,c0o,60o30c,60o61g,0,0,6cf7v,u6c000,0,0,1g63u,c1g000,0,0,0,1g60o,o00000,0,7u,0,0,0,0,60o,0,0,10c30o,o61g40,0,f36,31s7mur,31s6phs,0,61o,1s1g60o,c1g63u,0,v66,30o61g,1gc1hnu,0,v66,30cf06,30dhjs,0,30s,u6pj7u,60o30u,0,1vm0,30c1v06,30dhjs,0,e30,30c1v66,33cdhjs,0,1vm6,30c30o,o30c1g,0,v66,33ccv66,33cdhjs,0,v66,33ccvg6,30c33o,0,0,c1g000,1g600,0,0,c1g000,1g61g,0,6,61gc30,o1g306,0,0,7s000,1v00000,0,30,o1g306,61gc30,0,v66,330o60o,c0060o,0,3s,33cdnmu,3fdpg3s,0,41o,1mcdhnu,33cdhm6,0,1v36,1j6cv36,1j6cpns,0,f36,31c1g60,30c4phs,0,1u3c,1j6cpj6,1j6cr7o,0,1vj6,1h6gu38,1g64pnu,0,1vj6,1h6gu38,1g60o7g,0,f36,31c1g6u,33ccphq,0,1hm6,33cdvm6,33cdhm6,0,f0o,c1g60o,c1g61s,0,7gc,60o30c,36cpj3o,0,1pj6,1j6ou3o,1m6cpn6,0,1s30,1g60o30,1g64pnu,0,1gv7,3vvvmu3,31s7gu3,0,1hn6,3rftnme,33cdhm6,0,v66,33cdhm6,33cdhjs,0,1v36,1j6cv30,1g60o7g,0,v66,33cdhm6,33ddnjs,60s000,1v36,1j6cv3c,1j6cpn6,0,v66,3360e0c,3cdhjs,0,1vur,2chg60o,c1g61s,0,1hm6,33cdhm6,33cdhjs,0,1gu3,31s7gu3,31mcf0o,0,1gu3,31s7gur,3dvupj6,0,1gu3,1j3o60o,u6dgu3,0,1gu3,31mcf0o,c1g61s,0,1vu3,230o61g,1gc3gvv,0,f1g,o30c1g,o30c1s,0,40,30e0s1o,e0s1g2,0,f0c,60o30c,60o31s,0,83gr66,0,0,0,0,0,0,fu000,o30600,0,0,0,0,7g33s,36cpj3m,0,1o30,1g7gr36,1j6cpjs,0,0,7phm0,30c1hjs,0,70c,63or6c,36cpj3m,0,0,7phnu,30c1hjs,0,e3c,1i61s30,1g60o7g,0,0,7dj6c,36cpj3s,6cou00,1o30,1g6otj6,1j6cpn6,0,60o,3g60o,c1g61s,0,1g6,s1g6,30c1g6,1j6cf00,1o30,1g6cr3o,1s6opn6,0,e0o,c1g60o,c1g61s,0,0,edvur,3dtnmur,0,0,dopj6,1j6cpj6,0,0,7phm6,33cdhjs,0,0,dopj6,1j6cpjs,1g61s00,0,7dj6c,36cpj3s,60o7g0,0,dotj6,1g60o7g,0,0,7phj0,s0phjs,0,41g,ofoc1g,o30dgs,0,0,cpj6c,36cpj3m,0,0,c7gu3,31mcf0o,0,0,c7gu3,3dtnvr6,0,0,c6phs,c3opm3,0,0,cdhm6,33cdhju,30pu00,0,ftj0o,o61hnu,0,3go,c1gs0o,c1g60e,0,60o,c1g00o,c1g60o,0,s0o,c1g3go,c1g63g,0,tms,0,0,0,0,83gr66,33cdvg0,0,f36,31c1g60,316cf0c,37o000,1j00,cpj6c,36cpj3m,0,o61g,7phnu,30c1hjs,0,10e3c,7g33s,36cpj3m,0,1j00,7g33s,36cpj3m,0,60c0o,7g33s,36cpj3m,0,3gr1o,7g33s,36cpj3m,0,0,u6co30,1j3o306,u00000,10e3c,7phnu,30c1hjs,0,1hg0,7phnu,30c1hjs,0,60c0o,7phnu,30c1hjs,0,pg0,3g60o,c1g61s,0,1gf36,3g60o,c1g61s,0,60c0o,3g60o,c1g61s,0,cc00g,s6phm6,3vcdhm6,0,s6oe00,s6phm6,3vcdhm6,0,c30o00,3v6co3s,1g60pnu,0,0,6seor,1vdhn3n,0,fjc,36cpvmc,36cpj6e,0,10e3c,7phm6,33cdhjs,0,1hg0,7phm6,33cdhjs,0,60c0o,7phm6,33cdhjs,0,30u6c,cpj6c,36cpj3m,0,60c0o,cpj6c,36cpj3m,0,1hg0,cdhm6,33cdhju,30ou00,cc03s,33cdhm6,33cdhjs,0,cc066,33cdhm6,33cdhjs,0,1g63u,31s1g60,31ns60o,0,3gr34,1gf0o30,1g61pns,0,1gr6,u1hvoo,3vhg60o,0,fopj6,1u64pjf,1j6cpnj,0,s6oo,c1gvgo,c1g60o,3c70000,1gc30,7g33s,36cpj3m,0,o61g,3g60o,c1g61s,0,1gc30,7phm6,33cdhjs,0,1gc30,cpj6c,36cpj3m,0,tms,dopj6,1j6cpj6,0,1rdo066,3jfdvmu,37cdhm6,0,3or3c,v00vg0,0,0,3gr3c,s00v00,0,0,c1g,30c30,30cdhjs,0,0,1vm0,30c1g00,0,0,1vg6,30c1g0,0,c1g62,33co61g,1gct6o6,61u000,c1g62,33co61g,1jct5hu,30c000,60o,1g60o,u3of0o,0,0,3cr6o,1m3c000,0,0,dgr1m,1mdg000,0,8k84a4,8k84a4,8k84a4,8k84a4,1aqklda,1aqklda,1aqklda,1aqklda,3enfnbn,3enfnbn,3enfnbn,3enfnbn,c1g60o,c1g60o,c1g60o,c1g60o,c1g60o,c1g67o,c1g60o,c1g60o,c1g60o,cfg67o,c1g60o,c1g60o,r3cdhm,r3cdnm,r3cdhm,r3cdhm,0,7u,r3cdhm,r3cdhm,0,fg67o,c1g60o,c1g60o,r3cdhm,rfc1nm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,r3cdhm,0,fs1nm,r3cdhm,r3cdhm,r3cdhm,rfc1nu,0,0,r3cdhm,r3cdnu,0,0,c1g60o,cfg67o,0,0,0,7o,c1g60o,c1g60o,c1g60o,c1g60v,0,0,c1g60o,c1g67v,0,0,0,7v,c1g60o,c1g60o,c1g60o,c1g60v,c1g60o,c1g60o,0,7v,0,0,c1g60o,c1g67v,c1g60o,c1g60o,c1g60o,c1u60v,c1g60o,c1g60o,r3cdhm,r3cdhn,r3cdhm,r3cdhm,r3cdhm,r3ec1v,0,0,0,3uc1n,r3cdhm,r3cdhm,r3cdhm,rfe07v,0,0,0,fu07n,r3cdhm,r3cdhm,r3cdhm,r3ec1n,r3cdhm,r3cdhm,0,fu07v,0,0,r3cdhm,rfe07n,r3cdhm,r3cdhm,c1g60o,cfu07v,0,0,r3cdhm,r3cdnv,0,0,0,fu07v,c1g60o,c1g60o,0,7v,r3cdhm,r3cdhm,r3cdhm,r3cdhv,0,0,c1g60o,c1u60v,0,0,0,1u60v,c1g60o,c1g60o,0,1v,r3cdhm,r3cdhm,r3cdhm,r3cdnv,r3cdhm,r3cdhm,c1g60o,cfu67v,c1g60o,c1g60o,c1g60o,c1g67o,0,0,0,v,c1g60o,c1g60o,3vvvvvv,3vvvvvv,3vvvvvv,3vvvvvv,0,7v,3vvvvvv,3vvvvvv,3of1s7g,3of1s7g,3of1s7g,3of1s7g,7gu3of,7gu3of,7gu3of,7gu3of,3vvvvvv,3vvvvo0,0,0,0,7dn6o,3cdhn3m,0,u6c,36cpm6c,33cdhmc,0,1vm6,33c1g60,30c1g60,0,0,3v6or3c,1m6or3c,0,7u,3360c0o,o61hnu,0,0,7tm6o,3cdhm3g,0,0,1j6cpj6,1j7oo30,3000000,0,1rdo60o,c1g60o,0,3u,c3opj6,1j3o63u,0,1o,1mcdhnu,33ccr1o,0,e3c,33cdhjc,1m6or7e,0,7hg,c0ofj6,1j6cphs,0,0,7tmur,3dns000,0,3,37tmur,3pnso60,0,71g,1g60v30,1g60c0s,0,3s,33cdhm6,33cdhm6,0,0,3v0007u,1vg0,0,0,c1gvgo,c0007v,0,1g,c0o1gc,c3003u,0,c,c30o1g,c0o03u,0,3gr,dhg60o,c1g60o,c1g60o,c1g60o,c1g60o,3cdhm3g,0,0,c1g03u,1g600,0,0,7dn00,1rdo000,0,3gr3c,s00000,0,0,0,o,c00000,0,0,0,c00000,0,u30c,60o37c,1m6of0s,0,dgr3c,1m6or00,0,0,71m1g,1gchu00,0,0,0,1u7ov3s,1u7ov00,0\",\n\t\t8, 16, null, true\n\t);\n\n\t// Set default font to 6x8 (font ID 1)\n\tapi.setDefaultFont( 1 );\n}\n", "/**\r\n * Pi.js - Main Entry Point\r\n * \r\n * Graphics and sound library for retro-style games and demos.\r\n * \r\n * @module pi.js\r\n * @author Andy Stubbs\r\n * @license Apache-2.0\r\n */\r\n\r\n\"use strict\";\r\n\r\n// Core Modules\r\nimport * as commands from \"./core/commands.js\";\r\nimport * as screenManager from \"./core/screen-manager.js\";\r\nimport * as colors from \"./core/colors.js\";\r\nimport * as renderer from \"./core/renderer.js\";\r\nimport * as events from \"./core/events.js\";\r\n\r\n// Other Modules\r\nimport * as graphics from \"./modules/graphics.js\";\r\nimport * as graphicsAdvanced from \"./modules/graphics-advanced.js\";\r\nimport * as draw from \"./modules/draw.js\";\r\nimport * as paint from \"./modules/paint.js\";\r\nimport * as images from \"./modules/images.js\";\r\nimport * as font from \"./modules/font.js\";\r\nimport * as print from \"./modules/print.js\";\r\nimport * as keyboard from \"./modules/keyboard.js\";\r\nimport * as mouse from \"./modules/mouse.js\";\r\nimport * as touch from \"./modules/touch.js\";\r\nimport * as gamepad from \"./modules/gamepad.js\";\r\nimport * as press from \"./modules/press.js\";\r\nimport * as sound from \"./modules/sound.js\";\r\nimport * as play from \"./modules/play.js\";\r\nimport * as plugins from \"./core/plugins.js\";\r\n\r\n// Assets\r\nimport * as fontData from \"./assets/font-data.js\";\r\n\r\n// Version injected during build from package.json\r\nconst VERSION = \"2.0.0-alpha.1\";\r\n\r\n// Create the pi object with _ (internal API for plugins) and util namespaces\r\nconst api = {\r\n\t\"version\": VERSION\r\n};\r\n\r\n// Initialize the modules\r\ncommands.init( api, screenManager );\r\nscreenManager.init();\r\nrenderer.init();\r\ncolors.init();\r\nevents.init();\r\ngraphics.init();\r\ngraphicsAdvanced.init();\r\ndraw.init();\r\npaint.init();\r\nimages.init();\r\nfont.init();\r\nprint.init();\r\nkeyboard.init();\r\nmouse.init();\r\ntouch.init();\r\ngamepad.init();\r\npress.init();\r\nsound.init();\r\nplay.init();\r\nplugins.init();\r\n\r\n// Append all the commands to the api\r\ncommands.processApi();\r\n\r\n// Load built-in fonts\r\nfontData.loadBuiltInFonts( api );\r\n\r\n// Set window.pi for browser environments\r\nif( typeof window !== \"undefined\" ) {\r\n\twindow.pi = api;\r\n\r\n\t// Set $ alias only if not already defined (avoid jQuery conflicts)\r\n\tif( window.$ === undefined ) {\r\n\t\twindow.$ = api;\r\n\t}\r\n}\r\n\r\n// Export for different module systems\r\nexport default api;\r\nexport { api as pi };\r\n"],
  "mappings": "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",
  "names": ["utils_exports", "__export", "calcColorDifference", "clamp", "convertToColor", "degreesToRadian", "generateColorKey", "getFloat", "getInt", "hexToData", "inRange", "inRange2", "isDomElement", "isFunction", "isObjectLiteral", "pad", "padL", "parseOptions", "queueMicrotask", "radiansToDegrees", "rgbToColor", "rndRange", "args", "parameterNames", "resultOptions", "name", "isNamedParameterFound", "inputOptions", "i", "fn", "el", "obj", "proto", "hex", "width", "height", "data", "digits", "digitIndex", "y", "x", "hexPart", "num", "min", "max", "point", "hitBox", "x1", "y1", "x2", "y2", "deg", "rad", "str", "len", "c", "val", "def", "parsed", "callback", "COLOR_PROTO", "m_colorCheckerContext", "r", "g", "b", "a", "rgbToHex", "createColor", "color", "hexToColor", "splitRgb", "colorStringToColor", "c1", "c2", "w", "dr", "dg", "db", "da", "s", "parts", "colors", "cToHex", "colorStr", "m_commandList", "m_settings", "m_api", "m_screenManager", "m_readyCallbacks", "m_isDocumentReady", "m_waitCount", "m_checkReadyTimeout", "init", "api", "screenManager", "onDocumentReady", "wait", "done", "scheduleReadyCheck", "addCommand", "name", "fn", "parameterNames", "isScreen", "screenOptional", "cmd", "settingName", "processApi", "setList", "settingNameA", "settingNameB", "set", "a", "b", "command", "processApiCommand", "args", "options", "parseOptions", "screenData", "error", "getApi", "ready", "callback", "isFunction", "resolve", "optionName", "setting", "argsArray", "parsedOptions", "checkReady", "callbacks", "item", "screen_manager_exports", "__export", "addAACommand", "addCommand", "addPixelCommand", "addScreenCleanupFunction", "addScreenDataItem", "addScreenDataItemGetter", "addScreenInitFunction", "addScreenInternalCommands", "getActiveScreen", "init", "sortScreenCommands", "SCREEN_API_PROTO", "m_screens", "m_commandList", "m_pixelCommands", "m_aaCommands", "m_screenDataItems", "m_screenDataItemGetters", "m_screenInternalCommands", "m_screenDataInitFunctions", "m_sceenDataCleanupFunctions", "m_nextScreenId", "m_activeScreen", "m_resizeObserver", "m_observedContainers", "init", "entries", "entry", "canvases", "canvas", "screenId", "screenData", "resizeScreen", "addCommand", "name", "fn", "parameterNames", "screenOptional", "addPixelCommand", "cmd", "addAACommand", "sortScreenCommands", "a", "b", "addScreenDataItem", "val", "addScreenInternalCommands", "addScreenDataItemGetter", "getActiveScreen", "addScreenInitFunction", "addScreenCleanupFunction", "screen", "options", "isFunction", "error", "parseAspect", "createScreen", "command", "processApiCommand", "removeScreen", "errorMessage", "key", "hasOtherScreens", "id", "otherScreen", "i", "getter", "internal", "setScreen", "screenObj", "getScreen", "getInt", "width", "height", "setPixelMode", "getPixelMode", "args", "parseOptions", "aspect", "match", "splitter", "createOffscreenScreen", "isDomElement", "createNoStyleScreen", "createDefaultScreen", "createScreenData", "isContainerBody", "size", "getSize", "setCanvasSize", "contextAttributes", "screenApi", "itemGetter", "aspectData", "maxWidth", "maxHeight", "newWidth", "newHeight", "factorX", "factorY", "factor", "ratio1", "ratio2", "element", "fromSize", "toSize", "m_pens", "m_blends", "init", "addPen", "penSetPixel", "penSquare", "penCircle", "addBlend", "blendReplace", "blendAlpha", "addScreenDataItem", "addScreenInternalCommands", "blendGetColorNoNoise", "getImageData", "screenData", "setImageDirty", "queueMicrotask", "addCommand", "render", "cls", "options", "x", "getInt", "y", "width", "height", "setAutoRender", "isAutoRender", "setPen", "pen", "size", "getFloat", "error", "setBlend", "mode", "noise", "i", "blendGetColorNoise", "clamp", "name", "fn", "cap", "c", "c2", "half", "rndRange", "change", "data", "srcA", "dstA", "outA", "offset", "startX", "endX", "startY", "endY", "py", "px", "baseSize", "diameter", "radiusThresholdSq", "dy", "dx", "m_defaultPal", "m_defaultPalMap", "m_defaultColor", "init", "setDefaultPal", "setDefaultColor", "addScreenDataItemGetter", "addCommand", "setDefaultPal", "options", "pal", "error", "m_defaultPal", "convertToColor", "i", "c", "m_defaultPalMap", "m_defaultColor", "setDefaultColor", "setColor", "screenData", "colorInput", "isAddToPalette", "colorValue", "findColorIndexByColorValue", "getPalIndex", "color", "tolerance", "getFloat", "index", "setBgColor", "bc", "setContainerBgColor", "setPalColor", "oldColor", "getPal", "filteredPal", "getPalInternal", "setPal", "newPal", "currentColor", "newIndex", "replaceColors", "findColors", "newColors", "newArray", "findKeys", "findColor", "getColorValueByRawInput", "newColor", "getImageData", "data", "y", "x", "r", "g", "b", "a", "colorKey", "generateColorKey", "setImageDirty", "replacePalColors", "findColorValue", "newColorValue", "rawInput", "maxDifference", "difference", "calcColorDifference", "INPUT_TAGS", "CURSOR_BLINK", "m_inCodes", "m_inKeys", "m_actionKeys", "m_onKeyHandlers", "m_inputData", "m_isKeyboardActive", "init", "startKeyboard", "clearInKeys", "clearKeyboardEvents", "mode", "addCommand", "onKeyDown", "onKeyUp", "stopKeyboard", "inkey", "options", "key", "error", "keyCodes", "code", "setActionKeys", "keys", "removeActionKeys", "onkey", "fn", "once", "allowRepeat", "combo", "handler", "offkey", "comboKey", "handlers", "toRemove", "i", "input", "screenData", "prompt", "cursor", "isNumber", "isInteger", "allowNegative", "resolvePromise", "rejectPromise", "promise", "resolve", "reject", "finishInput", "startInput", "cancelInput", "event", "isFromEditableTarget", "keyData", "triggerKeyEventHandlers", "keyOrCode", "isAnyKey", "handlersCopy", "comboData", "h", "element", "role", "backCanvas", "backContext", "getApi", "onInputKeyDown", "showPrompt", "inputHandled", "hideCursorOverride", "msg", "now", "pos", "posPx", "width", "height", "isCancel", "val", "tempInputData", "init", "addScreenDataItem", "addScreenInitFunction", "initMouseData", "onWindowBlur", "clearMouseEvents", "screenData", "addCommand", "startMouse", "mouseMove", "mouseDown", "mouseUp", "onContextMenu", "stopMouse", "getMouse", "mouse", "inmouse", "setEnableContextMenu", "options", "onmouse", "mode", "fn", "once", "hitBox", "customData", "onevent", "offmouse", "offevent", "getScreenDataFromEvent", "updateMouse", "mouseData", "triggerEventListeners", "e", "action", "rect", "x", "y", "lastX", "lastY", "screenId", "activeScreen", "getActiveScreen", "m_isTouchScreen", "init", "addScreenDataItem", "addScreenInitFunction", "initTouchData", "onWindowBlur", "clearTouchEvents", "screenData", "addCommand", "startTouch", "options", "touchStart", "touchMove", "touchEnd", "stopTouch", "intouch", "getTouch", "ontouch", "mode", "fn", "once", "hitBox", "customData", "onevent", "offtouch", "offevent", "setPinchZoom", "getScreenDataFromEvent", "updateTouch", "touchData", "triggerEventListeners", "e", "action", "newTouches", "rect", "j", "touch", "touchArr", "i", "screenId", "activeScreen", "getActiveScreen", "init", "addScreenDataItem", "addScreenInitFunction", "initPressData", "clearPressEvents", "screenData", "clearClickEvents", "addCommand", "inpress", "getTouchPress", "onpress", "options", "mode", "fn", "once", "hitBox", "customData", "onevent", "offpress", "offevent", "onclick", "offclick", "addScreenInternalCommands", "triggerPressListeners", "data", "triggerEventListeners", "triggerClickListeners", "clickStatus", "copyTouches", "touches", "touchArr", "action", "i", "touch", "touchData", "m_gamepads", "m_onConnectHandlers", "m_onDisconnectHandlers", "m_isInitialized", "m_isLooping", "m_gamepadLoopId", "m_axesSensitivity", "m_tick", "m_lastGamepadUpdateTick", "init", "onWindowBlur", "onWindowFocus", "clearGamepadEvents", "addCommand", "startGamepad", "gamepadConnected", "gamepadDisconnected", "gamepadLoop", "stopGamepad", "ingamepad", "options", "gamepadIndex", "updateGamepads", "a", "b", "error", "setGamepadSensitivity", "sensitivity", "onGamepadConnected", "fn", "onGamepadDisconnected", "updateGamepad", "gamepadData", "handler", "data", "gamepads", "i", "createNewGamepadData", "gamepadDataRaw", "newGamepadData", "buttonIndex", "axisIndex", "current", "last", "gamepadRawData", "newButtons", "buttonNew", "buttonOld", "smoothAxis", "axis", "init", "addCommand", "clearEvents", "screenData", "options", "type", "types", "clearKeyboardEvents", "clearGamepadEvents", "clearMouseEvents", "clearTouchEvents", "clearPressEvents", "clearClickEvents", "t", "lowerType", "error", "onevent", "mode", "fn", "once", "hitBox", "modes", "name", "listenerArr", "extraId", "extraData", "customData", "modeFound", "i", "isFunction", "originalFn", "newMode", "wrappedFn", "data", "offevent", "isClear", "triggerEventListeners", "clickStatus", "temp", "listener", "isHit", "newData", "j", "pos", "inRange", "init", "addScreenDataItem", "addPixelCommand", "pset", "screenData", "options", "x", "getInt", "y", "error", "inRange2", "color", "getImageData", "setImageDirty", "addAACommand", "aaPset", "getFloat", "line", "x1", "y1", "x2", "y2", "dx", "dy", "sx", "sy", "err", "e2", "aaLine", "rect", "width", "height", "fillColor", "isFill", "getColorValueByRawInput", "tempColor", "y2Adjusted", "x2Adjusted", "x3", "aaRect", "circle", "radius", "r", "rSquared", "py", "px", "i", "data", "midPoint", "aaCircle", "angle1", "degreesToRadian", "angle2", "addCommand", "put", "includeZero", "startX", "startY", "dataY", "dataX", "c", "get", "tolerance", "isAddToPalette", "clamp", "t", "imageData2", "colorLookupFn", "key", "generateColorKey", "row", "colorValue", "rgbToColor", "findColorIndexByColorValue", "getPixel", "getPixelColor", "addPixelCommand", "arc", "screenData", "options", "x", "getInt", "y", "radius", "angle1", "angle2", "error", "winding", "getImageData", "color", "x2", "y2", "set", "a", "radiansToDegrees", "setImageDirty", "midPoint", "addAACommand", "aaArc", "getFloat", "angle1Rad", "degreesToRadian", "angle2Rad", "ellipse", "radiusX", "radiusY", "fillColor", "isFill", "getColorValueByRawInput", "rxSquared", "rySquared", "dy", "py", "dx", "px", "i", "data", "d1", "d2", "aaEllipse", "cx", "cy", "rx", "ry", "addCommand", "filterImg", "filter", "x1", "y1", "isFunction", "clamp", "temp", "bezier", "xStart", "yStart", "xEnd", "yEnd", "minDistance", "points", "lastPoint", "calcBezierStep", "t", "dt", "point", "calcBezierDistance", "aaBezier", "p1", "p2", "a2", "a3", "t2", "t3", "init", "addScreenDataItem", "addCommand", "draw", "screenData", "options", "drawString", "error", "tempColors", "i", "reg", "parts", "isReturn", "lastCursor", "isBlind", "isArc", "arcRadius", "arcAngle1", "arcAngle2", "scale", "drawArgs", "colorNum", "colorStr", "len", "getInt", "angle", "degreesToRadian", "boundryNumber", "clamp", "addCommand", "paint", "screenData", "options", "x", "getInt", "y", "fillColor", "tolerance", "getFloat", "boundaryColor", "error", "getColorValueByRawInput", "getImageData", "data", "width", "height", "startIndex", "startR", "startG", "startB", "startA", "weights", "maxDifference", "a", "b", "toleranceThreshold", "visited", "queue", "shouldSkipPixel", "refColor", "pixelColor", "difference", "calcColorDifference", "startColor", "head", "pixel", "px", "py", "i", "addToQueue", "setImageDirty", "index", "m_images", "m_imageCount", "addCommand", "loadImage", "options", "src", "name", "onLoadCallback", "onErrorCallback", "srcErrMsg", "error", "m_imageCount", "m_images", "isFunction", "img", "wait", "done", "loadSpritesheet", "spriteWidth", "spriteHeight", "margin", "isAuto", "imageData", "width", "height", "processSpriteSheetAuto", "processSpriteSheetFixed", "removeImage", "getImage", "screenData", "x1", "y1", "x2", "y2", "canvas", "context", "getSpritesheetData", "sprite", "spriteData", "drawImage", "x", "y", "angle", "anchorX", "anchorY", "alpha", "scaleX", "scaleY", "image", "drawItem", "drawSprite", "frame", "frameData", "degreesToRadian", "oldAlpha", "data", "searched", "dirs", "i", "index", "pixelIndex", "queue", "head", "pixel", "px", "py", "dir", "nx", "ny", "nIndex", "dataIndex", "m_fonts", "m_fontBitmaps", "m_defaultFont", "m_nextFontId", "m_nextFontBitmapId", "init", "addScreenDataItemGetter", "getFontBitmap", "bitmapId", "addCommand", "loadFont", "options", "fontSrc", "width", "height", "charSet", "isEncoded", "error", "i", "temp", "chars", "font", "decompressFont", "loadFontFromImage", "setDefaultFont", "fontId", "setFont", "screenData", "fontInput", "updatePrintCursorDimensions", "setFontSize", "getInt", "getAvailableFonts", "fonts", "setChar", "charCode", "data", "hexToData", "charIndex", "tempSize", "tempCanvas", "tempContext", "tempMessage", "c", "minX", "maxX", "minY", "maxY", "y", "x", "index", "numStr", "bin", "nums", "num", "img", "bitmap", "wait", "done", "err", "init", "addScreenDataItem", "addCommand", "print", "screenData", "options", "msg", "isInline", "isCentered", "parts", "i", "startPrint", "setPos", "col", "row", "error", "x", "y", "setPosPx", "getPos", "getPosPx", "getCols", "getRows", "setWordBreak", "piCalcWidth", "canvasCalcWidth", "printCursor", "font", "width", "calcWidth", "overlap", "onScreenPct", "msgSplit", "msg1", "msg2", "index", "shiftImageUp", "piPrint", "bitmapPrint", "canvasPrint", "yOffset", "getImageData", "iDest", "iSrc", "data", "setImageDirty", "defaultPal", "charIndex", "bitmap", "getFontBitmap", "bitmapWidth", "sw", "sh", "columns", "sx", "sy", "dx", "m_audioContext", "m_audioPools", "m_nextAudioId", "m_soundPool", "m_nextSoundId", "m_volume", "stopSoundById", "soundId", "m_soundPool", "createSound", "audioContext", "frequency", "volume", "attackTime", "sustainTime", "decayTime", "stopTime", "oType", "waveTables", "delay", "oscillator", "envelope", "master", "m_volume", "real", "imag", "wave", "currentTime", "m_nextSoundId", "addCommand", "createAudioPool", "options", "src", "poolSize", "getInt", "error", "audioItem", "audio", "loadAudio", "audioId", "m_nextAudioId", "m_audioPools", "deleteAudioPool", "i", "poolItem", "playAudioPool", "getFloat", "startTime", "duration", "stopAudioPool", "poolId", "j", "sound", "attack", "decay", "m_audioContext", "AudioContextClass", "stopSound", "id", "setVolume", "retryCount", "audioReady", "done", "audioError", "errors", "errorCode", "index", "newAudio", "wait", "m_tracks", "m_allTracks", "m_lastTrackId", "m_playData", "m_notesData", "m_allNotes", "addCommand", "play", "options", "playString", "error", "trackId", "createTrack", "m_playData", "playTrack", "a", "b", "AudioContextClass", "audioContext", "playData", "createSound", "stopPlay", "i", "m_allTracks", "track", "m_tracks", "j", "stopSoundById", "removeTrack", "firstTrackId", "waveTables", "start", "end", "k", "trackStrings", "trackIds", "regString", "reg", "lastNote", "m_lastTrackId", "trackParts", "index", "noteData", "noteParts", "cmd", "frequency", "val", "wait", "processNote", "getInt", "m_allNotes", "m_notesData", "getNoteLength", "processMusic", "processWaveform", "copyTrackData", "playNote", "note", "octave", "volume", "attackTime", "sustainTime", "decayTime", "stopTime", "oType", "soundData", "trackDestId", "trackSourceId", "trackDest", "trackSource", "m_plugins", "m_api", "m_isInitialized", "init", "getApi", "processEarlyRegistrations", "addCommand", "registerPlugin", "options", "error", "p", "pluginInfo", "initializePlugin", "getPlugins", "pluginApi", "addPixelCommand", "addAACommand", "addScreenDataItem", "addScreenDataItemGetter", "addScreenInternalCommands", "addScreenInitFunction", "addScreenCleanupFunction", "utils_exports", "pluginError", "processApi", "loadBuiltInFonts", "api", "VERSION", "api", "init", "screen_manager_exports", "processApi", "loadBuiltInFonts", "index_default"]
}
