{
  "version": 3,
  "sources": ["../../src/core/errors.js", "../../src/core/pi-data.js", "../../src/modules/utils.js", "../../src/index.js"],
  "sourcesContent": ["/**\r\n * Pi.js - Error Handling Module\r\n * \r\n * Custom error types and assertion utilities for Pi.js.\r\n * \r\n * @module core/errors\r\n */\r\n\r\n/**\r\n * Custom error class for Pi.js errors\r\n */\r\nexport class PiError extends Error {\r\n\t/**\r\n\t * @param {string} code - Error code\r\n\t * @param {string} msg - Error message\r\n\t */\r\n\tconstructor( code, msg ) {\r\n\t\tsuper( msg );\r\n\t\tthis.name = \"PiError\";\r\n\t\tthis.code = code;\r\n\t}\r\n}\r\n\r\n/**\r\n * Assert a condition, throw PiError if false\r\n * \r\n * @param {boolean} cond - Condition to check\r\n * @param {string} code - Error code if assertion fails\r\n * @param {string} msg - Error message if assertion fails\r\n */\r\nexport const assert = ( cond, code, msg ) => {\r\n\tif( !cond ) {\r\n\t\tthrow new PiError( code, msg );\r\n\t}\r\n};\r\n\r\n/**\r\n * Error modes for logging\r\n */\r\nexport const ErrorMode = Object.freeze( {\r\n\t\"LOG\": \"log\",\r\n\t\"THROW\": \"throw\",\r\n\t\"NONE\": \"none\"\r\n} );\r\n\r\nlet currentErrorMode = ErrorMode.LOG;\r\n\r\n/**\r\n * Set the error mode\r\n * \r\n * @param {string} mode - One of \"log\", \"throw\", \"none\"\r\n */\r\nexport function setErrorMode( mode ) {\r\n\tif( Object.values( ErrorMode ).includes( mode ) ) {\r\n\t\tcurrentErrorMode = mode;\r\n\t}\r\n}\r\n\r\n/**\r\n * Log an error according to current error mode\r\n * \r\n * @param {string} msg - Error message\r\n */\r\nexport function logError( msg ) {\r\n\tif( currentErrorMode === ErrorMode.LOG ) {\r\n\t\tconsole.error( msg );\r\n\t} else if( currentErrorMode === ErrorMode.THROW ) {\r\n\t\tthrow new Error( msg );\r\n\t}\r\n\t// NONE mode does nothing\r\n}\r\n\r\n", "/**\r\n * Pi.js - Core Data Module\r\n * \r\n * Central data storage for Pi.js, equivalent to legacy m_piData.\r\n * \r\n * @module core/pi-data\r\n */\r\n\r\nimport { logError } from \"./errors.js\";\r\n\r\n// Central Pi.js data storage\r\nexport const piData = {\r\n\t\"nextScreenId\": 0,\r\n\t\"screens\": {},\r\n\t\"activeScreen\": null,\r\n\t\"images\": {},\r\n\t\"imageCount\": 0,\r\n\t\"defaultPrompt\": String.fromCharCode( 219 ),\r\n\t\"defaultFont\": {},\r\n\t\"nextFontId\": 0,\r\n\t\"fonts\": {},\r\n\t\"defaultPalette\": [],\r\n\t\"defaultColor\": 7,\r\n\t\"commands\": {},\r\n\t\"screenCommands\": {},\r\n\t\"defaultPenDraw\": null,\r\n\t\"pens\": {},\r\n\t\"penList\": [],\r\n\t\"blendCommands\": {},\r\n\t\"blendCommandsList\": [],\r\n\t\"defaultBlendCmd\": null,\r\n\t\"settings\": {},\r\n\t\"settingsList\": [],\r\n\t\"volume\": 0.75,\r\n\t\"log\": logError,\r\n\t\"isTouchScreen\": false,\r\n\t\"defaultInputFocus\": typeof window !== \"undefined\" ? window : null\r\n};\r\n\r\n// Command list for processCommands\r\nexport const commandList = [];\r\n\r\n// Ready system\r\nexport let waitCount = 0;\r\nexport let waiting = false;\r\nexport const readyList = [];\r\nexport let startReadyListTimeout = 0;\r\n\r\nexport function setWaitCount( count ) {\r\n\twaitCount = count;\r\n}\r\n\r\nexport function setWaiting( state ) {\r\n\twaiting = state;\r\n}\r\n\r\nexport function setStartReadyListTimeout( timeout ) {\r\n\tstartReadyListTimeout = timeout;\r\n}\r\n\r\n", "/**\r\n * Pi.js - Utilities Module\r\n * \r\n * Common utility functions for math, colors, types, and data manipulation.\r\n * \r\n * @module modules/utils\r\n */\r\n\r\n// Type checking utilities\r\nexport const isFunction = ( fn ) => typeof fn === \"function\";\r\nexport const isDomElement = ( el ) => el instanceof Element;\r\nexport const isArray = Array.isArray;\r\nexport const isInteger = Number.isInteger;\r\nexport const canAddEventListeners = ( el ) => {\r\n\treturn typeof el.addEventListener === \"function\" && \r\n\t\ttypeof el.removeEventListener === \"function\";\r\n};\r\n\r\n// Color conversion utilities\r\n\r\n/**\r\n * Convert hex color to color object\r\n * \r\n * @param {string} hex - Hex color string (#RGB, #RRGGBB, or #RRGGBBAA)\r\n * @returns {Object} Color object with r, g, b, a, s, s2 properties\r\n */\r\nexport function hexToColor( hex ) {\r\n\tlet r, g, b, a, s2;\r\n\ts2 = hex;\r\n\r\n\tif( hex.length === 4 ) {\r\n\t\tr = parseInt( hex.slice( 1, 2 ), 16 ) * 16 - 1;\r\n\t\tg = parseInt( hex.slice( 2, 3 ), 16 ) * 16 - 1;\r\n\t\tb = parseInt( hex.slice( 3, 4 ), 16 ) * 16 - 1;\r\n\t} else {\r\n\t\tr = parseInt( hex.slice( 1, 3 ), 16 );\r\n\t\tg = parseInt( hex.slice( 3, 5 ), 16 );\r\n\t\tb = parseInt( hex.slice( 5, 7 ), 16 );\r\n\t}\r\n\r\n\tif( hex.length === 9 ) {\r\n\t\ts2 = hex.slice( 0, 7 );\r\n\t\ta = parseInt( hex.slice( 7, 9 ), 16 );\r\n\t} else {\r\n\t\ta = 255;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"r\": r,\r\n\t\t\"g\": g,\r\n\t\t\"b\": b,\r\n\t\t\"a\": a,\r\n\t\t\"s\": `rgba(${r},${g},${b},${Math.round( a / 255 * 1000 ) / 1000})`,\r\n\t\t\"s2\": s2\r\n\t};\r\n}\r\n\r\n/**\r\n * Convert color component to hex\r\n * \r\n * @param {number} c - Color component (0-255)\r\n * @returns {string} Hex string\r\n */\r\nexport function cToHex( c ) {\r\n\tif( !isInteger( c ) ) {\r\n\t\tc = Math.round( c );\r\n\t}\r\n\tc = clamp( c, 0, 255 );\r\n\tconst hex = Number( c ).toString( 16 );\r\n\treturn hex.length < 2 ? \"0\" + hex : hex.toUpperCase();\r\n}\r\n\r\n/**\r\n * Convert RGB to hex color\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255), defaults to 255\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex( r, g, b, a ) {\r\n\tif( isNaN( a ) ) {\r\n\t\ta = 255;\r\n\t}\r\n\treturn \"#\" + cToHex( r ) + cToHex( g ) + cToHex( b ) + cToHex( a );\r\n}\r\n\r\n/**\r\n * Convert RGB to color object\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255)\r\n * @returns {Object} Color object\r\n */\r\nexport function rgbToColor( r, g, b, a ) {\r\n\treturn hexToColor( rgbToHex( r, g, b, a ) );\r\n}\r\n\r\n/**\r\n * Convert color string to color object using canvas\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {Object} Color object\r\n */\r\nexport function colorStringToColor( colorStr ) {\r\n\tconst canvas = document.createElement( \"canvas\" );\r\n\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\r\n\tcontext.fillStyle = colorStr;\r\n\tcontext.fillRect( 0, 0, 1, 1 );\r\n\tconst data = context.getImageData( 0, 0, 1, 1 ).data;\r\n\treturn rgbToColor( data[ 0 ], data[ 1 ], data[ 2 ], data[ 3 ] );\r\n}\r\n\r\n/**\r\n * Convert color string to hex\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {string} Hex color string\r\n */\r\nexport function colorStringToHex( colorStr ) {\r\n\treturn colorStringToColor( colorStr ).s2;\r\n}\r\n\r\n/**\r\n * Split RGB/RGBA string into components\r\n * \r\n * @param {string} s - RGB or RGBA string\r\n * @returns {Array<number>} Array of color components\r\n */\r\nfunction splitRgb( s ) {\r\n\ts = s.slice( s.indexOf( \"(\" ) + 1, s.indexOf( \")\" ) );\r\n\tconst parts = s.split( \",\" );\r\n\tconst colors = [];\r\n\tfor( let i = 0; i < parts.length; i++ ) {\r\n\t\tlet val;\r\n\t\tif( i === 3 ) {\r\n\t\t\tval = parseFloat( parts[ i ].trim() ) * 255;\r\n\t\t} else {\r\n\t\t\tval = parseInt( parts[ i ].trim() );\r\n\t\t}\r\n\t\tcolors.push( val );\r\n\t}\r\n\treturn colors;\r\n}\r\n\r\n/**\r\n * Convert various color formats to color object\r\n * \r\n * @param {*} color - Color in various formats\r\n * @returns {Object|null} Color object or null if invalid\r\n */\r\nexport function convertToColor( color ) {\r\n\tif( color === undefined ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Array format [r, g, b, a]\r\n\tif( isArray( color ) && color.length > 2 ) {\r\n\t\treturn rgbToColor( color[ 0 ], color[ 1 ], color[ 2 ], color[ 3 ] );\r\n\t}\r\n\r\n\t// Object format {r, g, b, a}\r\n\tif(\r\n\t\tisInteger( color?.r ) &&\r\n\t\tisInteger( color?.g ) &&\r\n\t\tisInteger( color?.b )\r\n\t) {\r\n\t\treturn rgbToColor( color.r, color.g, color.b, color.a );\r\n\t}\r\n\r\n\tif( typeof color !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Hex format\r\n\tconst checkHexColor = /(^#[0-9A-F]{8}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\r\n\tif( checkHexColor.test( color ) ) {\r\n\t\treturn hexToColor( color );\r\n\t}\r\n\r\n\t// RGB/RGBA format\r\n\tif( color.indexOf( \"rgb\" ) === 0 ) {\r\n\t\tconst rgbParts = splitRgb( color );\r\n\t\tif( rgbParts.length < 3 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn rgbToColor( rgbParts[ 0 ], rgbParts[ 1 ], rgbParts[ 2 ], rgbParts[ 3 ] );\r\n\t}\r\n\r\n\t// Named color or other CSS color\r\n\treturn colorStringToColor( color );\r\n}\r\n\r\n/**\r\n * Check if a color string is valid\r\n * \r\n * @param {string} strColor - Color string to check\r\n * @returns {boolean} True if valid\r\n */\r\nexport function checkColor( strColor ) {\r\n\tconst s = new Option().style;\r\n\ts.color = strColor;\r\n\treturn s.color !== \"\";\r\n}\r\n\r\n/**\r\n * Compare two color objects\r\n * \r\n * @param {Object} color1 - First color\r\n * @param {Object} color2 - Second color\r\n * @returns {boolean} True if colors are equal\r\n */\r\nexport function compareColors( color1, color2 ) {\r\n\treturn color1.r === color2.r &&\r\n\t\tcolor1.g === color2.g &&\r\n\t\tcolor1.b === color2.b &&\r\n\t\tcolor1.a === color2.a;\r\n}\r\n\r\n// Data conversion utilities\r\n\r\n/**\r\n * Convert hex string to 2D data array\r\n * \r\n * @param {string} hex - Hex string\r\n * @param {number} width - Width of data\r\n * @param {number} height - Height of data\r\n * @returns {Array<Array<number>>} 2D array of binary data\r\n */\r\nexport function hexToData( hex, width, height ) {\r\n\thex = hex.toUpperCase();\r\n\tconst data = [];\r\n\tlet i = 0;\r\n\tlet digits = \"\";\r\n\tlet digitIndex = 0;\r\n\r\n\tfor( let y = 0; y < height; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = 0; x < width; x++ ) {\r\n\t\t\tif( digitIndex >= digits.length ) {\r\n\t\t\t\tlet hexPart = parseInt( hex[ i ], 16 );\r\n\t\t\t\tif( isNaN( hexPart ) ) {\r\n\t\t\t\t\thexPart = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdigits = padL( hexPart.toString( 2 ), 4, \"0\" );\r\n\t\t\t\ti += 1;\r\n\t\t\t\tdigitIndex = 0;\r\n\t\t\t}\r\n\t\t\tdata[ y ].push( parseInt( digits[ digitIndex ] ) );\r\n\t\t\tdigitIndex += 1;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n * Convert 2D data array to hex string\r\n * \r\n * @param {Array<Array<number>>} data - 2D array of binary data\r\n * @returns {string} Hex string\r\n */\r\nexport function dataToHex( data ) {\r\n\tlet hex = \"\";\r\n\tlet digits = \"\";\r\n\r\n\tfor( let y = 0; y < data.length; y++ ) {\r\n\t\tfor( let x = 0; x < data[ y ].length; x++ ) {\r\n\t\t\tdigits += data[ y ][ x ];\r\n\t\t\tif( digits.length === 4 ) {\r\n\t\t\t\thex += parseInt( digits, 2 ).toString( 16 );\r\n\t\t\t\tdigits = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn hex;\r\n}\r\n\r\n// Math utilities\r\n\r\n/**\r\n * Clamp a number between min and max\r\n * \r\n * @param {number} num - Number to clamp\r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Clamped value\r\n */\r\nexport function clamp( num, min, max ) {\r\n\treturn Math.min( Math.max( num, min ), max );\r\n}\r\n\r\n/**\r\n * Check if a point is in a rectangle\r\n * \r\n * @param {Object} point - Point with x, y properties\r\n * @param {Object} hitBox - Rectangle with x, y, width, height properties\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange( point, hitBox ) {\r\n\treturn point.x >= hitBox.x && point.x < hitBox.x + hitBox.width &&\r\n\t\tpoint.y >= hitBox.y && point.y < hitBox.y + hitBox.height;\r\n}\r\n\r\n/**\r\n * Check if coordinates are in a rectangle\r\n * \r\n * @param {number} x1 - Point x\r\n * @param {number} y1 - Point y\r\n * @param {number} x2 - Rectangle x\r\n * @param {number} y2 - Rectangle y\r\n * @param {number} width - Rectangle width\r\n * @param {number} height - Rectangle height\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange2( x1, y1, x2, y2, width, height ) {\r\n\treturn x1 >= x2 && x1 < x2 + width &&\r\n\t\ty1 >= y2 && y1 < y2 + height;\r\n}\r\n\r\n/**\r\n * Generate random number in range\r\n * \r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Random number between min and max\r\n */\r\nexport function rndRange( min, max ) {\r\n\treturn Math.random() * ( max - min ) + min;\r\n}\r\n\r\n/**\r\n * Convert degrees to radians\r\n * \r\n * @param {number} deg - Degrees\r\n * @returns {number} Radians\r\n */\r\nexport function degreesToRadian( deg ) {\r\n\treturn deg * ( Math.PI / 180 );\r\n}\r\n\r\n/**\r\n * Convert radians to degrees\r\n * \r\n * @param {number} rad - Radians\r\n * @returns {number} Degrees\r\n */\r\nexport function radiansToDegrees( rad ) {\r\n\treturn rad * ( 180 / Math.PI );\r\n}\r\n\r\n// String utilities\r\n\r\n/**\r\n * Pad string on left\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padL( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tlet pad = \"\";\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tpad += c;\r\n\t}\r\n\treturn pad + str;\r\n}\r\n\r\n/**\r\n * Pad string on right\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padR( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tstr += c;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * Pad string on both sides\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function pad( str, len, c ) {\r\n\tif( typeof c !== \"string\" || c.length === 0 ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\twhile( str.length < len ) {\r\n\t\tstr = c + str + c;\r\n\t}\r\n\tif( str.length > len ) {\r\n\t\tstr = str.substr( 0, len );\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// Object utilities\r\n\r\n/**\r\n * Copy properties from source to destination\r\n * \r\n * @param {Object} dest - Destination object\r\n * @param {Object} src - Source object\r\n */\r\nexport function copyProperties( dest, src ) {\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tdest[ prop ] = src[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Convert object to array\r\n * \r\n * @param {Object} src - Source object\r\n * @returns {Array} Array of values\r\n */\r\nexport function convertToArray( src ) {\r\n\tconst arr = [];\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tarr.push( src[ prop ] );\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n/**\r\n * Delete all properties from object\r\n * \r\n * @param {Object} obj - Object to clear\r\n */\r\nexport function deleteProperties( obj ) {\r\n\tfor( const prop in obj ) {\r\n\t\tif( obj.hasOwnProperty( prop ) ) {\r\n\t\t\tdelete obj[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Window utilities\r\n\r\n/**\r\n * Get window size\r\n * \r\n * @returns {Object} Object with width and height\r\n */\r\nexport function getWindowSize() {\r\n\tconst width = window.innerWidth || document.documentElement.clientWidth ||\r\n\t\tdocument.body.clientWidth;\r\n\r\n\tconst height = window.innerHeight || document.documentElement.clientHeight ||\r\n\t\tdocument.body.clientHeight;\r\n\r\n\treturn { \"width\": width, \"height\": height };\r\n}\r\n\r\n// Search utilities\r\n\r\n/**\r\n * Binary search in sorted array\r\n * \r\n * @param {Array} data - Sorted array\r\n * @param {*} search - Value to search for\r\n * @param {Function} compareFn - Comparison function\r\n * @returns {number} Index of found element or negative insertion point\r\n */\r\nexport function binarySearch( data, search, compareFn ) {\r\n\tlet m = 0;\r\n\tlet n = data.length - 1;\r\n\r\n\twhile( m <= n ) {\r\n\t\tconst k = ( n + m ) >> 1;\r\n\t\tconst result = compareFn( search, data[ k ], k );\r\n\t\tif( result > 0 ) {\r\n\t\t\tm = k + 1;\r\n\t\t} else if( result < 0 ) {\r\n\t\t\tn = k - 1;\r\n\t\t} else {\r\n\t\t\treturn k;\r\n\t\t}\r\n\t}\r\n\treturn -m - 1;\r\n}\r\n\r\n/**\r\n * Parse integer with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed integer or default\r\n */\r\nexport function getInt( val, def ) {\r\n\tval = parseInt( val );\r\n\tif( isNaN( val ) ) {\r\n\t\tval = def;\r\n\t}\r\n\treturn val;\r\n}\r\n\r\n// Common math constants\r\nexport const math = Object.freeze( {\r\n\t\"deg30\": Math.PI / 6,\r\n\t\"deg45\": Math.PI / 4,\r\n\t\"deg60\": Math.PI / 3,\r\n\t\"deg90\": Math.PI / 2,\r\n\t\"deg120\": ( 2 * Math.PI ) / 3,\r\n\t\"deg135\": ( 3 * Math.PI ) / 4,\r\n\t\"deg150\": ( 5 * Math.PI ) / 6,\r\n\t\"deg180\": Math.PI,\r\n\t\"deg210\": ( 7 * Math.PI ) / 6,\r\n\t\"deg225\": ( 5 * Math.PI ) / 4,\r\n\t\"deg240\": ( 4 * Math.PI ) / 3,\r\n\t\"deg270\": ( 3 * Math.PI ) / 2,\r\n\t\"deg300\": ( 5 * Math.PI ) / 3,\r\n\t\"deg315\": ( 7 * Math.PI ) / 4,\r\n\t\"deg330\": ( 11 * Math.PI ) / 6,\r\n\t\"deg360\": Math.PI * 2\r\n} );\r\n\r\n// Queue microtask (built-in in modern browsers)\r\nexport const queueMicrotask = window.queueMicrotask || \r\n\t( ( callback ) => setTimeout( callback, 0 ) );\r\n\r\n", "/**\r\n * Pi.js - Main Entry Point\r\n * \r\n * Graphics and sound library for retro-style games and demos.\r\n * Modernized architecture with legacy API compatibility.\r\n * \r\n * @module pi.js\r\n * @author Andy Stubbs\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { piData } from \"./core/pi-data.js\";\r\nimport { addCommand, processCommands } from \"./core/command-system.js\";\r\nimport * as utils from \"./modules/utils.js\";\r\n\r\n// Version injected during build from package.json\r\nconst VERSION = \"2.0.0-alpha.1\";\r\n\r\n// Create the pi object with _ (internal) and util namespaces\r\nconst pi = {\r\n\t\"version\": VERSION,\r\n\t\"_\": {\r\n\t\t\"data\": piData\r\n\t},\r\n\t\"util\": utils\r\n};\r\n\r\n// Export for different module systems\r\nif( typeof window !== \"undefined\" ) {\r\n\twindow.pi = pi;\r\n}\r\n\r\nexport default pi;\r\nexport { pi };\r\n"],
  "mappings": "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",
  "names": ["ErrorMode", "currentErrorMode", "logError", "msg", "currentErrorMode", "ErrorMode", "piData", "logError", "utils_exports", "__export", "binarySearch", "cToHex", "canAddEventListeners", "checkColor", "clamp", "colorStringToColor", "colorStringToHex", "compareColors", "convertToArray", "convertToColor", "copyProperties", "dataToHex", "degreesToRadian", "deleteProperties", "getInt", "getWindowSize", "hexToColor", "hexToData", "inRange", "inRange2", "isArray", "isDomElement", "isFunction", "isInteger", "math", "pad", "padL", "padR", "queueMicrotask", "radiansToDegrees", "rgbToColor", "rgbToHex", "rndRange", "fn", "el", "hex", "r", "g", "b", "a", "s2", "c", "colorStr", "context", "data", "splitRgb", "s", "parts", "colors", "i", "val", "color", "rgbParts", "strColor", "color1", "color2", "width", "height", "digits", "digitIndex", "y", "x", "hexPart", "num", "min", "max", "point", "hitBox", "x1", "y1", "x2", "y2", "deg", "rad", "str", "len", "dest", "src", "prop", "arr", "obj", "search", "compareFn", "m", "n", "k", "result", "def", "callback", "VERSION", "pi", "piData", "utils_exports", "index_default"]
}
