{
  "version": 3,
  "sources": ["../../src/index.js", "../../src/core/pi-data.js", "../../src/modules/utils.js", "../../src/core/command-system.js", "../../src/modules/core-commands.js"],
  "sourcesContent": ["/**\r\n * Pi.js - Main Entry Point\r\n * \r\n * Graphics and sound library for retro-style games and demos.\r\n * Modernized architecture with legacy API compatibility.\r\n * \r\n * @module pi.js\r\n * @author Andy Stubbs\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { piData } from \"./core/pi-data.js\";\r\nimport * as cmd from \"./core/command-system.js\";\r\nimport * as utils from \"./modules/utils.js\";\r\nimport * as core from \"./modules/core-commands.js\";\r\n\r\n// Version injected during build from package.json\r\nconst VERSION = \"2.0.0-alpha.1\";\r\n\r\n// Ready system variables\r\nlet waitCount = 0;\r\nlet waiting = false;\r\nconst readyList = [];\r\nlet startReadyListTimeout = 0;\r\n\r\n// Ready/Wait/Resume system functions\r\n\r\nfunction wait() {\r\n\twaitCount++;\r\n\twaiting = true;\r\n}\r\n\r\nfunction resume() {\r\n\twaitCount--;\r\n\tif( waitCount === 0 ) {\r\n\t\tstartReadyList();\r\n\t}\r\n}\r\n\r\nfunction startReadyList() {\r\n\tif( document.readyState !== \"loading\" && waitCount === 0 ) {\r\n\t\twaiting = false;\r\n\t\tconst temp = readyList.slice();\r\n\t\treadyList.length = 0;\r\n\r\n\t\tfor( const fn of temp ) {\r\n\t\t\tfn();\r\n\t\t}\r\n\t} else {\r\n\t\tclearTimeout( startReadyListTimeout );\r\n\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t}\r\n}\r\n\r\n// Create the pi object with _ (internal API for plugins) and util namespaces\r\nconst pi = {\r\n\t\"version\": VERSION,\r\n\t\"_\": {\r\n\t\t\"data\": piData,\r\n\t\t\"addCommand\": cmd.addCommand,\r\n\t\t\"addCommands\": cmd.addCommands,\r\n\t\t\"addSetting\": cmd.addSetting,\r\n\t\t\"addPen\": cmd.addPen,\r\n\t\t\"addBlendCommand\": cmd.addBlendCommand,\r\n\t\t\"parseOptions\": cmd.parseOptions,\r\n\t\t\"wait\": wait,\r\n\t\t\"resume\": resume\r\n\t},\r\n\t\"util\": utils\r\n};\r\n\r\n// Register the ready command\r\ncmd.addCommand( \"ready\", ready, false, false, [ \"fn\" ] );\r\n\r\nfunction ready( args ) {\r\n\tconst fn = args[ 0 ];\r\n\r\n\tif( utils.isFunction( fn ) ) {\r\n\t\tif( waiting ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t} else if( document.readyState === \"loading\" ) {\r\n\t\t\treadyList.push( fn );\r\n\t\t\tclearTimeout( startReadyListTimeout );\r\n\t\t\tstartReadyListTimeout = setTimeout( startReadyList, 10 );\r\n\t\t} else {\r\n\t\t\tfn();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Initialize core commands\r\ncore.init( pi );\r\n\r\n// Process all commands and create API methods\r\ncmd.processCommands( pi );\r\n\r\n// Export for different module systems\r\nif( typeof window !== \"undefined\" ) {\r\n\twindow.pi = pi;\r\n\t\r\n\t// Set $ alias only if not already defined (avoid jQuery conflicts)\r\n\tif( window.$ === undefined ) {\r\n\t\twindow.$ = pi;\r\n\t}\r\n}\r\n\r\nexport default pi;\r\nexport { pi };\r\n", "/**\r\n * Pi.js - Core Data Module\r\n * \r\n * Central data storage for Pi.js, equivalent to legacy m_piData.\r\n * \r\n * @module core/pi-data\r\n */\r\n\r\n// Central Pi.js data storage\r\nexport const piData = {\r\n\t\"nextScreenId\": 0,\r\n\t\"screens\": {},\r\n\t\"activeScreen\": null,\r\n\t\"images\": {},\r\n\t\"imageCount\": 0,\r\n\t\"defaultPrompt\": String.fromCharCode( 219 ),\r\n\t\"defaultFont\": {},\r\n\t\"nextFontId\": 0,\r\n\t\"fonts\": {},\r\n\t\"defaultPalette\": [],\r\n\t\"defaultColor\": 7,\r\n\t\"commands\": {},\r\n\t\"screenCommands\": {},\r\n\t\"defaultPenDraw\": null,\r\n\t\"pens\": {},\r\n\t\"penList\": [],\r\n\t\"blendCommands\": {},\r\n\t\"blendCommandsList\": [],\r\n\t\"defaultBlendCmd\": null,\r\n\t\"settings\": {},\r\n\t\"settingsList\": [],\r\n\t\"volume\": 0.75,\r\n\t\"isTouchScreen\": false,\r\n\t\"defaultInputFocus\": typeof window !== \"undefined\" ? window : null\r\n};\r\n\r\n// Command list for processCommands\r\nexport const commandList = [];\r\n\r\n// Ready system\r\nexport let waitCount = 0;\r\nexport let waiting = false;\r\nexport const readyList = [];\r\nexport let startReadyListTimeout = 0;\r\n\r\nexport function setWaitCount( count ) {\r\n\twaitCount = count;\r\n}\r\n\r\nexport function setWaiting( state ) {\r\n\twaiting = state;\r\n}\r\n\r\nexport function setStartReadyListTimeout( timeout ) {\r\n\tstartReadyListTimeout = timeout;\r\n}\r\n\r\n", "/**\r\n * Pi.js - Utilities Module\r\n * \r\n * Common utility functions for math, colors, types, and data manipulation.\r\n * \r\n * @module modules/utils\r\n */\r\n\r\n// Type checking utilities\r\nexport const isFunction = ( fn ) => typeof fn === \"function\";\r\nexport const isDomElement = ( el ) => el instanceof Element;\r\nexport const isArray = Array.isArray;\r\nexport const isInteger = Number.isInteger;\r\nexport const canAddEventListeners = ( el ) => {\r\n\treturn typeof el.addEventListener === \"function\" && \r\n\t\ttypeof el.removeEventListener === \"function\";\r\n};\r\n\r\n// Color conversion utilities\r\n\r\n/**\r\n * Convert hex color to color object\r\n * \r\n * @param {string} hex - Hex color string (#RGB, #RRGGBB, or #RRGGBBAA)\r\n * @returns {Object} Color object with r, g, b, a, s, s2 properties\r\n */\r\nexport function hexToColor( hex ) {\r\n\tlet r, g, b, a, s2;\r\n\ts2 = hex;\r\n\r\n\tif( hex.length === 4 ) {\r\n\t\tr = parseInt( hex.slice( 1, 2 ), 16 ) * 16 - 1;\r\n\t\tg = parseInt( hex.slice( 2, 3 ), 16 ) * 16 - 1;\r\n\t\tb = parseInt( hex.slice( 3, 4 ), 16 ) * 16 - 1;\r\n\t} else {\r\n\t\tr = parseInt( hex.slice( 1, 3 ), 16 );\r\n\t\tg = parseInt( hex.slice( 3, 5 ), 16 );\r\n\t\tb = parseInt( hex.slice( 5, 7 ), 16 );\r\n\t}\r\n\r\n\tif( hex.length === 9 ) {\r\n\t\ts2 = hex.slice( 0, 7 );\r\n\t\ta = parseInt( hex.slice( 7, 9 ), 16 );\r\n\t} else {\r\n\t\ta = 255;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"r\": r,\r\n\t\t\"g\": g,\r\n\t\t\"b\": b,\r\n\t\t\"a\": a,\r\n\t\t\"s\": `rgba(${r},${g},${b},${Math.round( a / 255 * 1000 ) / 1000})`,\r\n\t\t\"s2\": s2\r\n\t};\r\n}\r\n\r\n/**\r\n * Convert color component to hex\r\n * \r\n * @param {number} c - Color component (0-255)\r\n * @returns {string} Hex string\r\n */\r\nexport function cToHex( c ) {\r\n\tif( !isInteger( c ) ) {\r\n\t\tc = Math.round( c );\r\n\t}\r\n\tc = clamp( c, 0, 255 );\r\n\tconst hex = Number( c ).toString( 16 );\r\n\treturn hex.length < 2 ? \"0\" + hex : hex.toUpperCase();\r\n}\r\n\r\n/**\r\n * Convert RGB to hex color\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255), defaults to 255\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex( r, g, b, a ) {\r\n\tif( isNaN( a ) ) {\r\n\t\ta = 255;\r\n\t}\r\n\treturn \"#\" + cToHex( r ) + cToHex( g ) + cToHex( b ) + cToHex( a );\r\n}\r\n\r\n/**\r\n * Convert RGB to color object\r\n * \r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @param {number} a - Alpha component (0-255)\r\n * @returns {Object} Color object\r\n */\r\nexport function rgbToColor( r, g, b, a ) {\r\n\treturn hexToColor( rgbToHex( r, g, b, a ) );\r\n}\r\n\r\n/**\r\n * Convert color string to color object using canvas\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {Object} Color object\r\n */\r\nexport function colorStringToColor( colorStr ) {\r\n\tconst canvas = document.createElement( \"canvas\" );\r\n\tconst context = canvas.getContext( \"2d\", { \"willReadFrequently\": true } );\r\n\tcontext.fillStyle = colorStr;\r\n\tcontext.fillRect( 0, 0, 1, 1 );\r\n\tconst data = context.getImageData( 0, 0, 1, 1 ).data;\r\n\treturn rgbToColor( data[ 0 ], data[ 1 ], data[ 2 ], data[ 3 ] );\r\n}\r\n\r\n/**\r\n * Convert color string to hex\r\n * \r\n * @param {string} colorStr - CSS color string\r\n * @returns {string} Hex color string\r\n */\r\nexport function colorStringToHex( colorStr ) {\r\n\treturn colorStringToColor( colorStr ).s2;\r\n}\r\n\r\n/**\r\n * Split RGB/RGBA string into components\r\n * \r\n * @param {string} s - RGB or RGBA string\r\n * @returns {Array<number>} Array of color components\r\n */\r\nfunction splitRgb( s ) {\r\n\ts = s.slice( s.indexOf( \"(\" ) + 1, s.indexOf( \")\" ) );\r\n\tconst parts = s.split( \",\" );\r\n\tconst colors = [];\r\n\tfor( let i = 0; i < parts.length; i++ ) {\r\n\t\tlet val;\r\n\t\tif( i === 3 ) {\r\n\t\t\tval = parseFloat( parts[ i ].trim() ) * 255;\r\n\t\t} else {\r\n\t\t\tval = parseInt( parts[ i ].trim() );\r\n\t\t}\r\n\t\tcolors.push( val );\r\n\t}\r\n\treturn colors;\r\n}\r\n\r\n/**\r\n * Convert various color formats to color object\r\n * \r\n * @param {*} color - Color in various formats\r\n * @returns {Object|null} Color object or null if invalid\r\n */\r\nexport function convertToColor( color ) {\r\n\tif( color === undefined ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Array format [r, g, b, a]\r\n\tif( isArray( color ) && color.length > 2 ) {\r\n\t\treturn rgbToColor( color[ 0 ], color[ 1 ], color[ 2 ], color[ 3 ] );\r\n\t}\r\n\r\n\t// Object format {r, g, b, a}\r\n\tif(\r\n\t\tisInteger( color?.r ) &&\r\n\t\tisInteger( color?.g ) &&\r\n\t\tisInteger( color?.b )\r\n\t) {\r\n\t\treturn rgbToColor( color.r, color.g, color.b, color.a );\r\n\t}\r\n\r\n\tif( typeof color !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Hex format\r\n\tconst checkHexColor = /(^#[0-9A-F]{8}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\r\n\tif( checkHexColor.test( color ) ) {\r\n\t\treturn hexToColor( color );\r\n\t}\r\n\r\n\t// RGB/RGBA format\r\n\tif( color.indexOf( \"rgb\" ) === 0 ) {\r\n\t\tconst rgbParts = splitRgb( color );\r\n\t\tif( rgbParts.length < 3 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn rgbToColor( rgbParts[ 0 ], rgbParts[ 1 ], rgbParts[ 2 ], rgbParts[ 3 ] );\r\n\t}\r\n\r\n\t// Named color or other CSS color\r\n\treturn colorStringToColor( color );\r\n}\r\n\r\n/**\r\n * Check if a color string is valid\r\n * \r\n * @param {string} strColor - Color string to check\r\n * @returns {boolean} True if valid\r\n */\r\nexport function checkColor( strColor ) {\r\n\tconst s = new Option().style;\r\n\ts.color = strColor;\r\n\treturn s.color !== \"\";\r\n}\r\n\r\n/**\r\n * Compare two color objects\r\n * \r\n * @param {Object} color1 - First color\r\n * @param {Object} color2 - Second color\r\n * @returns {boolean} True if colors are equal\r\n */\r\nexport function compareColors( color1, color2 ) {\r\n\treturn color1.r === color2.r &&\r\n\t\tcolor1.g === color2.g &&\r\n\t\tcolor1.b === color2.b &&\r\n\t\tcolor1.a === color2.a;\r\n}\r\n\r\n// Data conversion utilities\r\n\r\n/**\r\n * Convert hex string to 2D data array\r\n * \r\n * @param {string} hex - Hex string\r\n * @param {number} width - Width of data\r\n * @param {number} height - Height of data\r\n * @returns {Array<Array<number>>} 2D array of binary data\r\n */\r\nexport function hexToData( hex, width, height ) {\r\n\thex = hex.toUpperCase();\r\n\tconst data = [];\r\n\tlet i = 0;\r\n\tlet digits = \"\";\r\n\tlet digitIndex = 0;\r\n\r\n\tfor( let y = 0; y < height; y++ ) {\r\n\t\tdata.push( [] );\r\n\t\tfor( let x = 0; x < width; x++ ) {\r\n\t\t\tif( digitIndex >= digits.length ) {\r\n\t\t\t\tlet hexPart = parseInt( hex[ i ], 16 );\r\n\t\t\t\tif( isNaN( hexPart ) ) {\r\n\t\t\t\t\thexPart = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdigits = padL( hexPart.toString( 2 ), 4, \"0\" );\r\n\t\t\t\ti += 1;\r\n\t\t\t\tdigitIndex = 0;\r\n\t\t\t}\r\n\t\t\tdata[ y ].push( parseInt( digits[ digitIndex ] ) );\r\n\t\t\tdigitIndex += 1;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n * Convert 2D data array to hex string\r\n * \r\n * @param {Array<Array<number>>} data - 2D array of binary data\r\n * @returns {string} Hex string\r\n */\r\nexport function dataToHex( data ) {\r\n\tlet hex = \"\";\r\n\tlet digits = \"\";\r\n\r\n\tfor( let y = 0; y < data.length; y++ ) {\r\n\t\tfor( let x = 0; x < data[ y ].length; x++ ) {\r\n\t\t\tdigits += data[ y ][ x ];\r\n\t\t\tif( digits.length === 4 ) {\r\n\t\t\t\thex += parseInt( digits, 2 ).toString( 16 );\r\n\t\t\t\tdigits = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn hex;\r\n}\r\n\r\n// Math utilities\r\n\r\n/**\r\n * Clamp a number between min and max\r\n * \r\n * @param {number} num - Number to clamp\r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Clamped value\r\n */\r\nexport function clamp( num, min, max ) {\r\n\treturn Math.min( Math.max( num, min ), max );\r\n}\r\n\r\n/**\r\n * Check if a point is in a rectangle\r\n * \r\n * @param {Object} point - Point with x, y properties\r\n * @param {Object} hitBox - Rectangle with x, y, width, height properties\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange( point, hitBox ) {\r\n\treturn point.x >= hitBox.x && point.x < hitBox.x + hitBox.width &&\r\n\t\tpoint.y >= hitBox.y && point.y < hitBox.y + hitBox.height;\r\n}\r\n\r\n/**\r\n * Check if coordinates are in a rectangle\r\n * \r\n * @param {number} x1 - Point x\r\n * @param {number} y1 - Point y\r\n * @param {number} x2 - Rectangle x\r\n * @param {number} y2 - Rectangle y\r\n * @param {number} width - Rectangle width\r\n * @param {number} height - Rectangle height\r\n * @returns {boolean} True if point is inside rectangle\r\n */\r\nexport function inRange2( x1, y1, x2, y2, width, height ) {\r\n\treturn x1 >= x2 && x1 < x2 + width &&\r\n\t\ty1 >= y2 && y1 < y2 + height;\r\n}\r\n\r\n/**\r\n * Generate random number in range\r\n * \r\n * @param {number} min - Minimum value\r\n * @param {number} max - Maximum value\r\n * @returns {number} Random number between min and max\r\n */\r\nexport function rndRange( min, max ) {\r\n\treturn Math.random() * ( max - min ) + min;\r\n}\r\n\r\n/**\r\n * Convert degrees to radians\r\n * \r\n * @param {number} deg - Degrees\r\n * @returns {number} Radians\r\n */\r\nexport function degreesToRadian( deg ) {\r\n\treturn deg * ( Math.PI / 180 );\r\n}\r\n\r\n/**\r\n * Convert radians to degrees\r\n * \r\n * @param {number} rad - Radians\r\n * @returns {number} Degrees\r\n */\r\nexport function radiansToDegrees( rad ) {\r\n\treturn rad * ( 180 / Math.PI );\r\n}\r\n\r\n// String utilities\r\n\r\n/**\r\n * Pad string on left\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padL( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tlet pad = \"\";\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tpad += c;\r\n\t}\r\n\treturn pad + str;\r\n}\r\n\r\n/**\r\n * Pad string on right\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function padR( str, len, c ) {\r\n\tif( typeof c !== \"string\" ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\tfor( let i = str.length; i < len; i++ ) {\r\n\t\tstr += c;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * Pad string on both sides\r\n * \r\n * @param {string} str - String to pad\r\n * @param {number} len - Target length\r\n * @param {string} c - Padding character\r\n * @returns {string} Padded string\r\n */\r\nexport function pad( str, len, c ) {\r\n\tif( typeof c !== \"string\" || c.length === 0 ) {\r\n\t\tc = \" \";\r\n\t}\r\n\tstr = str + \"\";\r\n\twhile( str.length < len ) {\r\n\t\tstr = c + str + c;\r\n\t}\r\n\tif( str.length > len ) {\r\n\t\tstr = str.substr( 0, len );\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// Object utilities\r\n\r\n/**\r\n * Copy properties from source to destination\r\n * \r\n * @param {Object} dest - Destination object\r\n * @param {Object} src - Source object\r\n */\r\nexport function copyProperties( dest, src ) {\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tdest[ prop ] = src[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Convert object to array\r\n * \r\n * @param {Object} src - Source object\r\n * @returns {Array} Array of values\r\n */\r\nexport function convertToArray( src ) {\r\n\tconst arr = [];\r\n\tfor( const prop in src ) {\r\n\t\tif( src.hasOwnProperty( prop ) ) {\r\n\t\t\tarr.push( src[ prop ] );\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n/**\r\n * Delete all properties from object\r\n * \r\n * @param {Object} obj - Object to clear\r\n */\r\nexport function deleteProperties( obj ) {\r\n\tfor( const prop in obj ) {\r\n\t\tif( obj.hasOwnProperty( prop ) ) {\r\n\t\t\tdelete obj[ prop ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Window utilities\r\n\r\n/**\r\n * Get window size\r\n * \r\n * @returns {Object} Object with width and height\r\n */\r\nexport function getWindowSize() {\r\n\tconst width = window.innerWidth || document.documentElement.clientWidth ||\r\n\t\tdocument.body.clientWidth;\r\n\r\n\tconst height = window.innerHeight || document.documentElement.clientHeight ||\r\n\t\tdocument.body.clientHeight;\r\n\r\n\treturn { \"width\": width, \"height\": height };\r\n}\r\n\r\n// Search utilities\r\n\r\n/**\r\n * Binary search in sorted array\r\n * \r\n * @param {Array} data - Sorted array\r\n * @param {*} search - Value to search for\r\n * @param {Function} compareFn - Comparison function\r\n * @returns {number} Index of found element or negative insertion point\r\n */\r\nexport function binarySearch( data, search, compareFn ) {\r\n\tlet m = 0;\r\n\tlet n = data.length - 1;\r\n\r\n\twhile( m <= n ) {\r\n\t\tconst k = ( n + m ) >> 1;\r\n\t\tconst result = compareFn( search, data[ k ], k );\r\n\t\tif( result > 0 ) {\r\n\t\t\tm = k + 1;\r\n\t\t} else if( result < 0 ) {\r\n\t\t\tn = k - 1;\r\n\t\t} else {\r\n\t\t\treturn k;\r\n\t\t}\r\n\t}\r\n\treturn -m - 1;\r\n}\r\n\r\n/**\r\n * Parse integer with default value\r\n * \r\n * @param {*} val - Value to parse\r\n * @param {number} def - Default value if parsing fails\r\n * @returns {number} Parsed integer or default\r\n */\r\nexport function getInt( val, def ) {\r\n\tval = parseInt( val );\r\n\tif( isNaN( val ) ) {\r\n\t\tval = def;\r\n\t}\r\n\treturn val;\r\n}\r\n\r\n// Common math constants\r\nexport const math = Object.freeze( {\r\n\t\"deg30\": Math.PI / 6,\r\n\t\"deg45\": Math.PI / 4,\r\n\t\"deg60\": Math.PI / 3,\r\n\t\"deg90\": Math.PI / 2,\r\n\t\"deg120\": ( 2 * Math.PI ) / 3,\r\n\t\"deg135\": ( 3 * Math.PI ) / 4,\r\n\t\"deg150\": ( 5 * Math.PI ) / 6,\r\n\t\"deg180\": Math.PI,\r\n\t\"deg210\": ( 7 * Math.PI ) / 6,\r\n\t\"deg225\": ( 5 * Math.PI ) / 4,\r\n\t\"deg240\": ( 4 * Math.PI ) / 3,\r\n\t\"deg270\": ( 3 * Math.PI ) / 2,\r\n\t\"deg300\": ( 5 * Math.PI ) / 3,\r\n\t\"deg315\": ( 7 * Math.PI ) / 4,\r\n\t\"deg330\": ( 11 * Math.PI ) / 6,\r\n\t\"deg360\": Math.PI * 2\r\n} );\r\n\r\n// Queue microtask (built-in in modern browsers)\r\nexport const queueMicrotask = window.queueMicrotask || \r\n\t( ( callback ) => setTimeout( callback, 0 ) );\r\n\r\n", "/**\r\n * Pi.js - Command System Module\r\n * \r\n * Command registration and processing, matching legacy API pattern.\r\n * \r\n * @module core/command-system\r\n */\r\n\r\nimport { piData, commandList } from \"./pi-data.js\";\r\nimport * as utils from \"../modules/utils.js\";\r\n\r\n/**\r\n * Add a command to the system\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fn - Command function\r\n * @param {boolean} isInternal - If true, not exposed in API\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n * @param {boolean} isSet - If true, this is a setting\r\n */\r\nexport function addCommand( name, fn, isInternal, isScreen, parameters, isSet ) {\r\n\tpiData.commands[ name ] = fn;\r\n\r\n\tif( !isInternal ) {\r\n\t\tcommandList.push( {\r\n\t\t\t\"name\": name,\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"isScreen\": isScreen,\r\n\t\t\t\"parameters\": parameters || [],\r\n\t\t\t\"isSet\": isSet,\r\n\t\t\t\"noParse\": isSet\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a command with dual pixel/anti-aliased implementations\r\n * \r\n * @param {string} name - Command name\r\n * @param {Function} fnPx - Pixel mode implementation\r\n * @param {Function} fnAa - Anti-aliased mode implementation\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addCommands( name, fnPx, fnAa, parameters ) {\r\n\taddCommand( name, function( screenData, args ) {\r\n\t\tif( screenData.pixelMode ) {\r\n\t\t\tfnPx( screenData, args );\r\n\t\t} else {\r\n\t\t\tfnAa( screenData, args );\r\n\t\t}\r\n\t}, false, true, parameters );\r\n}\r\n\r\n/**\r\n * Add a setting\r\n * \r\n * @param {string} name - Setting name\r\n * @param {Function} fn - Setting function\r\n * @param {boolean} isScreen - If true, requires screen context\r\n * @param {Array} parameters - Parameter names\r\n */\r\nexport function addSetting( name, fn, isScreen, parameters ) {\r\n\tpiData.settings[ name ] = {\r\n\t\t\"name\": name,\r\n\t\t\"fn\": fn,\r\n\t\t\"isScreen\": isScreen,\r\n\t\t\"parameters\": parameters || []\r\n\t};\r\n\tpiData.settingsList.push( name );\r\n}\r\n\r\n/**\r\n * Parse options - converts object notation to array or passes through array\r\n * \r\n * @param {Object} cmd - Command definition\r\n * @param {Array} args - Arguments passed to command\r\n * @returns {Array} Parsed arguments\r\n */\r\nexport function parseOptions( cmd, args ) {\r\n\tif( cmd.noParse ) {\r\n\t\treturn args;\r\n\t}\r\n\r\n\t// If first argument is an object, convert to array based on parameter names\r\n\tif(\r\n\t\targs.length > 0 &&\r\n\t\ttypeof args[ 0 ] === \"object\" &&\r\n\t\targs[ 0 ] !== null &&\r\n\t\t!args[ 0 ].hasOwnProperty( \"screen\" ) &&\r\n\t\t!utils.isArray( args[ 0 ] ) &&\r\n\t\t!utils.isDomElement( args[ 0 ] )\r\n\t) {\r\n\t\tconst options = args[ 0 ];\r\n\t\tconst args2 = [];\r\n\t\tlet foundParameter = false;\r\n\r\n\t\tfor( let i = 0; i < cmd.parameters.length; i++ ) {\r\n\t\t\tif( options.hasOwnProperty( cmd.parameters[ i ] ) ) {\r\n\t\t\t\targs2.push( options[ cmd.parameters[ i ] ] );\r\n\t\t\t\tfoundParameter = true;\r\n\t\t\t} else {\r\n\t\t\t\targs2.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( foundParameter ) {\r\n\t\t\treturn args2;\r\n\t\t}\r\n\t}\r\n\r\n\treturn args;\r\n}\r\n\r\n/**\r\n * Add a pen drawing mode\r\n * \r\n * @param {string} name - Pen name\r\n * @param {Function} fn - Pen function\r\n * @param {string} cap - Line cap style\r\n */\r\nexport function addPen( name, fn, cap ) {\r\n\tpiData.penList.push( name );\r\n\tpiData.pens[ name ] = {\r\n\t\t\"cmd\": fn,\r\n\t\t\"cap\": cap\r\n\t};\r\n}\r\n\r\n/**\r\n * Add a blend command\r\n * \r\n * @param {string} name - Blend mode name\r\n * @param {Function} fn - Blend function\r\n */\r\nexport function addBlendCommand( name, fn ) {\r\n\tpiData.blendCommandsList.push( name );\r\n\tpiData.blendCommands[ name ] = fn;\r\n}\r\n\r\n/**\r\n * Process commands and create API methods\r\n * \r\n * @param {Object} api - API object to add methods to\r\n */\r\nexport function processCommands( api ) {\r\n\t// Alphabetize commands\r\n\tcommandList.sort( ( a, b ) => {\r\n\t\tconst nameA = a.name.toUpperCase();\r\n\t\tconst nameB = b.name.toUpperCase();\r\n\t\tif( nameA < nameB ) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif( nameA > nameB ) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t} );\r\n\r\n\tfor( const cmd of commandList ) {\r\n\t\tprocessCommand( api, cmd );\r\n\t}\r\n}\r\n\r\n/**\r\n * Process a single command and add to API\r\n * \r\n * @param {Object} api - API object\r\n * @param {Object} cmd - Command definition\r\n */\r\nfunction processCommand( api, cmd ) {\r\n\tif( cmd.isSet ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( null, parsedArgs );\r\n\t\t};\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( cmd.isScreen ) {\r\n\t\tpiData.screenCommands[ cmd.name ] = cmd;\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\tconst screenData = getScreenData( undefined, cmd.name );\r\n\t\t\tif( screenData !== false ) {\r\n\t\t\t\treturn piData.commands[ cmd.name ]( screenData, parsedArgs );\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tapi[ cmd.name ] = function( ...args ) {\r\n\t\t\tconst parsedArgs = parseOptions( cmd, args );\r\n\t\t\treturn piData.commands[ cmd.name ]( parsedArgs );\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Get screen data for command execution\r\n * \r\n * @param {number|undefined} screenId - Screen ID or undefined for active screen\r\n * @param {string} commandName - Command name for error messages\r\n * @returns {Object|boolean} Screen data or false\r\n */\r\nexport function getScreenData( screenId, commandName ) {\r\n\tif( piData.activeScreen === null ) {\r\n\t\tif( commandName === \"set\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use native Error for missing screen\r\n\t\tconst error = new Error( `${commandName}: No screens available for command.` );\r\n\t\terror.code = \"NO_SCREEN\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tif( screenId === undefined || screenId === null ) {\r\n\t\tscreenId = piData.activeScreen.id;\r\n\t}\r\n\r\n\tif( utils.isInteger( screenId ) && !piData.screens[ screenId ] ) {\r\n\t\t// Use native Error for invalid screen ID\r\n\t\tconst error = new Error( `${commandName}: Invalid screen id.` );\r\n\t\terror.code = \"INVALID_SCREEN_ID\";\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn piData.screens[ screenId ];\r\n}\r\n\r\n", "/**\n * Pi.js - Core Commands Module\n * \n * Core system commands including screen management and global settings.\n * \n * @module modules/core-commands\n */\n\nimport { getScreenData } from \"../core/command-system.js\";\n\nexport function init( pi ) {\n\tconst piData = pi._.data;\n\n\t// Set the active screen\n\tpi._.addCommand( \"setScreen\", setScreen, false, false, [ \"screen\" ] );\n\tpi._.addSetting( \"screen\", setScreen, false, [ \"screen\" ] );\n\n\tfunction setScreen( args ) {\n\t\tconst screenObj = args[ 0 ];\n\t\tlet screenId;\n\n\t\tif( pi.util.isInteger( screenObj ) ) {\n\t\t\tscreenId = screenObj;\n\t\t} else if( screenObj && pi.util.isInteger( screenObj.id ) ) {\n\t\t\tscreenId = screenObj.id;\n\t\t}\n\n\t\tif( !piData.screens[ screenId ] ) {\n\t\t\tconst error = new Error( \"screen: Invalid screen.\" );\n\t\t\terror.code = \"INVALID_SCREEN\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.activeScreen = piData.screens[ screenId ];\n\t}\n\n\t// Remove all screens from the page and memory\n\tpi._.addCommand( \"removeAllScreens\", removeAllScreens, false, false, [] );\n\n\tfunction removeAllScreens() {\n\t\tfor( const i in piData.screens ) {\n\t\t\tconst screenData = piData.screens[ i ];\n\t\t\tscreenData.screenObj.removeScreen();\n\t\t}\n\t\tpiData.nextScreenId = 0;\n\t}\n\n\t// Get screen by ID\n\tpi._.addCommand( \"getScreen\", getScreen, false, false, [ \"screenId\" ] );\n\n\tfunction getScreen( args ) {\n\t\tconst screenId = args[ 0 ];\n\t\tconst screen = getScreenData( screenId, \"getScreen\" );\n\t\treturn screen.screenObj;\n\t}\n\n\t// Set the default color\n\tpi._.addCommand( \"setDefaultColor\", setDefaultColor, false, false, [ \"color\" ] );\n\tpi._.addSetting( \"defaultColor\", setDefaultColor, false, [ \"color\" ] );\n\n\tfunction setDefaultColor( args ) {\n\t\tlet c = args[ 0 ];\n\n\t\tif( !isNaN( Number( c ) ) && piData.defaultPalette.length > c ) {\n\t\t\tpiData.defaultColor = c;\n\t\t} else {\n\t\t\tc = pi.util.convertToColor( c );\n\t\t\tif( c === null ) {\n\t\t\t\tconst error = new TypeError(\n\t\t\t\t\t\"setDefaultColor: invalid color value for parameter color.\"\n\t\t\t\t);\n\t\t\t\terror.code = \"INVALID_COLOR\";\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tpiData.defaultColor = c;\n\t\t}\n\t}\n\n\t// Set the default palette\n\tpi._.addCommand( \"setDefaultPal\", setDefaultPal, false, false, [ \"pal\" ] );\n\tpi._.addSetting( \"defaultPal\", setDefaultPal, false, [ \"pal\" ] );\n\n\tfunction setDefaultPal( args ) {\n\t\tconst pal = args[ 0 ];\n\n\t\tif( !pi.util.isArray( pal ) ) {\n\t\t\tconst error = new TypeError( \"setDefaultPal: parameter pal is not an array.\" );\n\t\t\terror.code = \"INVALID_PARAMETER\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( pal.length < 1 ) {\n\t\t\tconst error = new RangeError(\n\t\t\t\t\"setDefaultPal: parameter pal must have at least one color value.\"\n\t\t\t);\n\t\t\terror.code = \"EMPTY_PALETTE\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tpiData.defaultPalette = [];\n\n\t\tif( pal.length > 1 ) {\n\t\t\tpiData.defaultColor = 1;\n\t\t} else {\n\t\t\tpiData.defaultColor = 0;\n\t\t}\n\n\t\tfor( let i = 0; i < pal.length; i++ ) {\n\t\t\tconst c = pi.util.convertToColor( pal[ i ] );\n\t\t\tif( c === null ) {\n\t\t\t\tconsole.warn( \"setDefaultPal: invalid color value inside array pal.\" );\n\t\t\t\tpiData.defaultPalette.push( pi.util.convertToColor( \"#000000\" ) );\n\t\t\t} else {\n\t\t\t\tpiData.defaultPalette.push( c );\n\t\t\t}\n\t\t}\n\n\t\t// Set color 0 to transparent\n\t\tconst firstColor = piData.defaultPalette[ 0 ];\n\t\tpiData.defaultPalette[ 0 ] = pi.util.convertToColor( [\n\t\t\tfirstColor.r,\n\t\t\tfirstColor.g,\n\t\t\tfirstColor.b,\n\t\t\t0\n\t\t] );\n\t}\n\n\t// Get default palette\n\tpi._.addCommand( \"getDefaultPal\", getDefaultPal, false, false, [] );\n\n\tfunction getDefaultPal() {\n\t\tconst colors = [];\n\t\tfor( const color of piData.defaultPalette ) {\n\t\t\tcolors.push( color );\n\t\t}\n\t\treturn colors;\n\t}\n\n\t// Set the default input focus element\n\tpi._.addCommand( \"setDefaultInputFocus\", setDefaultInputFocus, false, false, [ \"element\" ] );\n\tpi._.addSetting( \"defaultInputFocus\", setDefaultInputFocus, false, [ \"element\" ] );\n\n\tfunction setDefaultInputFocus( args ) {\n\t\tlet element = args[ 0 ];\n\n\t\tif( typeof element === \"string\" ) {\n\t\t\telement = document.getElementById( element );\n\t\t}\n\n\t\tif( !element || !pi.util.canAddEventListeners( element ) ) {\n\t\t\tconst error = new TypeError(\n\t\t\t\t\"setDefaultInputFocus: Invalid argument element. \" +\n\t\t\t\t\"Element must be a DOM element or string id of a DOM element.\"\n\t\t\t);\n\t\t\terror.code = \"INVALID_ELEMENT\";\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( !( element.tabIndex >= 0 ) ) {\n\t\t\telement.tabIndex = 0;\n\t\t}\n\n\t\tpiData.defaultInputFocus = element;\n\n\t\t// Reinitialize keyboard if command exists\n\t\tif( piData.commands[ \"reinitKeyboard\" ] ) {\n\t\t\tpiData.commands[ \"reinitKeyboard\" ]();\n\t\t}\n\t}\n\n\t// Global settings command\n\tpi._.addCommand( \"set\", set, false, true, piData.settingsList, true );\n\n\tfunction set( screenData, args ) {\n\t\tconst options = args[ 0 ];\n\n\t\t// Loop through all the options\n\t\tfor( const optionName in options ) {\n\t\t\t\n\t\t\t// If the option is a valid setting\n\t\t\tif( piData.settings[ optionName ] ) {\n\n\t\t\t\t// Get the setting data\n\t\t\t\tconst setting = piData.settings[ optionName ];\n\n\t\t\t\t// Parse the options from the setting\n\t\t\t\tlet optionValues = options[ optionName ];\n\n\t\t\t\tif(\n\t\t\t\t\t!pi.util.isArray( optionValues ) &&\n\t\t\t\t\ttypeof optionValues === \"object\"\n\t\t\t\t) {\n\t\t\t\t\toptionValues = pi._.parseOptions( setting, [ optionValues ] );\n\t\t\t\t} else {\n\t\t\t\t\toptionValues = [ optionValues ];\n\t\t\t\t}\n\n\t\t\t\t// Call the setting function\n\t\t\t\tif( setting.isScreen ) {\n\t\t\t\t\tif( !screenData ) {\n\t\t\t\t\t\tscreenData = getScreenData( undefined, `set ${setting.name}` );\n\t\t\t\t\t}\n\t\t\t\t\tsetting.fn( screenData, optionValues );\n\t\t\t\t} else {\n\t\t\t\t\tsetting.fn( optionValues );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"],
  "mappings": "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",
  "names": ["pad", "pi", "piData"]
}
